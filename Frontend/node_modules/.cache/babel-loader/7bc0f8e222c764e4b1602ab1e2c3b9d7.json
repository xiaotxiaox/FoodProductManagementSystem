{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\Gantt.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\Gantt.vue","mtime":1570526383574},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _parseInt from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\nimport 'dhtmlx-gantt';\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/locale/locale_cn.js';\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport api from '../../../../api/implement';\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nvar colHeader = '<div class =\"gantt_grid_head_cell gantt_grid_head_add\" onclick =\"gantt.createTask()\"> </div>';\n\nvar colContent = function colContent(task) {\n  return '<button type=\"button\" class=\"ant-btn ant-btn-default\"   onclick=\"gantt.showLightbox(' + task.id + ')\">编辑</button>';\n};\n\nvar opts = [{\n  key: '1',\n  label: '关键'\n}, {\n  key: '2',\n  label: '一般'\n}];\nexport default {\n  name: 'gantt',\n  props: {\n    project_id: String,\n    tasks: Object\n  },\n  data: function data() {\n    return {\n      infor: Object,\n      initialGantt: Object\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: _objectSpread({}, mapGetters(['projectSelected']), {\n    getData: function getData() {\n      var _this = this;\n\n      console.log(this.project_id);\n      var temp_id = this.project_id;\n      console.log(temp_id);\n      api.getInitialChart(this.project_id).then(function (data) {\n        _this.initialGantt = data[0];\n\n        var num = _parseInt(data[0].interval);\n\n        var sDate = data[0].start_date.split('-');\n        var start = new Date(sDate[0], sDate[1], sDate[2]);\n        var oDate = data[0].end_date.split('-');\n        var oDate1 = new Date(oDate[0], oDate[1], oDate[2]);\n\n        var iDays = _parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24);\n\n        gantt.config.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2]);\n\n        gantt.templates.task_text = function (s, e, task) {\n          return task.name;\n        };\n\n        gantt.config.scales = [{\n          unit: 'day',\n          step: iDays,\n          format: function format(date) {\n            var sDate = data[0].start_date.split('-');\n            var sDate1 = new Date(sDate[0], sDate[1], sDate[2]);\n            var eDate = data[0].end_date.split('-');\n            var eDate1 = new Date(eDate[0], eDate[1], eDate[2]);\n\n            var max = _parseInt(Math.abs(eDate1 - sDate1) / 1000 / 60 / 60 / 24);\n\n            var dateToStr = gantt.date.date_to_str('%Y-%m-%d');\n            var rDate = dateToStr(date).split('-');\n            var rDate1 = new Date(rDate[0], rDate[1], rDate[2]);\n\n            var result = _parseInt((rDate1 - sDate1) / 1000 / 60 / 60 / 24);\n\n            if (result <= max) {\n              return data[0].start_date + '到' + data[0].end_date;\n            } else {\n              return '超过预期';\n            }\n          }\n        }, {\n          unit: 'day',\n          step: num,\n          format: function format(date) {\n            var dateToStr = gantt.date.date_to_str('%Y-%m-%d');\n            var aDate = dateToStr(date).split('-');\n            var oDate1 = new Date(aDate[0], aDate[1], aDate[2]);\n            var sDate = data[0].start_date.split('-');\n            var start = new Date(sDate[0], sDate[1], sDate[2]);\n\n            var iDays = _parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24);\n\n            return iDays;\n          }\n        }]; //设置图标区域的日期坐标最大值\n\n        gantt.config.drag_resize = false;\n        gantt.config.drag_move = false;\n        gantt.config.drag_lightbox = true;\n        gantt.config.drag_links = false;\n        gantt.config.show_progress = false;\n        gantt.config.autofit = true; //设置图标区域间隔\n\n        gantt.config.columns = [{\n          id: 1,\n          name: 'chart_id',\n          label: '编号',\n          width: 50,\n          align: 'center'\n        }, {\n          id: 2,\n          name: 'name',\n          label: '名称',\n          width: 75,\n          align: 'center'\n        }, {\n          id: 3,\n          name: 'start_date',\n          label: '开始时间',\n          width: 86,\n          align: 'center',\n          format: '%YY-%mm-%dd'\n        }, {\n          id: 4,\n          name: 'end_date',\n          label: '截止时间',\n          width: 86,\n          align: 'center'\n        }, {\n          id: 5,\n          name: 'status',\n          label: '状态',\n          width: 32,\n          align: 'center'\n        }, {\n          name: 'buttons',\n          label: colHeader,\n          width: 95,\n          template: colContent\n        }];\n        gantt.init(_this.$refs.gantt);\n        gantt.parse(_this.$props.tasks); //为弹窗按钮添加函数\n        //删除delete\n\n        gantt.attachEvent('onLightboxDelete', function (id) {\n          var task = gantt.getTask(id);\n          console.log(gantt.getTask(id));\n          api.deleteProgress(task.chart_id).then(function (data) {\n            gantt.hideLightbox();\n          });\n          return false;\n        }); //取消cancle\n\n        gantt.attachEvent('onLightboxCancle', function (id) {\n          gantt.hideLightbox();\n          return false;\n        }); //保存save\n\n        gantt.attachEvent('onLightboxSave', function (id, task, is_new) {\n          console.log(\"2222222222222222\");\n          var temp = {};\n          var dateToStr2 = gantt.date.date_to_str('%Y-%m-%d');\n          temp.name = task.name;\n          temp.start_date = dateToStr2(task.start_date);\n          temp.end_date = dateToStr2(task.end_date);\n          temp.state = task.state;\n          temp.status = task.status;\n          this.infor = temp;\n\n          if (is_new) {\n            api.createProgress(temp_id, this.infor).then(function (data) {\n              gantt.hideLightbox();\n            });\n            console.log(\"23123213123123123\");\n          } else {\n            api.updateProgress(task.chart_id, this.infor).then(function (data) {\n              gantt.updateTask(task.id);\n              gantt.hideLightbox();\n            });\n          }\n\n          return false;\n        }); //自定义弹窗\n        // gantt.locale.labels.section_chart_id = '编号'\n\n        gantt.locale.labels.section_name = '名称';\n        gantt.locale.labels.section_sta = '状态';\n        gantt.config.lightbox.sections = [// { name: 'chart_id', height: 28, map_to: 'chart_id', type: 'textarea', focus: true },\n        {\n          name: 'name',\n          height: 28,\n          map_to: 'name',\n          type: 'textarea',\n          focus: true,\n          default_value: '新任务'\n        }, {\n          name: 'time',\n          height: 35,\n          map_to: {\n            start_date: 'start_date',\n            end_date: 'end_date'\n          },\n          type: 'time',\n          year_range: [1950, 2100]\n        }, {\n          name: 'sta',\n          height: 28,\n          map_to: 'state',\n          type: 'select',\n          options: opts\n        }];\n\n        gantt.templates.lightbox_header = function (start_date, end_date, task) {\n          return (gantt.templates.task_text(task.start_date, task.end_date, task) || '').substr(0, 70);\n        };\n      });\n    },\n    change: function change() {\n      var _this2 = this;\n\n      api.getProgressList(this.project_id).then(function (data) {\n        _this2.tasks.data = data;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(_this2.tasks.data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var temp = _step.value;\n            var sDate = temp.start_date.split('-');\n            temp.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2]);\n            var eDate = temp.end_date.split('-');\n            temp.end_date = new Date(eDate[0], eDate[1] - 1, eDate[2]);\n            temp.chart_id = '' + temp.chart_id + '';\n\n            if (temp.state == 1) {\n              temp.color = 'red';\n              temp.status = '关键';\n            } else {\n              temp.color = 'blue';\n              temp.status = '一般';\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  })\n};",{"version":3,"sources":["Gantt.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div ref=\"gantt\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'dhtmlx-gantt'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/locale/locale_cn.js'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/dhtmlxgantt.css'\r\nimport api from '../../../../api/implement'\r\nimport { mapGetters } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nvar colHeader = '<div class =\"gantt_grid_head_cell gantt_grid_head_add\" onclick =\"gantt.createTask()\"> </div>'\r\nvar colContent = function (task) {\r\n  return ('<button type=\"button\" class=\"ant-btn ant-btn-default\"   onclick=\"gantt.showLightbox(' + task.id + ')\">编辑</button>')\r\n}\r\n\r\nvar opts = [\r\n  { key: '1', label: '关键' },\r\n  { key: '2', label: '一般' },\r\n]\r\nexport default {\r\n  name: 'gantt',\r\n  props: {\r\n    project_id: String,\r\n    tasks: Object\r\n  },\r\n  data () {\r\n    return {\r\n      infor: Object,\r\n      initialGantt: Object,\r\n\r\n\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    getData () {\r\n      console.log(this.project_id)\r\n      var temp_id = this.project_id\r\n      console.log(temp_id)\r\n      api.getInitialChart(this.project_id)\r\n        .then(data => {\r\n          this.initialGantt = data[0]\r\n          var num = parseInt(data[0].interval)\r\n          var sDate = data[0].start_date.split('-')\r\n          var start = new Date(sDate[0], sDate[1], sDate[2])\r\n          var oDate = data[0].end_date.split('-')\r\n          var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n          var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n          gantt.config.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n          gantt.templates.task_text = function (s, e, task) {\r\n            return task.name\r\n          }\r\n          gantt.config.scales = [\r\n            {\r\n              unit: 'day', step: iDays, format: function (date) {\r\n                var sDate = data[0].start_date.split('-')\r\n                var sDate1 = new Date(sDate[0], sDate[1], sDate[2])\r\n                var eDate = data[0].end_date.split('-')\r\n                var eDate1 = new Date(eDate[0], eDate[1], eDate[2])\r\n                var max = parseInt(Math.abs(eDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var rDate = dateToStr(date).split('-')\r\n                var rDate1 = new Date(rDate[0], rDate[1], rDate[2])\r\n                var result = parseInt((rDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                if (result <= max) {\r\n                  return data[0].start_date + '到' + data[0].end_date\r\n                } else {\r\n                  return '超过预期'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              unit: 'day', step: num, format: function (date) {\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var aDate = dateToStr(date).split('-')\r\n                var oDate1 = new Date(aDate[0], aDate[1], aDate[2])\r\n                var sDate = data[0].start_date.split('-')\r\n                var start = new Date(sDate[0], sDate[1], sDate[2])\r\n                var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n                return iDays\r\n              }\r\n            }\r\n          ]\r\n          //设置图标区域的日期坐标最大值\r\n          gantt.config.drag_resize = false\r\n          gantt.config.drag_move = false\r\n          gantt.config.drag_lightbox = true\r\n          gantt.config.drag_links = false\r\n          gantt.config.show_progress = false\r\n          gantt.config.autofit = true\r\n          //设置图标区域间隔\r\n          gantt.config.columns = [\r\n            { id: 1, name: 'chart_id', label: '编号', width: 50, align: 'center' },\r\n            { id: 2, name: 'name', label: '名称', width: 75, align: 'center' },\r\n            { id: 3, name: 'start_date', label: '开始时间', width: 86, align: 'center', format: '%YY-%mm-%dd' },\r\n            { id: 4, name: 'end_date', label: '截止时间', width: 86, align: 'center' },\r\n            { id: 5, name: 'status', label: '状态', width: 32, align: 'center' },\r\n            {\r\n              name: 'buttons',\r\n              label: colHeader,\r\n              width: 95,\r\n              template: colContent\r\n            }\r\n          ]\r\n\r\n          gantt.init(this.$refs.gantt)\r\n          gantt.parse(this.$props.tasks)\r\n          //为弹窗按钮添加函数\r\n          //删除delete\r\n          gantt.attachEvent('onLightboxDelete', function (id) {\r\n            var task = gantt.getTask(id)\r\n            console.log(gantt.getTask(id))\r\n            api.deleteProgress(task.chart_id)\r\n              .then(data => {\r\n                gantt.hideLightbox()\r\n              })\r\n            return false\r\n          })\r\n          //取消cancle\r\n          gantt.attachEvent('onLightboxCancle', function (id) {\r\n            gantt.hideLightbox()\r\n            return false\r\n          })\r\n          //保存save\r\n\r\n          gantt.attachEvent('onLightboxSave', function (id, task, is_new) {\r\n            console.log(\"2222222222222222\")\r\n            var temp = {}\r\n            var dateToStr2 = gantt.date.date_to_str('%Y-%m-%d')\r\n            temp.name = task.name\r\n            temp.start_date = dateToStr2(task.start_date)\r\n            temp.end_date = dateToStr2(task.end_date)\r\n            temp.state = task.state\r\n            temp.status = task.status\r\n            this.infor = temp\r\n            if (is_new) {\r\n              api.createProgress(temp_id, this.infor)\r\n                .then(data => {\r\n                  gantt.hideLightbox()\r\n\r\n                })\r\n              console.log(\"23123213123123123\")\r\n            }\r\n            else {\r\n              api.updateProgress(task.chart_id, this.infor)\r\n                .then(data => {\r\n                  gantt.updateTask(task.id)\r\n                  gantt.hideLightbox()\r\n                })\r\n            }\r\n            return false\r\n          })\r\n          //自定义弹窗\r\n          // gantt.locale.labels.section_chart_id = '编号'\r\n          gantt.locale.labels.section_name = '名称'\r\n          gantt.locale.labels.section_sta = '状态'\r\n          gantt.config.lightbox.sections = [\r\n            // { name: 'chart_id', height: 28, map_to: 'chart_id', type: 'textarea', focus: true },\r\n            { name: 'name', height: 28, map_to: 'name', type: 'textarea', focus: true, default_value: '新任务' },\r\n            {\r\n              name: 'time',\r\n              height: 35,\r\n              map_to: { start_date: 'start_date', end_date: 'end_date' },\r\n              type: 'time',\r\n              year_range: [1950, 2100]\r\n            },\r\n            { name: 'sta', height: 28, map_to: 'state', type: 'select', options: opts }\r\n          ]\r\n          gantt.templates.lightbox_header = function (start_date, end_date, task) {\r\n            return (gantt.templates.task_text(task.start_date, task.end_date, task) || '').substr(0, 70)\r\n          }\r\n\r\n        })\r\n    },\r\n    change () {\r\n      api.getProgressList(this.project_id)\r\n        .then(data => {\r\n          this.tasks.data = data\r\n          for (var temp of this.tasks.data) {\r\n            var sDate = temp.start_date.split('-')\r\n            temp.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n            var eDate = temp.end_date.split('-')\r\n            temp.end_date = new Date(eDate[0], eDate[1] - 1, eDate[2])\r\n            temp.chart_id = '' + temp.chart_id + ''\r\n            if (temp.state == 1) {\r\n              temp.color = 'red'\r\n              temp.status = '关键'\r\n            } else {\r\n              temp.color = 'blue'\r\n              temp.status = '一般'\r\n            }\r\n          }\r\n        })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .gantt_cal_light_wide.gantt_cal_light_full {\r\n    width: 550px;\r\n  }\r\n</style>"],"sourceRoot":"src/views/implement/progress/components"}]}