{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\extra\\MarkerClusterer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\extra\\MarkerClusterer.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport MarkerClusterer from 'bmaplib.markerclusterer';\nimport { createSize } from '../base/factory.js';\nimport commonMixin from '../base/mixins/common.js';\nexport default {\n  name: 'bml-marker-clusterer',\n  mixins: [commonMixin('markerClusterer')],\n  props: {\n    gridSize: {\n      type: Object\n    },\n    maxZoom: {\n      type: Number\n    },\n    minClusterSize: {\n      type: Number\n    },\n    styles: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    averageCenter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    gridSize: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n            originInstance = this.originInstance;\n        originInstance.setGridSize(BMap, val.map);\n      },\n      deep: true\n    },\n    maxZoom: function maxZoom(val) {\n      var originInstance = this.originInstance;\n      originInstance.setMaxZoom(val);\n    },\n    minClusterSize: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n            originInstance = this.originInstance;\n        originInstance.setMinClusterSize(createSize(BMap, val));\n      },\n      deep: true\n    },\n    styles: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n            originInstance = this.originInstance;\n        var obj = JSON.parse(_JSON$stringify(val)).map(function (item) {\n          item.size = item.size && createSize(BMap, item.size);\n          return item;\n        });\n        originInstance.setStyles(obj);\n      },\n      deep: true\n    },\n    averageCenter: function averageCenter(val) {\n      this.reload();\n    }\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      var BMap = this.BMap,\n          map = this.map,\n          gridSize = this.gridSize,\n          minClusterSize = this.minClusterSize,\n          maxZoom = this.maxZoom,\n          styles = this.styles,\n          averageCenter = this.averageCenter;\n      this.originInstance = new MarkerClusterer(map, {\n        gridSize: gridSize && createSize(BMap, gridSize),\n        maxZoom: maxZoom,\n        minClusterSize: minClusterSize && createSize(BMap, minClusterSize),\n        styles: styles.map(function (item) {\n          item.size = createSize(BMap, item.size);\n          return item;\n        }),\n        isAverageCenter: averageCenter\n      });\n      this.$nextTick(function () {\n        var markers = _this.$children.map(function (inst) {\n          return inst.originInstance;\n        }).filter(function (marker) {\n          return marker instanceof BMap.Marker;\n        });\n\n        _this.originInstance.addMarkers(markers);\n      });\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    this.preventChildrenRender = true;\n  }\n};",{"version":3,"sources":["MarkerClusterer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<span>\n  <slot></slot>\n</span>\n</template>\n\n<script>\nimport MarkerClusterer from 'bmaplib.markerclusterer'\nimport {createSize} from '../base/factory.js'\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bml-marker-clusterer',\n  mixins: [commonMixin('markerClusterer')],\n  props: {\n    gridSize: {\n      type: Object\n    },\n    maxZoom: {\n      type: Number\n    },\n    minClusterSize: {\n      type: Number\n    },\n    styles: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    averageCenter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    gridSize: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        originInstance.setGridSize(BMap, val.map)\n      },\n      deep: true\n    },\n    maxZoom (val) {\n      const {originInstance} = this\n      originInstance.setMaxZoom(val)\n    },\n    minClusterSize: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        originInstance.setMinClusterSize(createSize(BMap, val))\n      },\n      deep: true\n    },\n    styles: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        const obj = JSON.parse(JSON.stringify(val)).map(item => {\n          item.size = item.size && createSize(BMap, item.size)\n          return item\n        })\n        originInstance.setStyles(obj)\n      },\n      deep: true\n    },\n    averageCenter (val) {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, gridSize, minClusterSize, maxZoom, styles, averageCenter} = this\n      this.originInstance = new MarkerClusterer(map, {\n        gridSize: gridSize && createSize(BMap, gridSize),\n        maxZoom,\n        minClusterSize: minClusterSize && createSize(BMap, minClusterSize),\n        styles: styles.map(item => {\n          item.size = createSize(BMap, item.size)\n          return item\n        }),\n        isAverageCenter: averageCenter\n      })\n      this.$nextTick(() => {\n        const markers = this.$children.map(inst => inst.originInstance).filter(marker => marker instanceof BMap.Marker)\n        this.originInstance.addMarkers(markers)\n      })\n    }\n  },\n  beforeCreate () {\n    this.preventChildrenRender = true\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/extra"}]}