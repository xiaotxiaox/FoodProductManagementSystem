{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\setting\\userPermissions\\components\\UsersModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\setting\\userPermissions\\components\\UsersModal.vue","mtime":1568978844956},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _getIterator from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '../../../../api/setting';\nimport AFormItem from 'ant-design-vue/es/form/FormItem';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'userModal',\n  components: {\n    AFormItem: AFormItem\n  },\n  props: {\n    record: Object,\n    visible: Boolean,\n    type: String,\n    users_id: Number\n  },\n  data: function data() {\n    return {\n      layout: {\n        'label-col': {\n          span: 8\n        },\n        'wrapper-col': {\n          span: 12\n        }\n      },\n      form: this.$form.createForm(this),\n      users: {},\n      rolesList: []\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      api.getSettingRoles().then(function (data) {\n        console.log(data);\n        _this.rolesList = data;\n      });\n\n      if (this.isEdit) {\n        api.getSettingUsersMatter(this.record.id).then(function (data) {\n          _this.users = data;\n        });\n      }\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      this.form.validateFields(function (error, data) {\n        if (!error) {\n          var result = [];\n          console.log(data.role);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(_this2.rolesList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var temp = _step.value;\n\n              if (temp.name == data.role) {\n                console.log(temp.name);\n                result.push(temp);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          console.log(result[0]);\n          data.role = result[0];\n\n          if (_this2.isEdit) {\n            api.updateSettingUsersMatter(_this2.record.id, data).then(function (data) {\n              _this2.$notification.success({\n                message: '成功',\n                description: '更新成功',\n                key: 'SUCCESS'\n              });\n\n              _this2.$emit('close');\n            });\n          } else {\n            // var te=null\n            //    for (var temp of this.rolesList) {\n            //      if (temp.name == data.role.name) {\n            //        console.log(temp)\n            //        console.log(\"tempid\")\n            //        console.log(temp.id)\n            //        te=temp.id\n            //      }\n            //    }\n            //    data.role=te\n            api.createSettingUsersMatter(data).then(function (data) {\n              _this2.$notification.success({\n                message: '成功',\n                description: '新建成功',\n                key: 'SUCCESS'\n              });\n\n              _this2.$emit('close');\n            });\n          }\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.$emit('close');\n    },\n    validatePassword: function validatePassword(rule, value, callback) {\n      if (/[\\u4e00-\\u9fa5]/.test(value)) {\n        callback('id can not contain chinese');\n      } else {\n        callback();\n      }\n    },\n    validateSortPsw: function validateSortPsw(rule, value, callback) {\n      if (/[\\u4e00-\\u9fa5]/.test(value)) {\n        callback('id can not contain chinese');\n      } else {\n        callback();\n      }\n    }\n  },\n  computed: {\n    isEdit: function isEdit() {\n      return this.type === 'edit';\n    },\n    title: function title() {\n      return this.isEdit ? '编辑' : '新建';\n    }\n  }\n};",{"version":3,"sources":["UsersModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleOk()\"\r\n    @cancel=\"handleCancel()\">\r\n    <a-form\r\n      :form=\"form\"\r\n     v-if=\"isEdit\">\r\n      <a-form-item\r\n        label=\"用户名\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'username',\r\n            {\r\n              rules:[\r\n                { required: true, message: '请输入用户名' },\r\n                { max:128, message: '长度在128个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.username : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"角色选择\"\r\n        v-bind=\"layout\">\r\n        <a-select\r\n          placeholder=\"请选择角色类型\"\r\n          v-decorator=\"[\r\n           'role',\r\n           {\r\n             rules: [\r\n              {required: true, message: '请选择角色类型'}\r\n             ],\r\n             initialValue: record ? record.role.name : null\r\n           }\r\n         ]\">\r\n          <a-select-option\r\n            v-for=\"item in rolesList\"\r\n            :key=\"item.name\"\r\n            :name=\"item.name\">\r\n            {{ item.name }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"邮箱\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"email\"\r\n          autocomplete=\"true\"\r\n          placeholder=\"123456@163.com\"\r\n          v-decorator=\"[\r\n                'email',\r\n                {rules: [\r\n                { required: true, message: '请输入邮箱地址' },\r\n                {\r\n              type: 'email', message: '请输入正确邮箱地址',\r\n            }\r\n                 ],\r\n                 validateTrigger: 'blur',\r\n                 initialValue: record ? record.email : null}\r\n              ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"姓名\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n          'first_name',\r\n          {\r\n            rules: [\r\n            { required: true, message: '请输入姓名' },\r\n              { max:128, message: '长度在6个汉字以内' }\r\n            ],\r\n            validateTrigger: 'blur',\r\n            initialValue: record ? record.first_name : null\r\n          }\r\n        ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n    </a-form>\r\n    <a-form\r\n      :form=\"form\"\r\n     v-else>\r\n      <a-form-item\r\n        label=\"用户名\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'username',\r\n            {\r\n              rules:[\r\n                { required: true, message: '请输入用户名' },\r\n                { max:128, message: '长度在128个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              // initialValue: record ? record.username : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"角色选择\"\r\n        v-bind=\"layout\">\r\n        <a-select\r\n          placeholder=\"请选择角色类型\"\r\n          v-decorator=\"[\r\n           'role',\r\n           {\r\n             rules: [\r\n              {required: true, message: '请选择角色类型'}\r\n             ],\r\n             initialValue: record ? record.role.name : null\r\n           }\r\n         ]\">\r\n          <a-select-option\r\n            v-for=\"item in rolesList\"\r\n            :key=\"item.name\"\r\n            :name=\"item.name\">\r\n            {{ item.name }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"邮箱\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"email\"\r\n          autocomplete=\"true\"\r\n          placeholder=\"123456@163.com\"\r\n          v-decorator=\"[\r\n                'email',\r\n                {rules: [\r\n                { required: true, message: '请输入邮箱地址' },\r\n                {\r\n              type: 'email', message: '请输入正确邮箱地址',\r\n            }\r\n                 ],\r\n                 validateTrigger: 'blur',\r\n                 initialValue: record ? record.email : null}\r\n              ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"姓名\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n          'first_name',\r\n          {\r\n            rules: [\r\n            { required: true, message: '请输入姓名' },\r\n              { max:128, message: '长度在6个汉字以内' }\r\n            ],\r\n            validateTrigger: 'blur',\r\n            initialValue: record ? record.first_name : null\r\n          }\r\n        ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"密码\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"password\"\r\n          autocomplete=\"true\"\r\n          placeholder=\"请输入6-16位长度的密码\"\r\n          v-decorator=\"[\r\n            'password',\r\n            {rules: [\r\n              {required: true, message: '请输入密码'},\r\n              {pattern:/[1-9a-zA-Z]{6,16}/, message: '密码格式错误'}\r\n            ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.password : null}\r\n           ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"密码确认\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          v-decorator=\"[\r\n            'retry_password',\r\n            {\r\n              rules: [\r\n                { max:128, message: '请再次输入密码' },\r\n                {required: true, message: '请再次确认密码'},\r\n                {validator:validateSortPsw , message: '密码再次输入不正确'},\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.retry_password : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import api from '../../../../api/setting'\r\n  import AFormItem from 'ant-design-vue/es/form/FormItem'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  export default {\r\n    name: 'userModal',\r\n    components: {AFormItem},\r\n    props: {\r\n      record: Object,\r\n      visible: Boolean,\r\n      type: String,\r\n      users_id: Number\r\n    },\r\n    data() {\r\n      return {\r\n        layout: {\r\n          'label-col': {span: 8},\r\n          'wrapper-col': {span: 12}\r\n        },\r\n        form: this.$form.createForm(this),\r\n        users: {},\r\n        rolesList: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData() {\r\n        api.getSettingRoles().then(data => {\r\n          console.log(data)\r\n          this.rolesList = data\r\n        })\r\n        if (this.isEdit) {\r\n          api.getSettingUsersMatter(this.record.id)\r\n            .then(data => {\r\n              this.users = data\r\n            })\r\n        }\r\n      },\r\n      handleOk() {\r\n        this.form.validateFields((error, data) => {\r\n          if (!error) {\r\n             var result = []\r\n            console.log(data.role)\r\n            for (var temp of this.rolesList) {\r\n              if (temp.name == data.role) {\r\n                console.log(temp.name)\r\n                result.push(temp)\r\n              }\r\n            }\r\n            console.log(result[0])\r\n            data.role = result[0]\r\n            if (this.isEdit) {\r\n\r\n              api.updateSettingUsersMatter(this.record.id, data)\r\n                .then(data => {\r\n                  this.$notification.success({message: '成功', description: '更新成功', key: 'SUCCESS'})\r\n                  this.$emit('close')\r\n                })\r\n            } else {\r\n               // var te=null\r\n               //    for (var temp of this.rolesList) {\r\n               //      if (temp.name == data.role.name) {\r\n               //        console.log(temp)\r\n               //        console.log(\"tempid\")\r\n               //        console.log(temp.id)\r\n               //        te=temp.id\r\n               //      }\r\n               //    }\r\n               //    data.role=te\r\n              api.createSettingUsersMatter(data)\r\n                .then(data => {\r\n                  this.$notification.success({message: '成功', description: '新建成功', key: 'SUCCESS'})\r\n                  this.$emit('close')\r\n                })\r\n            }\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.$emit('close')\r\n      },\r\n      validatePassword(rule, value, callback) {\r\n        if (/[\\u4e00-\\u9fa5]/.test(value)) {\r\n          callback('id can not contain chinese')\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      validateSortPsw(rule, value, callback) {\r\n        if (/[\\u4e00-\\u9fa5]/.test(value)) {\r\n          callback('id can not contain chinese')\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n\r\n\r\n    },\r\n    computed: {\r\n      isEdit() {\r\n        return this.type === 'edit'\r\n      },\r\n      title() {\r\n        return this.isEdit ? '编辑' : '新建'\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/setting/userPermissions/components"}]}