{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\FoodProductManagementSystem\\Frontend\\src\\api\\project.js","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\api\\project.js","mtime":1572857662520},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":1575333166264}],"contextDependencies":[],"result":["import fetchAPI from '../utils/fetch';\nexport default {\n  getProjectList: function getProjectList(params) {\n    return fetchAPI('project/', 'get', null, params);\n  },\n  getProjectStatistics: function getProjectStatistics(params) {\n    return fetchAPI('project/statistics/', 'get', null);\n  },\n  createProject: function createProject(project) {\n    return fetchAPI('project/', 'post', project);\n  },\n  getProject: function getProject(id) {\n    return fetchAPI(\"project/\".concat(id, \"/\"), 'get');\n  },\n  updateProject: function updateProject(project) {\n    return fetchAPI(\"project/\".concat(project.id, \"/\"), 'put', project);\n  },\n  deleteProject: function deleteProject(id) {\n    return fetchAPI(\"project/\".concat(id, \"/\"), 'delete');\n  },\n  getScaleList: function getScaleList() {\n    return fetchAPI('project/scale/', 'get');\n  },\n  getPropertyList: function getPropertyList() {\n    return fetchAPI('project/property/', 'get');\n  },\n  getPurposeList: function getPurposeList() {\n    return fetchAPI('project/purpose/', 'get');\n  },\n  getFundSourcesList: function getFundSourcesList() {\n    return fetchAPI('project/fundSources/', 'get');\n  },\n  getStyleList: function getStyleList() {\n    return fetchAPI('project/style/', 'get');\n  },\n  validateID: function validateID(id) {\n    return fetchAPI('project/checkID/', 'post', {\n      id: id\n    });\n  },\n  //System settings\n  deleteSettingMatter: function deleteSettingMatter(matter_id) {\n    return fetchAPI(\"project/settings/matter/\".concat(matter_id, \"/\"), 'delete');\n  },\n  getMapList: function getMapList(project_id) {\n    return fetchAPI('project/location/', 'get', null, {\n      project_id: project_id\n    });\n  },\n  updateMapList: function updateMapList(project_id, data) {\n    return fetchAPI(\"project/location/\".concat(project_id, \"/\"), 'put', data);\n  },\n  createMapList: function createMapList(project_id, data) {\n    return fetchAPI(\"project/location/\", 'post', data, {\n      project_id: project_id\n    });\n  }\n};",{"version":3,"sources":["E:\\FoodProductManagementSystem\\Frontend\\src\\api\\project.js"],"names":["fetchAPI","getProjectList","params","getProjectStatistics","createProject","project","getProject","id","updateProject","deleteProject","getScaleList","getPropertyList","getPurposeList","getFundSourcesList","getStyleList","validateID","deleteSettingMatter","matter_id","getMapList","project_id","updateMapList","data","createMapList"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AAEA,eAAe;AACbC,EAAAA,cADa,0BACGC,MADH,EACW;AACtB,WAAOF,QAAQ,CAAC,UAAD,EAAa,KAAb,EAAoB,IAApB,EAA0BE,MAA1B,CAAf;AACD,GAHY;AAIbC,EAAAA,oBAJa,gCAISD,MAJT,EAIiB;AAC5B,WAAOF,QAAQ,CAAC,qBAAD,EAAwB,KAAxB,EAA+B,IAA/B,CAAf;AACD,GANY;AAObI,EAAAA,aAPa,yBAOEC,OAPF,EAOW;AACtB,WAAOL,QAAQ,CAAC,UAAD,EAAa,MAAb,EAAqBK,OAArB,CAAf;AACD,GATY;AAUbC,EAAAA,UAVa,sBAUDC,EAVC,EAUG;AACd,WAAOP,QAAQ,mBAAYO,EAAZ,QAAmB,KAAnB,CAAf;AACD,GAZY;AAabC,EAAAA,aAba,yBAaEH,OAbF,EAaW;AACtB,WAAOL,QAAQ,mBAAYK,OAAO,CAACE,EAApB,QAA2B,KAA3B,EAAkCF,OAAlC,CAAf;AACD,GAfY;AAgBbI,EAAAA,aAhBa,yBAgBEF,EAhBF,EAgBM;AACjB,WAAOP,QAAQ,mBAAYO,EAAZ,QAAmB,QAAnB,CAAf;AACD,GAlBY;AAmBbG,EAAAA,YAnBa,0BAmBG;AACd,WAAOV,QAAQ,CAAC,gBAAD,EAAmB,KAAnB,CAAf;AACD,GArBY;AAsBbW,EAAAA,eAtBa,6BAsBM;AACjB,WAAOX,QAAQ,CAAC,mBAAD,EAAsB,KAAtB,CAAf;AACD,GAxBY;AAyBbY,EAAAA,cAzBa,4BAyBK;AAChB,WAAOZ,QAAQ,CAAC,kBAAD,EAAqB,KAArB,CAAf;AACD,GA3BY;AA4Bba,EAAAA,kBA5Ba,gCA4BS;AACpB,WAAOb,QAAQ,CAAC,sBAAD,EAAyB,KAAzB,CAAf;AACD,GA9BY;AA+Bbc,EAAAA,YA/Ba,0BA+BG;AACd,WAAOd,QAAQ,CAAC,gBAAD,EAAmB,KAAnB,CAAf;AACD,GAjCY;AAkCbe,EAAAA,UAlCa,sBAkCDR,EAlCC,EAkCG;AACd,WAAOP,QAAQ,CAAC,kBAAD,EAAqB,MAArB,EAA6B;AAAEO,MAAAA,EAAE,EAAFA;AAAF,KAA7B,CAAf;AACD,GApCY;AAqCb;AACAS,EAAAA,mBAtCa,+BAsCQC,SAtCR,EAsCmB;AAC9B,WAAOjB,QAAQ,mCAA4BiB,SAA5B,QAA0C,QAA1C,CAAf;AACD,GAxCY;AAyCbC,EAAAA,UAzCa,sBAyCDC,UAzCC,EAyCW;AACtB,WAAOnB,QAAQ,CAAC,mBAAD,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC;AAAEmB,MAAAA,UAAU,EAAVA;AAAF,KAAnC,CAAf;AACD,GA3CY;AA4CbC,EAAAA,aA5Ca,yBA4CED,UA5CF,EA4CaE,IA5Cb,EA4CmB;AAC9B,WAAOrB,QAAQ,4BAAqBmB,UAArB,QAAoC,KAApC,EAA2CE,IAA3C,CAAf;AACD,GA9CY;AA+CbC,EAAAA,aA/Ca,yBA+CEH,UA/CF,EA+CaE,IA/Cb,EA+CmB;AAC9B,WAAOrB,QAAQ,sBAAsB,MAAtB,EAA8BqB,IAA9B,EAAmC;AAACF,MAAAA,UAAU,EAAVA;AAAD,KAAnC,CAAf;AACD;AAjDY,CAAf","sourcesContent":["import fetchAPI from '../utils/fetch'\r\n\r\nexport default {\r\n  getProjectList (params) {\r\n    return fetchAPI('project/', 'get', null, params)\r\n  },\r\n  getProjectStatistics (params) {\r\n    return fetchAPI('project/statistics/', 'get', null)\r\n  },\r\n  createProject (project) {\r\n    return fetchAPI('project/', 'post', project)\r\n  },\r\n  getProject (id) {\r\n    return fetchAPI(`project/${id}/`, 'get')\r\n  },\r\n  updateProject (project) {\r\n    return fetchAPI(`project/${project.id}/`, 'put', project)\r\n  },\r\n  deleteProject (id) {\r\n    return fetchAPI(`project/${id}/`, 'delete')\r\n  },\r\n  getScaleList () {\r\n    return fetchAPI('project/scale/', 'get')\r\n  },\r\n  getPropertyList () {\r\n    return fetchAPI('project/property/', 'get')\r\n  },\r\n  getPurposeList () {\r\n    return fetchAPI('project/purpose/', 'get')\r\n  },\r\n  getFundSourcesList () {\r\n    return fetchAPI('project/fundSources/', 'get')\r\n  },\r\n  getStyleList () {\r\n    return fetchAPI('project/style/', 'get')\r\n  },\r\n  validateID (id) {\r\n    return fetchAPI('project/checkID/', 'post', { id })\r\n  },\r\n  //System settings\r\n  deleteSettingMatter (matter_id) {\r\n    return fetchAPI(`project/settings/matter/${matter_id}/`, 'delete')\r\n  },\r\n  getMapList (project_id) {\r\n    return fetchAPI('project/location/', 'get', null, { project_id })\r\n  },\r\n  updateMapList (project_id,data) {\r\n    return fetchAPI(`project/location/${project_id}/`, 'put', data)\r\n  },\r\n  createMapList (project_id,data) {\r\n    return fetchAPI(`project/location/`, 'post', data,{project_id})\r\n  },\r\n\r\n}\r\n"]}]}