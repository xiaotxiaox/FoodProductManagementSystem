{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\project\\Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\project\\Project.vue","mtime":1575102981579},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport _objectSpread from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations } from 'vuex';\nimport router from '../../router';\nimport PageLayout from '../../components/page/PageLayout';\nimport ProjectCard from './components/Card';\nimport api from '../../api/project';\nimport ARow from 'ant-design-vue/es/grid/Row';\nimport { BaiduMap, BmScale, BmMapType, BmNavigation, BmGeolocation, BmMarker, BmInfoWindow, BmLabel, BmLocalSearch, BmControl, BmAutoComplete } from 'vue-baidu-map/components';\nvar projectList = [{\n  name: '123'\n}];\nexport default {\n  name: 'Project',\n  components: {\n    ARow: ARow,\n    PageLayout: PageLayout,\n    ProjectCard: ProjectCard,\n    BaiduMap: BaiduMap,\n    BmScale: BmScale,\n    BmMapType: BmMapType,\n    BmNavigation: BmNavigation,\n    BmGeolocation: BmGeolocation,\n    BmMarker: BmMarker,\n    BmInfoWindow: BmInfoWindow,\n    BmLabel: BmLabel,\n    BmLocalSearch: BmLocalSearch,\n    BmControl: BmControl,\n    BmAutoComplete: BmAutoComplete\n  },\n  data: function data() {\n    return {\n      point: {\n        lng: 122.1,\n        lat: 37.2\n      },\n      show: false,\n      keyword: '',\n      params: {\n        min_investment: '',\n        max_investment: '',\n        min_date: '',\n        max_date: '',\n        search: '',\n        page: 1,\n        ordering: '-starting_date'\n      },\n      filter: {\n        investment: '',\n        year: ''\n      },\n      projectStatistics: {},\n      status: {\n        loading: true\n      },\n      layout: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 12\n        },\n        xl: {\n          span: 6\n        }\n      },\n      projectCount: 0,\n      projectList: projectList\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: _objectSpread({}, mapMutations(['SET_PROJECT']), {\n    handler: function handler(_ref) {\n      var BMap = _ref.BMap,\n          map = _ref.map;\n    },\n    output: function output(item) {\n      var _this = this;\n\n      var project = {};\n      item.id = item.project;\n      api.getProject(item.id).then(function (data) {\n        project = data;\n\n        _this.SET_PROJECT(project);\n\n        var role = _this.$store.getters.role;\n\n        if (role.permissionList.indexOf('project_selected') === -1) {\n          role.permissionList.push('project_selected');\n        }\n\n        _this.$store.commit('SET_ROLE', role);\n\n        _this.$store.dispatch('GenerateRoutes', {\n          roles: role\n        });\n\n        router.addRoutes(_this.$store.getters.addRouters);\n        router.push({\n          name: 'detail'\n        });\n      });\n    },\n    // addPoint(e) {\n    //   this.BMap.setMarker(e.point)\n    //   // let map = new BMap.Map()\n    //   // var point = new BMap.Point(e.point.lng,e.point.lat)\n    //   // var maker = new BMap.Marker(point)\n    //   // map.addOverlay(maker)\n    //   this.addMarker(marker)\n    //   alert(\"a\")\n    // },\n    infoWindowClose: function infoWindowClose() {\n      this.show = false;\n    },\n    infoWindowOpen: function infoWindowOpen() {\n      this.show = true;\n    },\n    getData: function getData() {\n      var _this2 = this;\n\n      this.status.loading = true;\n      this.status.loading = false; // api.getProjectList(this.params)\n      //   .then(data => {\n      //     console.log(data)\n      //     this.projectList = data.results\n      //     this.projectCount = data.count\n      //     this.status.loading = false\n      //   })\n\n      api.getProjectStatistics().then(function (data) {\n        _this2.projectStatistics = data;\n      });\n    },\n    handelePage: function handelePage(page) {\n      this.params.page = page;\n      this.getData();\n    },\n    handleFilterByInvestment: function handleFilterByInvestment(value) {\n      switch (value) {\n        case 1:\n          this.params.min_investment = '';\n          this.params.max_investment = '500';\n          break;\n\n        case 2:\n          this.params.min_investment = '500';\n          this.params.max_investment = '1000';\n          break;\n\n        case 3:\n          this.params.min_investment = '1000';\n          this.params.max_investment = '2000';\n          break;\n\n        case 4:\n          this.params.min_investment = '2000';\n          this.params.max_investment = '';\n          break;\n\n        default:\n          this.params.min_investment = '';\n          this.params.max_investment = '';\n          this.filter.investment = '';\n          break;\n      }\n\n      this.getData();\n    },\n    handleFilterByYear: function handleFilterByYear(value) {\n      switch (value) {\n        case 0:\n          this.params.min_date = this.yearList[0] + '-01-01';\n          this.params.max_date = this.yearList[0] + '-12-31';\n          break;\n\n        case 1:\n          this.params.min_date = this.yearList[1] + '-01-01';\n          this.params.max_date = this.yearList[1] + '-12-31';\n          break;\n\n        case 2:\n          this.params.min_date = this.yearList[2] + '-01-01';\n          this.params.max_date = this.yearList[2] + '-12-31';\n          break;\n\n        case 3:\n          this.params.min_date = this.yearList[3] + '-01-01';\n          this.params.max_date = this.yearList[3] + '-12-31';\n          break;\n\n        case 4:\n          this.params.max_date = this.yearList[3] + '-12-31';\n          break;\n\n        default:\n          this.params.min_date = '';\n          this.params.max_date = '';\n          this.filter.year = '';\n          break;\n      }\n\n      this.getData();\n    },\n    handleSearch: function handleSearch() {\n      this.getData();\n    },\n    handleClearParams: function handleClearParams() {\n      this.filter.investment = '';\n      this.filter.year = '';\n      this.params.ordering = 'starting_date';\n      this.params.min_investment = '';\n      this.params.max_investment = '';\n      this.params.min_date = '';\n      this.params.max_date = '';\n      this.params.search = '';\n      this.params.page = 1;\n      this.getData();\n    },\n    handleProjectSelect: function handleProjectSelect(project) {\n      console.log(project);\n      this.SET_PROJECT(project);\n      var role = this.$store.getters.role;\n\n      if (role.permissionList.indexOf('project_selected') === -1) {\n        role.permissionList.push('project_selected');\n      }\n\n      console.log(role);\n      this.$store.commit('SET_ROLE', role);\n      this.$store.dispatch('GenerateRoutes', {\n        roles: role\n      });\n      router.addRoutes(this.$store.getters.addRouters);\n      router.push({\n        name: 'detail'\n      });\n    }\n  }),\n  computed: {\n    project: function project() {\n      return this.$store.getters.projectSelected;\n    },\n    yearList: function yearList() {\n      var ret = [];\n      var year = new Date().getFullYear();\n\n      for (var i = 0; i < 4; i++) {\n        ret.push(year - i);\n      }\n\n      return ret;\n    }\n  }\n};",{"version":3,"sources":["Project.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <page-layout title=\"订单列表\">\r\n    <a-card class=\"project\">\r\n      <a-card\r\n        class=\"card card-selected\"\r\n        v-if=\"project\">\r\n        <project-card :project=\"project\"></project-card>\r\n      </a-card>\r\n      <a-card\r\n        class=\"card card-selected\"\r\n        style=\"text-align: center\"\r\n        v-else>\r\n        未选择项目\r\n      </a-card>\r\n      <a-input-group class=\"tool\">\r\n        <a-row :gutter=\"6\">\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 12 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-select\r\n              v-model=\"params.ordering\"\r\n              style=\"width: 100%\"\r\n              @change=\"getData\">\r\n              <a-select-option value=\"starting_date\">开始时间正排序</a-select-option>\r\n              <a-select-option value=\"-starting_date\">开始时间倒排序</a-select-option>\r\n              <a-select-option value=\"finishing_date\">结束时间正排序</a-select-option>\r\n              <a-select-option value=\"-finishing_date\">结束时间倒排序</a-select-option>\r\n              <a-select-option value=\"investment\">订单金额正排序</a-select-option>\r\n              <a-select-option value=\"-investment\">订单金额倒排序</a-select-option>\r\n            </a-select>\r\n          </a-col>\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 12 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-select\r\n              v-model=\"filter.investment\"\r\n              style=\"width: 100%\"\r\n              @change=\"handleFilterByInvestment\">\r\n              <a-select-option value=\"\">订单金额筛选</a-select-option>\r\n              <a-select-option :value=\"1\">100元以下</a-select-option>\r\n              <a-select-option :value=\"2\">1000元~5000元</a-select-option>\r\n              <a-select-option :value=\"3\">5000元~20000元</a-select-option>\r\n              <a-select-option :value=\"4\">20000元以上</a-select-option>\r\n            </a-select>\r\n          </a-col>\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 12 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-select\r\n              v-model=\"filter.year\"\r\n              style=\"width: 100%\"\r\n              @change=\"handleFilterByYear\">\r\n              <a-select-option value=\"\">订单开始年份筛选</a-select-option>\r\n              <a-select-option v-for=\"(year, index) in yearList\" :key=\"index\" :value=\"index\">{{ year }}年\r\n              </a-select-option>\r\n              <a-select-option :value=\"4\">{{ yearList[yearList.length - 1] }}年之前</a-select-option>\r\n            </a-select>\r\n          </a-col>\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 24 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-input\r\n              v-model=\"params.search\"\r\n              style=\"width: 100%\"\r\n              placeholder=\"项目名称，建设地点\">\r\n            </a-input>\r\n          </a-col>\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 12 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-button\r\n              style=\"width: 100%\"\r\n              icon=\"search\"\r\n              @click=\"handleSearch\">\r\n              搜索\r\n            </a-button>\r\n          </a-col>\r\n          <a-col\r\n            class=\"item\"\r\n            :xs=\"{ span: 12 }\"\r\n            :sm=\"{ span: 8 }\"\r\n            :xl=\"{ span: 4 }\">\r\n            <a-button\r\n              style=\"width: 100%\"\r\n              icon=\"delete\"\r\n              @click=\"handleClearParams\">\r\n              重置\r\n            </a-button>\r\n          </a-col>\r\n        </a-row>\r\n      </a-input-group>\r\n      <a-spin :spinning=\"status.loading\">\r\n        <!--<a-card-->\r\n          <!--class=\"card\"-->\r\n          <!--style=\"text-align: center\"-->\r\n          <!--v-if=\"!projectCount\">-->\r\n          <!--暂无数据-->\r\n        <!--</a-card>-->\r\n        <a-card\r\n          class=\"card card-hover\"\r\n          v-for=\"project in projectList\"\r\n          :key=\"project.id\"\r\n          @click=\"handleProjectSelect(project)\">\r\n          <project-card :project=\"project\"></project-card>\r\n        </a-card>\r\n      </a-spin>\r\n      <a-pagination\r\n        v-model=\"params.page\"\r\n        :defaultPageSize=\"10\"\r\n        @change=\"handelePage\"\r\n        style=\"float: right\"\r\n        :total=\"projectCount\">\r\n      </a-pagination>\r\n      <div style=\"margin: 0 20px 10px 0;\">共 {{ this.projectCount }} 个</div>\r\n    </a-card>\r\n  </page-layout>\r\n</template>\r\n\r\n<script>\r\n  import {mapMutations} from 'vuex'\r\n  import router from '../../router'\r\n  import PageLayout from '../../components/page/PageLayout'\r\n  import ProjectCard from './components/Card'\r\n  import api from '../../api/project'\r\n  import ARow from 'ant-design-vue/es/grid/Row'\r\n  import {\r\n    BaiduMap, BmScale, BmMapType, BmNavigation, BmGeolocation, BmMarker, BmInfoWindow, BmLabel,\r\n    BmLocalSearch, BmControl, BmAutoComplete,\r\n  } from 'vue-baidu-map/components'\r\nconst projectList=[\r\n  {\r\n    name:'123'\r\n  }\r\n]\r\n  export default {\r\n    name: 'Project',\r\n    components: {\r\n      ARow,\r\n      PageLayout,\r\n      ProjectCard,\r\n      BaiduMap,\r\n      BmScale,\r\n      BmMapType,\r\n      BmNavigation,\r\n      BmGeolocation,\r\n      BmMarker,\r\n      BmInfoWindow,\r\n      BmLabel,\r\n      BmLocalSearch,\r\n      BmControl,\r\n      BmAutoComplete\r\n    },\r\n    data() {\r\n      return {\r\n        point: { lng: 122.1, lat: 37.2 },\r\n        show: false,\r\n        keyword: '',\r\n        params: {\r\n          min_investment: '',\r\n          max_investment: '',\r\n          min_date: '',\r\n          max_date: '',\r\n          search: '',\r\n          page: 1,\r\n          ordering: '-starting_date'\r\n        },\r\n        filter: {\r\n          investment: '',\r\n          year: ''\r\n        },\r\n        projectStatistics: {},\r\n        status: {\r\n          loading: true\r\n        },\r\n        layout: {\r\n          xs: {span: 24},\r\n          sm: {span: 12},\r\n          xl: {span: 6}\r\n        },\r\n        projectCount: 0,\r\n        projectList\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      ...mapMutations(['SET_PROJECT']),\r\n      handler({BMap, map}) {\r\n      },\r\n      output(item){\r\n        var project={}\r\n        item.id=item.project\r\n        api.getProject(item.id)\r\n          .then(data => {\r\n            project = data\r\n       this.SET_PROJECT(project)\r\n        const role = this.$store.getters.role\r\n        if (role.permissionList.indexOf('project_selected') === -1) {\r\n          role.permissionList.push('project_selected')\r\n        }\r\n        this.$store.commit('SET_ROLE', role)\r\n        this.$store.dispatch('GenerateRoutes', {roles: role})\r\n        router.addRoutes(this.$store.getters.addRouters)\r\n        router.push({name: 'detail'})\r\n          })\r\n\r\n      },\r\n      // addPoint(e) {\r\n      //   this.BMap.setMarker(e.point)\r\n      //   // let map = new BMap.Map()\r\n      //   // var point = new BMap.Point(e.point.lng,e.point.lat)\r\n      //   // var maker = new BMap.Marker(point)\r\n      //   // map.addOverlay(maker)\r\n      //   this.addMarker(marker)\r\n      //   alert(\"a\")\r\n      // },\r\n      infoWindowClose() {\r\n        this.show = false\r\n      },\r\n      infoWindowOpen() {\r\n        this.show = true\r\n      },\r\n      getData() {\r\n        this.status.loading = true\r\n        this.status.loading = false\r\n        // api.getProjectList(this.params)\r\n        //   .then(data => {\r\n        //     console.log(data)\r\n        //     this.projectList = data.results\r\n        //     this.projectCount = data.count\r\n        //     this.status.loading = false\r\n        //   })\r\n        api.getProjectStatistics()\r\n          .then(data => {\r\n            this.projectStatistics = data\r\n          })\r\n      },\r\n      handelePage(page) {\r\n        this.params.page = page\r\n        this.getData()\r\n      },\r\n      handleFilterByInvestment(value) {\r\n        switch (value) {\r\n          case 1:\r\n            this.params.min_investment = ''\r\n            this.params.max_investment = '500'\r\n            break\r\n          case 2:\r\n            this.params.min_investment = '500'\r\n            this.params.max_investment = '1000'\r\n            break\r\n          case 3:\r\n            this.params.min_investment = '1000'\r\n            this.params.max_investment = '2000'\r\n            break\r\n          case 4:\r\n            this.params.min_investment = '2000'\r\n            this.params.max_investment = ''\r\n            break\r\n          default:\r\n            this.params.min_investment = ''\r\n            this.params.max_investment = ''\r\n            this.filter.investment = ''\r\n            break\r\n        }\r\n        this.getData()\r\n      },\r\n      handleFilterByYear(value) {\r\n        switch (value) {\r\n          case 0:\r\n            this.params.min_date = this.yearList[0] + '-01-01'\r\n            this.params.max_date = this.yearList[0] + '-12-31'\r\n            break\r\n          case 1:\r\n            this.params.min_date = this.yearList[1] + '-01-01'\r\n            this.params.max_date = this.yearList[1] + '-12-31'\r\n            break\r\n          case 2:\r\n            this.params.min_date = this.yearList[2] + '-01-01'\r\n            this.params.max_date = this.yearList[2] + '-12-31'\r\n            break\r\n          case 3:\r\n            this.params.min_date = this.yearList[3] + '-01-01'\r\n            this.params.max_date = this.yearList[3] + '-12-31'\r\n            break\r\n          case 4:\r\n            this.params.max_date = this.yearList[3] + '-12-31'\r\n            break\r\n          default:\r\n            this.params.min_date = ''\r\n            this.params.max_date = ''\r\n            this.filter.year = ''\r\n            break\r\n        }\r\n        this.getData()\r\n      },\r\n      handleSearch() {\r\n        this.getData()\r\n      },\r\n      handleClearParams() {\r\n        this.filter.investment = ''\r\n        this.filter.year = ''\r\n        this.params.ordering = 'starting_date'\r\n        this.params.min_investment = ''\r\n        this.params.max_investment = ''\r\n        this.params.min_date = ''\r\n        this.params.max_date = ''\r\n        this.params.search = ''\r\n        this.params.page = 1\r\n        this.getData()\r\n      },\r\n      handleProjectSelect(project) {\r\n        console.log(project)\r\n        this.SET_PROJECT(project)\r\n        const role = this.$store.getters.role\r\n        if (role.permissionList.indexOf('project_selected') === -1) {\r\n          role.permissionList.push('project_selected')\r\n        }\r\n        console.log(role)\r\n        this.$store.commit('SET_ROLE', role)\r\n        this.$store.dispatch('GenerateRoutes', {roles: role})\r\n        router.addRoutes(this.$store.getters.addRouters)\r\n        router.push({name: 'detail'})\r\n      }\r\n    },\r\n    computed: {\r\n      project() {\r\n        return this.$store.getters.projectSelected\r\n      },\r\n      yearList() {\r\n        const ret = []\r\n        const year = (new Date()).getFullYear()\r\n        for (let i = 0; i < 4; i++) {\r\n          ret.push(year - i)\r\n        }\r\n        return ret\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  @import '~ant-design-vue/es/style/themes/default';\r\n\r\n  .map {\r\n    width: 100%;\r\n    height: 240px;\r\n  }\r\n\r\n  .project {\r\n    .tool {\r\n      .item {\r\n        margin-bottom: 16px;\r\n      }\r\n    }\r\n\r\n    .card {\r\n      margin-bottom: 16px;\r\n      border-radius: @border-radius-base;\r\n    }\r\n\r\n    .card-hover {\r\n      &:hover {\r\n        border-color: @primary-color;\r\n        box-shadow: 0 0 1px @primary-color;\r\n      }\r\n    }\r\n\r\n    .card-selected {\r\n      color: #fff;\r\n      background-color: @primary-color;\r\n      border-color: @primary-color;\r\n      box-shadow: 0 0 1px @primary-color;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/project"}]}