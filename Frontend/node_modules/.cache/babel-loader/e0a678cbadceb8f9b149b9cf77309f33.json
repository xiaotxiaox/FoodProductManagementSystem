{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\request.js","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\request.js","mtime":1555582478365},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":1575333166264}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\FoodProductManagementSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport { VueAxios } from './axios';\nimport notification from 'ant-design-vue/es/notification'; // 创建 axios 实例\n\nvar service = axios.create({\n  baseURL: '/api',\n  // api base_url\n  timeout: 6000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var data = error.response.data;\n\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      });\n    }\n\n    if (error.response.status === 401) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      });\n    }\n  }\n\n  return _Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  return config;\n}, err); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    var router = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Vue.use(VueAxios, router, service);\n  }\n};\nexport { installer as VueAxios, service as axios };",{"version":3,"sources":["E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\request.js"],"names":["axios","VueAxios","notification","service","create","baseURL","timeout","err","error","response","data","status","message","description","reject","interceptors","request","use","config","installer","vm","install","Vue","router"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,MADkB;AACV;AACjBC,EAAAA,OAAO,EAAE,IAFkB,CAEb;;AAFa,CAAb,CAAhB;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,QAAMC,IAAI,GAAGF,KAAK,CAACC,QAAN,CAAeC,IAA5B;;AACA,QAAIF,KAAK,CAACC,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjCT,MAAAA,YAAY,CAACM,KAAb,CAAmB;AAAEI,QAAAA,OAAO,EAAE,WAAX;AAAwBC,QAAAA,WAAW,EAAEH,IAAI,CAACE;AAA1C,OAAnB;AACD;;AACD,QAAIJ,KAAK,CAACC,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjCT,MAAAA,YAAY,CAACM,KAAb,CAAmB;AAAEI,QAAAA,OAAO,EAAE,cAAX;AAA2BC,QAAAA,WAAW,EAAE;AAAxC,OAAnB;AACD;AACF;;AACD,SAAO,SAAQC,MAAR,CAAeN,KAAf,CAAP;AACD,CAXD,C,CAaA;;;AACAL,OAAO,CAACY,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC,SAAOA,MAAP;AACD,CAFD,EAEGX,GAFH,E,CAIA;;AACAJ,OAAO,CAACY,YAAR,CAAqBN,QAArB,CAA8BQ,GAA9B,CAAkC,UAACR,QAAD,EAAc;AAC9C,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAFD,EAEGH,GAFH;AAIA,IAAMY,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,EADY;AAEhBC,EAAAA,OAFgB,mBAEPC,GAFO,EAEW;AAAA,QAAbC,MAAa,uEAAJ,EAAI;AACzBD,IAAAA,GAAG,CAACL,GAAJ,CAAQhB,QAAR,EAAkBsB,MAAlB,EAA0BpB,OAA1B;AACD;AAJe,CAAlB;AAOA,SACEgB,SAAS,IAAIlB,QADf,EAEEE,OAAO,IAAIH,KAFb","sourcesContent":["import axios from 'axios'\r\nimport { VueAxios } from './axios'\r\nimport notification from 'ant-design-vue/es/notification'\r\n\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  baseURL: '/api', // api base_url\r\n  timeout: 6000 // 请求超时时间\r\n})\r\n\r\nconst err = (error) => {\r\n  if (error.response) {\r\n    const data = error.response.data\r\n    if (error.response.status === 403) {\r\n      notification.error({ message: 'Forbidden', description: data.message })\r\n    }\r\n    if (error.response.status === 401) {\r\n      notification.error({ message: 'Unauthorized', description: 'Authorization verification failed' })\r\n    }\r\n  }\r\n  return Promise.reject(error)\r\n}\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(config => {\r\n  return config\r\n}, err)\r\n\r\n// response interceptor\r\nservice.interceptors.response.use((response) => {\r\n  return response.data\r\n}, err)\r\n\r\nconst installer = {\r\n  vm: {},\r\n  install (Vue, router = {}) {\r\n    Vue.use(VueAxios, router, service)\r\n  }\r\n}\r\n\r\nexport {\r\n  installer as VueAxios,\r\n  service as axios\r\n}\r\n"]}]}