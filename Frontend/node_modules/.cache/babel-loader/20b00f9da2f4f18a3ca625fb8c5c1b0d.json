{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\supervisorSecurity\\processCheck\\notice\\components\\NoticeModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\supervisorSecurity\\processCheck\\notice\\components\\NoticeModal.vue","mtime":1563457089597},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '../../../../../api/supervisorSecurity';\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: 'ProcessNoticeModal',\n  props: {\n    record: Object,\n    visible: Boolean,\n    type: String\n  },\n  data: function data() {\n    return {\n      project_id: this.projectSelected().id,\n      layout: {\n        'label-col': {\n          span: 8\n        },\n        'wrapper-col': {\n          span: 12\n        }\n      },\n      form: this.$form.createForm(this),\n      matter: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: _objectSpread({}, mapGetters(['projectSelected']), {\n    getData: function getData() {\n      if (this.isEdit) {\n        this.record.give_time = new moment(this.record.give_time);\n\n        if (this.record.reply_time !== null) {\n          this.record.reply_time = new moment(this.record.reply_time);\n        }\n      }\n    },\n    handleProcessCheckNoticeOk: function handleProcessCheckNoticeOk() {\n      var _this = this;\n\n      this.form.validateFields(function (error, data) {\n        if (!error) {\n          data.give_time = data.give_time.format('YYYY-MM-DD');\n\n          if (data.reply_time != null) {\n            data.reply_time = data.reply_time.format('YYYY-MM-DD');\n          }\n\n          if (_this.isEdit) {\n            api.updateProcessCheckNotice(_this.record.id, data).then(function (data) {\n              _this.$notification.success({\n                message: '成功',\n                description: '更新成功',\n                key: 'SUCCESS'\n              });\n\n              _this.$emit('close');\n            });\n          } else {\n            api.createProcessCheckNotice(_this.project_id, data).then(function (data) {\n              _this.$notification.success({\n                message: '成功',\n                description: '新建成功',\n                key: 'SUCCESS'\n              });\n\n              _this.$emit('close');\n            });\n          }\n        }\n      });\n    },\n    handleProcessCheckNoticeCancel: function handleProcessCheckNoticeCancel() {\n      this.$emit('close');\n    },\n    validateProgressLimit: function validateProgressLimit(rule, value, callback) {\n      if (this.isEdit) {\n        callback();\n      } else {\n        if (value < 0 || value > 100) callback('false');else callback();\n      }\n    }\n  }),\n  computed: {\n    isEdit: function isEdit() {\n      return this.type === 'edit';\n    },\n    title: function title() {\n      return this.isEdit ? '编辑' : '新建';\n    }\n  }\n};",{"version":3,"sources":["NoticeModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleProcessCheckNoticeOk()\"\r\n    @cancel=\"handleProcessCheckNoticeCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"通知单编号\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'id',\r\n            {\r\n              rules: [\r\n                { max:256, message: '长度在256个汉字以内' },\r\n                {required: true, message: '请输入通知单编号'}\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.id : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"部位\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'part',\r\n            {\r\n              rules: [\r\n                { max:256, message: '长度在256个汉字以内' },\r\n                {required: true, message: '请输入部位'}\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.part : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"发出日期\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n                'give_time',\r\n                {rules: [{type: 'object', required: true, message: '请输入发出日期'}],\r\n                initialValue: record ? record.give_time : null}\r\n              ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"回复日期\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n                'reply_time',\r\n                {rules: [],\r\n                initialValue: record ? record.reply_time : null}\r\n              ]\"></a-date-picker>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport api from '../../../../../api/supervisorSecurity'\r\nimport { mapGetters } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'ProcessNoticeModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String,\r\n  },\r\n  data () {\r\n    return {\r\n      project_id: this.projectSelected().id,\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 12 }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      matter: {}\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    getData(){\r\n      if(this.isEdit){\r\n        this.record.give_time=new moment(this.record.give_time)\r\n        if(this.record.reply_time!==null) {\r\n          this.record.reply_time = new moment(this.record.reply_time)\r\n        }\r\n      }\r\n    },\r\n    handleProcessCheckNoticeOk () {\r\n      this.form.validateFields((error, data) => {\r\n        if (!error) {\r\n          data.give_time = data.give_time.format('YYYY-MM-DD')\r\n          if(data.reply_time!=null) {\r\n            data.reply_time = data.reply_time.format('YYYY-MM-DD')\r\n          }\r\n          if (this.isEdit) {\r\n            api.updateProcessCheckNotice(this.record.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          } else {\r\n            api.createProcessCheckNotice(this.project_id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleProcessCheckNoticeCancel () {\r\n      this.$emit('close')\r\n    },\r\n    validateProgressLimit (rule, value, callback) {\r\n      if (this.isEdit) {\r\n        callback()\r\n      } else {\r\n        if (value < 0 || value > 100)\r\n          callback('false')\r\n        else\r\n          callback()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/supervisorSecurity/processCheck/notice/components"}]}