{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Marker.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport commonMixin from '../base/mixins/common.js';\nimport bindEvents from '../base/bindEvent.js';\nimport { createLabel, createIcon, createPoint } from '../base/factory.js';\nexport default {\n  name: 'bm-marker',\n  mixins: [commonMixin('overlay')],\n  props: {\n    position: {},\n    offset: {},\n    icon: {},\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    dragging: {\n      type: Boolean,\n      default: false\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    raiseOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    draggingCursor: {\n      type: String\n    },\n    rotation: {\n      type: Number\n    },\n    shadow: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    label: {\n      type: Object\n    },\n    animation: {\n      type: String\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    'position.lng': function positionLng(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance,\n          position = this.position,\n          renderByParent = this.renderByParent,\n          $parent = this.$parent;\n\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        originInstance.setPosition(createPoint(BMap, {\n          lng: val,\n          lat: position.lat\n        }));\n      }\n\n      renderByParent && $parent.reload();\n    },\n    'position.lat': function positionLat(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance,\n          position = this.position,\n          renderByParent = this.renderByParent,\n          $parent = this.$parent;\n\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        originInstance.setPosition(createPoint(BMap, {\n          lng: position.lng,\n          lat: val\n        }));\n      }\n\n      renderByParent && $parent.reload();\n    },\n    'offset.width': function offsetWidth(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance;\n\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(val, this.offset.height));\n      }\n    },\n    'offset.height': function offsetHeight(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance;\n\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(this.offset.width, val));\n      }\n    },\n    icon: {\n      deep: true,\n      handler: function handler(val) {\n        var BMap = this.BMap,\n            originInstance = this.originInstance,\n            rotation = this.rotation;\n        originInstance && originInstance.setIcon(createIcon(BMap, val));\n        rotation && originInstance && originInstance.setRotation(rotation);\n      }\n    },\n    massClear: function massClear(val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();\n    },\n    dragging: function dragging(val) {\n      val ? this.originInstance.enableDragging() : this.originInstance.disableDragging();\n    },\n    clicking: function clicking() {\n      this.reload();\n    },\n    raiseOnDrag: function raiseOnDrag() {\n      this.reload();\n    },\n    draggingCursor: function draggingCursor(val) {\n      this.originInstance.setDraggingCursor(val);\n    },\n    rotation: function rotation(val) {\n      this.originInstance.setRotation(val);\n    },\n    shadow: function shadow(val) {\n      this.originInstance.setShadow(val);\n    },\n    title: function title(val) {\n      this.originInstance.setTitle(val);\n    },\n    label: function label(val) {\n      this.reload();\n    },\n    animation: function animation(val) {\n      this.originInstance.setAnimation(global[val]);\n    },\n    top: function top(val) {\n      this.originInstance.setTop(val);\n    },\n    zIndex: function zIndex(val) {\n      this.originInstance.setZIndex(val);\n    }\n  },\n  methods: {\n    load: function load() {\n      var BMap = this.BMap,\n          map = this.map,\n          position = this.position,\n          offset = this.offset,\n          icon = this.icon,\n          massClear = this.massClear,\n          dragging = this.dragging,\n          clicking = this.clicking,\n          raiseOnDrag = this.raiseOnDrag,\n          draggingCursor = this.draggingCursor,\n          rotation = this.rotation,\n          shadow = this.shadow,\n          title = this.title,\n          label = this.label,\n          animation = this.animation,\n          top = this.top,\n          renderByParent = this.renderByParent,\n          $parent = this.$parent,\n          zIndex = this.zIndex;\n      var overlay = new BMap.Marker(new BMap.Point(position.lng, position.lat), {\n        offset: offset,\n        icon: icon && createIcon(BMap, icon),\n        enableMassClear: massClear,\n        enableDragging: dragging,\n        enableClicking: clicking,\n        raiseOnDrag: raiseOnDrag,\n        draggingCursor: draggingCursor,\n        rotation: rotation,\n        shadow: shadow,\n        title: title\n      });\n      this.originInstance = overlay;\n      label && overlay && overlay.setLabel(createLabel(BMap, label));\n      overlay.setTop(top);\n      overlay.setZIndex(zIndex);\n      bindEvents.call(this, overlay);\n\n      if (renderByParent) {\n        $parent.reload();\n      } else {\n        map.addOverlay(overlay);\n      }\n\n      overlay.setAnimation(global[animation]);\n    }\n  }\n};",{"version":3,"sources":["Marker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createLabel, createIcon, createPoint} from '../base/factory.js'\n\nexport default {\n  name: 'bm-marker',\n  mixins: [commonMixin('overlay')],\n  props: {\n    position: {},\n    offset: {},\n    icon: {},\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    dragging: {\n      type: Boolean,\n      default: false\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    raiseOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    draggingCursor: {\n      type: String\n    },\n    rotation: {\n      type: Number\n    },\n    shadow: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    label: {\n      type: Object\n    },\n    animation: {\n      type: String\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    'position.lng' (val, oldVal) {\n      const {BMap, originInstance, position, renderByParent, $parent} = this\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        originInstance.setPosition(createPoint(BMap, {lng: val, lat: position.lat}))\n      }\n      renderByParent && $parent.reload()\n    },\n    'position.lat' (val, oldVal) {\n      const {BMap, originInstance, position, renderByParent, $parent} = this\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        originInstance.setPosition(createPoint(BMap, {lng: position.lng, lat: val}))\n      }\n      renderByParent && $parent.reload()\n    },\n    'offset.width' (val, oldVal) {\n      const {BMap, originInstance} = this\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(val, this.offset.height))\n      }\n    },\n    'offset.height' (val, oldVal) {\n      const {BMap, originInstance} = this\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(this.offset.width, val))\n      }\n    },\n    icon: {\n      deep: true,\n      handler (val) {\n        const {BMap, originInstance, rotation} = this\n        originInstance && originInstance.setIcon(createIcon(BMap, val))\n        rotation && originInstance && originInstance.setRotation(rotation)\n      }\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    },\n    dragging (val) {\n      val ? this.originInstance.enableDragging() : this.originInstance.disableDragging()\n    },\n    clicking () {\n      this.reload()\n    },\n    raiseOnDrag () {\n      this.reload()\n    },\n    draggingCursor (val) {\n      this.originInstance.setDraggingCursor(val)\n    },\n    rotation (val) {\n      this.originInstance.setRotation(val)\n    },\n    shadow (val) {\n      this.originInstance.setShadow(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    label (val) {\n      this.reload()\n    },\n    animation (val) {\n      this.originInstance.setAnimation(global[val])\n    },\n    top (val) {\n      this.originInstance.setTop(val)\n    },\n    zIndex (val) {\n      this.originInstance.setZIndex(val)\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, position, offset, icon, massClear, dragging, clicking, raiseOnDrag, draggingCursor, rotation, shadow, title, label, animation, top, renderByParent, $parent, zIndex} = this\n      const overlay = new BMap.Marker(new BMap.Point(position.lng, position.lat), {\n        offset,\n        icon: icon && createIcon(BMap, icon),\n        enableMassClear: massClear,\n        enableDragging: dragging,\n        enableClicking: clicking,\n        raiseOnDrag,\n        draggingCursor,\n        rotation,\n        shadow,\n        title\n      })\n      this.originInstance = overlay\n      label && overlay && overlay.setLabel(createLabel(BMap, label))\n      overlay.setTop(top)\n      overlay.setZIndex(zIndex)\n      bindEvents.call(this, overlay)\n      if (renderByParent) {\n        $parent.reload()\n      } else {\n        map.addOverlay(overlay)\n      }\n      overlay.setAnimation(global[animation])\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/overlays"}]}