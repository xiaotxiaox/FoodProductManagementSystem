{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ConstructionConsultationSystem\\Frontend\\src\\utils\\fetch.js","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\utils\\fetch.js","mtime":1557281848135},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _JSON$stringify from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport router from '../router/index';\nimport 'whatwg-fetch';\nimport notification from 'ant-design-vue/es/notification';\nimport { getCookie } from './util';\nvar BASE_URL = '/api/';\n/**\r\n * 封装fetch\r\n * @param url api url\r\n * @param method get/post/put/delete\r\n * @param data data to be json\r\n * @param params urlencoded\r\n * @returns {Promise<Response>}\r\n */\n\nexport default function fetchAPI(url, method) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var body = null; // csrf\n\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n\n  if (!/^(GET|HEAD|OPTIONS|TRACE)$/.test(method.toUpperCase())) {\n    headers['X-CSRFToken'] = getCookie('csrftoken');\n  }\n\n  if (data) {\n    body = _JSON$stringify(data);\n  }\n\n  if (params) {\n    url += '?' + new URLSearchParams(params).toString();\n  }\n\n  return fetch(BASE_URL + url, {\n    credentials: 'include',\n    headers: headers,\n    method: method,\n    body: body\n  }).then(function (res) {\n    if (res.status === 403 || res.status === 401) {\n      notification.error({\n        message: '您无权限访问这个网页',\n        description: '可能的原因是用户未登录',\n        key: '401|403'\n      });\n      router.push({\n        name: 'login'\n      });\n    } else if (res.status === 500) {\n      notification.error({\n        message: '服务器错误',\n        description: '请联系管理员',\n        key: '500'\n      });\n    } else if (res.status === 204) {\n      return res.text();\n    } else {\n      return res.json();\n    }\n  }).catch(function (e) {\n    notification.error({\n      message: '网络错误',\n      description: e,\n      key: 'UNKNOWN ERROR'\n    });\n  });\n}",{"version":3,"sources":["E:\\ConstructionConsultationSystem\\Frontend\\src\\utils\\fetch.js"],"names":["router","notification","getCookie","BASE_URL","fetchAPI","url","method","data","params","body","headers","test","toUpperCase","URLSearchParams","toString","fetch","credentials","then","res","status","error","message","description","key","push","name","text","json","catch","e"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,IAAMC,QAAQ,GAAG,OAAjB;AAEA;;;;;;;;;AAQA,eAAe,SAASC,QAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAA4D;AAAA,MAA5BC,IAA4B,uEAArB,IAAqB;AAAA,MAAfC,MAAe,uEAAN,IAAM;AACzE,MAAIC,IAAI,GAAG,IAAX,CADyE,CAEzE;;AACA,MAAMC,OAAO,GAAG;AACd,oBAAgB;AADF,GAAhB;;AAGA,MAAI,CAAC,6BAA6BC,IAA7B,CAAkCL,MAAM,CAACM,WAAP,EAAlC,CAAL,EAA8D;AAC5DF,IAAAA,OAAO,CAAC,aAAD,CAAP,GAAyBR,SAAS,CAAC,WAAD,CAAlC;AACD;;AACD,MAAIK,IAAJ,EAAU;AACRE,IAAAA,IAAI,GAAG,gBAAeF,IAAf,CAAP;AACD;;AACD,MAAIC,MAAJ,EAAY;AACVH,IAAAA,GAAG,IAAI,MAAO,IAAIQ,eAAJ,CAAoBL,MAApB,CAAD,CAA8BM,QAA9B,EAAb;AACD;;AACD,SAAOC,KAAK,CAACZ,QAAQ,GAAGE,GAAZ,EAAiB;AAC3BW,IAAAA,WAAW,EAAE,SADc;AAE3BN,IAAAA,OAAO,EAAEA,OAFkB;AAG3BJ,IAAAA,MAAM,EAAEA,MAHmB;AAI3BG,IAAAA,IAAI,EAAEA;AAJqB,GAAjB,CAAL,CAKJQ,IALI,CAKC,UAAAC,GAAG,EAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC5ClB,MAAAA,YAAY,CAACmB,KAAb,CAAmB;AAAEC,QAAAA,OAAO,EAAE,YAAX;AAAyBC,QAAAA,WAAW,EAAE,aAAtC;AAAqDC,QAAAA,GAAG,EAAE;AAA1D,OAAnB;AACAvB,MAAAA,MAAM,CAACwB,IAAP,CAAY;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAZ;AACD,KAHD,MAGO,IAAIP,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAC7BlB,MAAAA,YAAY,CAACmB,KAAb,CAAmB;AAAEC,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,WAAW,EAAE,QAAjC;AAA2CC,QAAAA,GAAG,EAAE;AAAhD,OAAnB;AACD,KAFM,MAEA,IAAIL,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAC7B,aAAOD,GAAG,CAACQ,IAAJ,EAAP;AACD,KAFM,MAEA;AACL,aAAOR,GAAG,CAACS,IAAJ,EAAP;AACD;AACF,GAhBM,EAgBJC,KAhBI,CAgBE,UAAAC,CAAC,EAAI;AACZ5B,IAAAA,YAAY,CAACmB,KAAb,CAAmB;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,WAAW,EAAEO,CAAhC;AAAmCN,MAAAA,GAAG,EAAE;AAAxC,KAAnB;AACD,GAlBM,CAAP;AAmBD","sourcesContent":["import router from '../router/index'\r\nimport 'whatwg-fetch'\r\nimport notification from 'ant-design-vue/es/notification'\r\nimport { getCookie } from './util'\r\n\r\nconst BASE_URL = '/api/'\r\n\r\n/**\r\n * 封装fetch\r\n * @param url api url\r\n * @param method get/post/put/delete\r\n * @param data data to be json\r\n * @param params urlencoded\r\n * @returns {Promise<Response>}\r\n */\r\nexport default function fetchAPI (url, method, data = null, params = null) {\r\n  let body = null\r\n  // csrf\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  if (!/^(GET|HEAD|OPTIONS|TRACE)$/.test(method.toUpperCase())) {\r\n    headers['X-CSRFToken'] = getCookie('csrftoken')\r\n  }\r\n  if (data) {\r\n    body = JSON.stringify(data)\r\n  }\r\n  if (params) {\r\n    url += '?' + (new URLSearchParams(params)).toString()\r\n  }\r\n  return fetch(BASE_URL + url, {\r\n    credentials: 'include',\r\n    headers: headers,\r\n    method: method,\r\n    body: body\r\n  }).then(res => {\r\n    if (res.status === 403 || res.status === 401) {\r\n      notification.error({ message: '您无权限访问这个网页', description: '可能的原因是用户未登录', key: '401|403' })\r\n      router.push({ name: 'login' })\r\n    } else if (res.status === 500) {\r\n      notification.error({ message: '服务器错误', description: '请联系管理员', key: '500' })\r\n    } else if (res.status === 204) {\r\n      return res.text()\r\n    } else {\r\n      return res.json()\r\n    }\r\n  }).catch(e => {\r\n    notification.error({ message: '网络错误', description: e, key: 'UNKNOWN ERROR' })\r\n  })\r\n}\r\n"]}]}