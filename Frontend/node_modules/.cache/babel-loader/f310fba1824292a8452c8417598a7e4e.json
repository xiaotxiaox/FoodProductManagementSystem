{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Circle.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Circle.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport commonMixin from '../base/mixins/common.js';\nimport bindEvents from '../base/bindEvent.js';\nimport { createPoint } from '../base/factory.js';\nexport default {\n  name: 'bm-circle',\n  render: function render() {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    center: {},\n    radius: {},\n    strokeColor: {\n      type: String\n    },\n    strokeWeight: {\n      type: Number\n    },\n    strokeOpacity: {\n      type: Number\n    },\n    strokeStyle: {\n      type: String\n    },\n    fillColor: {\n      type: String\n    },\n    fillOpacity: {\n      type: Number\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    'center.lng': function centerLng(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance,\n          isEditing = this.isEditing,\n          disableEditing = this.disableEditing,\n          enableEditing = this.enableEditing,\n          center = this.center,\n          editing = this.editing;\n\n      if (!isEditing) {\n        disableEditing();\n        var lng = val;\n\n        if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {\n          originInstance.setCenter(createPoint(BMap, {\n            lng: lng,\n            lat: center.lat\n          }));\n        }\n\n        editing && enableEditing();\n      }\n    },\n    'center.lat': function centerLat(val, oldVal) {\n      var BMap = this.BMap,\n          originInstance = this.originInstance,\n          isEditing = this.isEditing,\n          disableEditing = this.disableEditing,\n          enableEditing = this.enableEditing,\n          center = this.center,\n          editing = this.editing;\n\n      if (!isEditing) {\n        disableEditing();\n        var lat = val;\n\n        if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {\n          originInstance.setCenter(createPoint(BMap, {\n            lng: center.lng,\n            lat: lat\n          }));\n        }\n\n        editing && enableEditing();\n      }\n    },\n    radius: function radius(val, oldVal) {\n      var originInstance = this.originInstance,\n          isEditing = this.isEditing,\n          disableEditing = this.disableEditing,\n          enableEditing = this.enableEditing,\n          editing = this.editing;\n\n      if (!isEditing) {\n        disableEditing();\n        originInstance.setRadius(val);\n        editing && enableEditing();\n      }\n    },\n    strokeColor: function strokeColor(val) {\n      this.originInstance.setStrokeColor(val);\n    },\n    strokeOpacity: function strokeOpacity(val) {\n      this.originInstance.setStrokeOpacity(val);\n    },\n    strokeWeight: function strokeWeight(val) {\n      this.originInstance.setStrokeWeight(val);\n    },\n    strokeStyle: function strokeStyle(val) {\n      this.originInstance.setStrokeStyle(val);\n    },\n    fillColor: function fillColor(val) {\n      this.originInstance.setFillColor(val);\n    },\n    fillOpacity: function fillOpacity(val) {\n      this.originInstance.setFillOpacity(val);\n    },\n    editing: function editing(val) {\n      val ? this.enableEditing() : this.disableEditing();\n    },\n    massClear: function massClear(val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();\n    },\n    clicking: function clicking(val) {\n      this.reload();\n    }\n  },\n  methods: {\n    dragStartHandler: function dragStartHandler() {\n      this.isEditing = true;\n    },\n    dragEndHandler: function dragEndHandler() {\n      this.isEditing = false;\n      this.bindEditingNodeEvents();\n    },\n    bindEditingNodeEvents: function bindEditingNodeEvents() {\n      var originInstance = this.originInstance,\n          editingKey = this.editingKey,\n          dragStartHandler = this.dragStartHandler,\n          dragEndHandler = this.dragEndHandler;\n      originInstance[editingKey].forEach(function ($node) {\n        $node.addEventListener('dragstart', dragStartHandler);\n        $node.addEventListener('dragend', dragEndHandler);\n      });\n    },\n    enableEditing: function enableEditing() {\n      var originInstance = this.originInstance,\n          bindEditingNodeEvents = this.bindEditingNodeEvents;\n      originInstance.enableEditing();\n      bindEditingNodeEvents();\n    },\n    disableEditing: function disableEditing() {\n      var originInstance = this.originInstance;\n      originInstance.disableEditing();\n    },\n    getEditingKey: function getEditingKey(overlay) {\n      var _this = this;\n\n      var stack = [];\n      overlay.enableEditing();\n      setTimeout(function () {\n        for (var key in overlay) {\n          if (overlay[key] && overlay[key].length === 2) {\n            stack.push(key);\n          }\n        }\n\n        overlay.disableEditing();\n\n        for (var _key in overlay) {\n          if (overlay[_key] && overlay[_key].length === 0 && ~stack.indexOf(_key)) {\n            _this.editingKey = _key;\n          }\n        }\n      }, 0);\n    },\n    load: function load() {\n      var BMap = this.BMap,\n          map = this.map,\n          center = this.center,\n          radius = this.radius,\n          strokeColor = this.strokeColor,\n          strokeWeight = this.strokeWeight,\n          strokeOpacity = this.strokeOpacity,\n          strokeStyle = this.strokeStyle,\n          fillColor = this.fillColor,\n          fillOpacity = this.fillOpacity,\n          editing = this.editing,\n          massClear = this.massClear,\n          clicking = this.clicking,\n          enableEditing = this.enableEditing,\n          disableEditing = this.disableEditing,\n          getEditingKey = this.getEditingKey,\n          editingKey = this.editingKey;\n      var overlay = new BMap.Circle(createPoint(BMap, {\n        lng: center.lng,\n        lat: center.lat\n      }), radius, {\n        strokeColor: strokeColor,\n        strokeWeight: strokeWeight,\n        strokeOpacity: strokeOpacity,\n        strokeStyle: strokeStyle,\n        fillColor: fillColor,\n        fillOpacity: fillOpacity,\n        // enableEditing: editing,\n        enableMassClear: massClear,\n        enableClicking: clicking\n      });\n      this.originInstance = overlay;\n      map.addOverlay(overlay);\n      bindEvents.call(this, overlay); // 解决圆形组件无法双向绑定的问题\n\n      !editingKey && getEditingKey(overlay);\n      setTimeout(function () {\n        editing ? enableEditing() : disableEditing();\n      }, 0);\n    }\n  }\n};",{"version":3,"sources":["Circle.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint} from '../base/factory.js'\n\nexport default {\n  name: 'bm-circle',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    center: {\n    },\n    radius: {\n    },\n    strokeColor: {\n      type: String\n    },\n    strokeWeight: {\n      type: Number\n    },\n    strokeOpacity: {\n      type: Number\n    },\n    strokeStyle: {\n      type: String\n    },\n    fillColor: {\n      type: String\n    },\n    fillOpacity: {\n      type: Number\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    'center.lng' (val, oldVal) {\n      const {BMap, originInstance, isEditing, disableEditing, enableEditing, center, editing} = this\n      if (!isEditing) {\n        disableEditing()\n        const lng = val\n        if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {\n          originInstance.setCenter(createPoint(BMap, {lng, lat: center.lat}))\n        }\n        editing && enableEditing()\n      }\n    },\n    'center.lat' (val, oldVal) {\n      const {BMap, originInstance, isEditing, disableEditing, enableEditing, center, editing} = this\n      if (!isEditing) {\n        disableEditing()\n        const lat = val\n        if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {\n          originInstance.setCenter(createPoint(BMap, {lng: center.lng, lat}))\n        }\n        editing && enableEditing()\n      }\n    },\n    radius (val, oldVal) {\n      const {originInstance, isEditing, disableEditing, enableEditing, editing} = this\n      if (!isEditing) {\n        disableEditing()\n        originInstance.setRadius(val)\n        editing && enableEditing()\n      }\n    },\n    strokeColor (val) {\n      this.originInstance.setStrokeColor(val)\n    },\n    strokeOpacity (val) {\n      this.originInstance.setStrokeOpacity(val)\n    },\n    strokeWeight (val) {\n      this.originInstance.setStrokeWeight(val)\n    },\n    strokeStyle (val) {\n      this.originInstance.setStrokeStyle(val)\n    },\n    fillColor (val) {\n      this.originInstance.setFillColor(val)\n    },\n    fillOpacity (val) {\n      this.originInstance.setFillOpacity(val)\n    },\n    editing (val) {\n      val ? this.enableEditing() : this.disableEditing()\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    },\n    clicking (val) {\n      this.reload()\n    }\n  },\n  methods: {\n    dragStartHandler () {\n      this.isEditing = true\n    },\n    dragEndHandler () {\n      this.isEditing = false\n      this.bindEditingNodeEvents()\n    },\n    bindEditingNodeEvents () {\n      const {originInstance, editingKey, dragStartHandler, dragEndHandler} = this\n      originInstance[editingKey].forEach($node => {\n        $node.addEventListener('dragstart', dragStartHandler)\n        $node.addEventListener('dragend', dragEndHandler)\n      })\n    },\n    enableEditing () {\n      const {originInstance, bindEditingNodeEvents} = this\n      originInstance.enableEditing()\n      bindEditingNodeEvents()\n    },\n    disableEditing () {\n      const {originInstance} = this\n      originInstance.disableEditing()\n    },\n    getEditingKey (overlay) {\n      const stack = []\n      overlay.enableEditing()\n      setTimeout(() => {\n        for (const key in overlay) {\n          if (overlay[key] && overlay[key].length === 2) {\n            stack.push(key)\n          }\n        }\n        overlay.disableEditing()\n        for (const key in overlay) {\n          if (overlay[key] && overlay[key].length === 0 && ~stack.indexOf(key)) {\n            this.editingKey = key\n          }\n        }\n      }, 0)\n    },\n    load () {\n      const {BMap, map, center, radius, strokeColor, strokeWeight, strokeOpacity, strokeStyle, fillColor, fillOpacity, editing, massClear, clicking, enableEditing, disableEditing, getEditingKey, editingKey} = this\n      const overlay = new BMap.Circle(createPoint(BMap, {lng: center.lng, lat: center.lat}), radius, {\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        fillColor,\n        fillOpacity,\n        // enableEditing: editing,\n        enableMassClear: massClear,\n        enableClicking: clicking\n      })\n      this.originInstance = overlay\n      map.addOverlay(overlay)\n      bindEvents.call(this, overlay)\n      // 解决圆形组件无法双向绑定的问题\n      !editingKey && getEditingKey(overlay)\n      setTimeout(() => {\n        editing ? enableEditing() : disableEditing()\n      }, 0)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/overlays"}]}