{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\src\\views\\setting\\userPermissions\\roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\views\\setting\\userPermissions\\roles.vue","mtime":1572875471534},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat2 from \"E:\\\\FoodProductManagementSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _getIterator from \"E:\\\\FoodProductManagementSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar columns = [{\n  title: '序号',\n  dataIndex: 'id',\n  width: '7%',\n  align: 'center'\n}, {\n  title: '角色名',\n  dataIndex: 'name',\n  width: '10%',\n  align: 'center'\n}, {\n  title: '角色描述',\n  dataIndex: 'description',\n  width: '17%',\n  align: 'center'\n}, {\n  title: '权限说明',\n  dataIndex: 'permissions',\n  width: '35%',\n  align: 'center',\n  customRender: function customRender(text, record) {\n    var s = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(record.permissions), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var temp = _step.value;\n        s = s + temp.description + ' ';\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return s;\n  }\n}, {\n  title: '编辑',\n  dataIndex: 'operation',\n  scopedSlots: {\n    customRender: 'operation'\n  },\n  align: 'center'\n}];\nimport rolesModal from './components/rolesModal';\nimport api from '../../../api/setting';\nexport default {\n  name: 'roles',\n  components: {\n    rolesModal: rolesModal\n  },\n  props: {\n    id: Number\n  },\n  data: function data() {\n    return {\n      layout: {\n        'label-col': {\n          span: 6\n        },\n        'wrapper-col': {\n          span: 18\n        }\n      },\n      form: this.$form.createForm(this),\n      roles: {},\n      modal: {\n        record: null,\n        visible: false,\n        type: '1',\n        roles_id: this.id\n      },\n      columns: columns,\n      settingRolesList: []\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      api.getSettingRolesMatterList().then(function (data) {\n        _this.settingRolesList = data.sort(function (x, y) {\n          return x.id > y.id;\n        }); // console.log(this.settingRolesList)\n        // for (var i in this.settingRolesList){\n        //   var s=''\n        //   for (var temp of i.permissions) {\n        //     s = s + temp.description + '<br>'\n        //   }\n        //   i.permissions=s\n        // }\n      });\n      api.getSettingRoles(this.id).then(function (data) {\n        _this.roles = data;\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      this.form.validateFields(function (error, data) {\n        if (!error) {\n          api.updateSettingRoles(_this2.id, data).then(function (data) {\n            _this2.$notification.success({\n              message: '成功',\n              description: '修改成功',\n              key: 'SUCCESS'\n            });\n          });\n        }\n      });\n    },\n    handleClose: function handleClose() {\n      this.modal.type = '';\n      this.modal.record = null;\n      this.modal.visible = false;\n      this.getData();\n    },\n    handleCreate: function handleCreate() {\n      this.modal.type = 'create';\n      this.modal.record = null;\n      this.modal.visible = true;\n    },\n    handleEdit: function handleEdit(record) {\n      this.modal.type = 'edit';\n      this.modal.record = record;\n      this.modal.visible = true;\n    },\n    handleDelete: function handleDelete(record) {\n      var _this3 = this;\n\n      api.deleteSettingRolesMatter(record.id).then(function (data) {\n        _this3.$notification.success({\n          message: '成功',\n          description: '删除成功',\n          key: 'SUCCESS'\n        });\n\n        _this3.getData();\n      });\n    },\n    parseFloat: function (_parseFloat) {\n      function parseFloat(_x) {\n        return _parseFloat.apply(this, arguments);\n      }\n\n      parseFloat.toString = function () {\n        return _parseFloat.toString();\n      };\n\n      return parseFloat;\n    }(function (f) {\n      return _parseFloat2(f);\n    })\n  },\n  computed: {\n    isEdit: function isEdit() {\n      return this.type === 'edit';\n    },\n    title: function title() {\n      return this.isEdit ? '编辑' : '新建';\n    }\n  }\n};",{"version":3,"sources":["roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n     <div>\r\n       <roles-modal\r\n        :record=\"modal.record\"\r\n         :visible=\"modal.visible\"\r\n         :type=\"modal.type\"\r\n         :users_id=\"modal.roles_id\"\r\n         v-if=\"modal.visible\"\r\n         @close=\"handleClose()\">\r\n\r\n       </roles-modal>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-row class=\"item\">\r\n        <a-col\r\n          :xs=\"{ span: 24 }\"\r\n          :sm=\"{ span: 12 }\"\r\n          :xl=\"{ span: 4 }\">\r\n          <a-button\r\n            type=\"primary\"\r\n            icon=\"plus\"\r\n            style=\"width: 100%\"\r\n            @click=\"handleCreate()\">\r\n            新建\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n      <a-table\r\n        bordered\r\n        :columns=\"columns\"\r\n        :dataSource=\"settingRolesList\"\r\n        rowKey=\"id\"\r\n        :pagination=\"false\">\r\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n          <a-button @click=\"handleEdit(record)\">编辑</a-button>\r\n          <a-popconfirm\r\n            title=\"确认删除吗?\"\r\n            @confirm=\"handleDelete(record)\">\r\n            <a-button type=\"danger\">删除</a-button>\r\n          </a-popconfirm>\r\n        </template>\r\n      </a-table>\r\n    </a-card>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n   const columns = [\r\n    {\r\n      title:'序号',\r\n      dataIndex:'id',\r\n      width:'7%',\r\n      align:'center'\r\n    },\r\n    {\r\n      title:'角色名',\r\n      dataIndex:'name',\r\n      width:'10%',\r\n      align:'center'\r\n    },\r\n    {\r\n      title:'角色描述',\r\n      dataIndex:'description',\r\n      width:'17%',\r\n      align:'center'\r\n    },\r\n     {\r\n      title:'权限说明',\r\n      dataIndex:'permissions',\r\n      width:'35%',\r\n      align:'center',\r\n    customRender: (text, record) => {\r\n      var s=''\r\n        for (var temp of record.permissions) {\r\n          s = s + temp.description + ' '\r\n        }\r\n        return s\r\n      }\r\n    },\r\n     {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: { customRender: 'operation' },\r\n      align: 'center'\r\n    },\r\n\r\n  ]\r\n  import rolesModal from './components/rolesModal'\r\n  import api from '../../../api/setting'\r\n  export default {\r\n    name: 'roles',\r\n    components:{\r\n      rolesModal\r\n    },\r\n     props: {\r\n      id: Number\r\n    },\r\n    data () {\r\n      return {\r\n        layout: {\r\n          'label-col': { span: 6 },\r\n          'wrapper-col': { span: 18 }\r\n        },\r\n        form: this.$form.createForm(this),\r\n        roles: {},\r\n        modal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          roles_id: this.id\r\n        },\r\n        columns,\r\n        settingRolesList: []\r\n      }\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData () {\r\n        api.getSettingRolesMatterList()\r\n          .then(data => {\r\n          this.settingRolesList = data.sort((x, y) => {\r\n            return x.id > y.id\r\n          })\r\n            // console.log(this.settingRolesList)\r\n            // for (var i in this.settingRolesList){\r\n            //   var s=''\r\n            //   for (var temp of i.permissions) {\r\n            //     s = s + temp.description + '<br>'\r\n            //   }\r\n            //   i.permissions=s\r\n            // }\r\n        })\r\n        api.getSettingRoles(this.id)\r\n          .then(data => {\r\n            this.roles = data\r\n          })\r\n      },\r\n      handleSubmit () {\r\n        this.form.validateFields((error, data) => {\r\n          if (!error) {\r\n            api.updateSettingRoles(this.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '修改成功', key: 'SUCCESS' })\r\n              })\r\n          }\r\n        })\r\n      },\r\n      handleClose () {\r\n        this.modal.type = ''\r\n        this.modal.record = null\r\n        this.modal.visible = false\r\n        this.getData()\r\n      },\r\n      handleCreate () {\r\n        this.modal.type = 'create'\r\n        this.modal.record = null\r\n        this.modal.visible = true\r\n      },\r\n      handleEdit (record) {\r\n        this.modal.type = 'edit'\r\n        this.modal.record = record\r\n        this.modal.visible = true\r\n      },\r\n      handleDelete (record) {\r\n        api.deleteSettingRolesMatter(record.id)\r\n          .then(data => {\r\n            this.$notification.success({ message: '成功', description: '删除成功', key: 'SUCCESS' })\r\n            this.getData()\r\n          })\r\n      },\r\n      parseFloat (f) {\r\n        return parseFloat(f)\r\n      }\r\n    },\r\n     computed: {\r\n       isEdit () {\r\n         return this.type === 'edit'\r\n       },\r\n       title () {\r\n         return this.isEdit ? '编辑' : '新建'\r\n       }\r\n     }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/setting/userPermissions"}]}