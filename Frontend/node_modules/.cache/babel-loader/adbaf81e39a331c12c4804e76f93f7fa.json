{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-task-node\\src\\lib\\components\\path\\curvepath.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-task-node\\src\\lib\\components\\path\\curvepath.vue","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TLine from './tline.vue';\nexport default {\n  components: {\n    TLine: TLine\n  },\n  name: 'CurvePath',\n  props: {\n    paths: {\n      type: Array\n    },\n    areaid: [String, Number]\n  },\n  data: function data() {\n    return {\n      con: []\n    };\n  },\n  watch: {\n    paths: function paths(newData, oldData) {\n      this.vReload();\n    }\n  },\n  computed: {\n    path: function path() {\n      var pa = this.$store.getters.getViPathingData;\n      var isShow = pa.isShow;\n\n      if (pa.Mxy) {\n        pa = this.computeXY(pa.Mxy, pa.Txy, true);\n      }\n\n      pa.isShow = isShow;\n      pa.dotted = this.$store.getters.getViConfig.isDotted;\n      pa.ptype = this.$store.getters.getViConfig.lineType;\n      return pa;\n    }\n  },\n  mounted: function mounted() {\n    this.vReload();\n  },\n  methods: {\n    vReload: function vReload() {\n      var me = this;\n      this.con = [];\n      this.paths.forEach(function (o) {\n        var vstart = document.getElementById(o.startPort);\n        var vend = document.getElementById(o.endPort);\n\n        if (vend && vstart) {\n          var obj = me.computeXY(vstart, vend, false);\n\n          if (o.dotted) {\n            obj.dotted = o.dotted;\n          }\n\n          if (o.ptype) {\n            obj.ptype = o.ptype;\n          }\n\n          obj.startPort = o.startPort;\n          obj.endPort = o.endPort;\n          me.con.push(obj);\n        }\n      });\n    },\n    computeXY: function computeXY(vstart, vend, isBing) {\n      var area = document.getElementById(this.areaid);\n      var scaling = this.$store.getters.getViConfig.scaling;\n      var obj = {};\n\n      if (isBing) {\n        obj = {\n          Mxy: {\n            x: vstart.x - area.getBoundingClientRect().left,\n            y: vstart.y - area.getBoundingClientRect().top\n          },\n          Txy: {\n            x: vend.x - area.getBoundingClientRect().left,\n            y: vend.y - area.getBoundingClientRect().top\n          }\n        };\n      } else {\n        obj = {\n          Mxy: {\n            x: vstart.getBoundingClientRect().left - area.getBoundingClientRect().left + 5 * scaling.ZoomX,\n            y: vstart.getBoundingClientRect().top - area.getBoundingClientRect().top + 5 * scaling.ZoomY\n          },\n          Txy: {\n            x: vend.getBoundingClientRect().left - area.getBoundingClientRect().left + 4 * scaling.ZoomX,\n            y: vend.getBoundingClientRect().top - area.getBoundingClientRect().top + 0\n          }\n        };\n      }\n\n      return obj;\n    },\n    mouseFn: function mouseFn(event, portData) {\n      this.$emit('on-mouse', event, portData);\n    },\n    mouseOverFn: function mouseOverFn(event, portData) {\n      this.$emit('on-mouse-over', event, portData);\n    },\n    mouseOutFn: function mouseOutFn(event, portData) {\n      this.$emit('on-mouse-out', event, portData);\n    }\n  }\n};",{"version":3,"sources":["curvepath.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <g ref=\"gss\">\n    <template v-if=\"con.length > 0\" v-for=\"(item,index) in con\">\n      <t-line :key=\"index\" :portData=\"item\" v-on:on-mouse=\"mouseFn\" v-on:on-mouse-over=\"mouseOverFn\" v-on:on-mouse-out=\"mouseOutFn\">\n      </t-line>\n    </template>\n      <t-line v-if=\"path.isShow\" :portData=\"path\">\n      </t-line>\n  </g>\n</template>\n<script>\nimport TLine from './tline.vue'\n\nexport default {\n  components: {TLine},\n  name: 'CurvePath',\n  props: {\n    paths: {\n      type: Array\n    },\n    areaid: [String, Number]\n  },\n  data () {\n    return {\n      con: []\n    }\n  },\n  watch: {\n    paths (newData, oldData) {\n      this.vReload()\n    }\n  },\n  computed: {\n    path: function () {\n      let pa = this.$store.getters.getViPathingData\n      let isShow = pa.isShow\n      if (pa.Mxy) {\n        pa = this.computeXY(pa.Mxy, pa.Txy, true)\n      }\n      pa.isShow = isShow\n      pa.dotted = this.$store.getters.getViConfig.isDotted\n      pa.ptype = this.$store.getters.getViConfig.lineType\n      return pa\n    }\n  },\n  mounted: function () {\n    this.vReload()\n  },\n  methods: {\n    vReload () {\n      let me = this\n      this.con = []\n      this.paths.forEach((o) => {\n        let vstart = document.getElementById(o.startPort)\n        let vend = document.getElementById(o.endPort)\n        if (vend && vstart) {\n          let obj = me.computeXY(vstart, vend, false)\n          if (o.dotted) {\n            obj.dotted = o.dotted\n          }\n          if (o.ptype) {\n            obj.ptype = o.ptype\n          }\n          obj.startPort = o.startPort\n          obj.endPort = o.endPort\n          me.con.push(obj)\n        }\n      })\n    },\n    computeXY (vstart, vend, isBing) {\n      let area = document.getElementById(this.areaid)\n      let scaling = this.$store.getters.getViConfig.scaling\n      let obj = {}\n      if (isBing) {\n        obj = {\n          Mxy: {\n            x: vstart.x - area.getBoundingClientRect().left,\n            y: vstart.y - area.getBoundingClientRect().top\n          },\n          Txy: {\n            x: vend.x - area.getBoundingClientRect().left,\n            y: vend.y - area.getBoundingClientRect().top\n          }\n        }\n      } else {\n        obj = {\n          Mxy: {\n            x: vstart.getBoundingClientRect().left - area.getBoundingClientRect().left + (5 * scaling.ZoomX),\n            y: vstart.getBoundingClientRect().top - area.getBoundingClientRect().top + (5 * scaling.ZoomY)\n          },\n          Txy: {\n            x: vend.getBoundingClientRect().left - area.getBoundingClientRect().left + (4 * scaling.ZoomX),\n            y: vend.getBoundingClientRect().top - area.getBoundingClientRect().top + 0\n          }\n        }\n      }\n      return obj\n    },\n    mouseFn (event, portData) {\n      this.$emit('on-mouse', event, portData)\n    },\n    mouseOverFn (event, portData) {\n      this.$emit('on-mouse-over', event, portData)\n    },\n    mouseOutFn (event, portData) {\n      this.$emit('on-mouse-out', event, portData)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-task-node/src/lib/components/path"}]}