{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\search\\Transit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\search\\Transit.vue","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { createPoint } from '../base/factory.js';\nimport { isPoint, getPosition } from '../base/util.js';\nimport commonMixin from '../base/mixins/common.js';\nexport default {\n  name: 'bm-transit',\n  mixins: [commonMixin('search')],\n  props: {\n    location: {\n      type: [Object, String]\n    },\n    start: {\n      type: [Object, String]\n    },\n    end: {\n      type: [Object, String]\n    },\n    panel: {\n      type: Boolean,\n      default: true\n    },\n    policy: {\n      type: String\n    },\n    pageCapacity: {\n      type: Number\n    },\n    autoViewport: {\n      type: Boolean\n    },\n    selectFirstResult: {\n      type: Boolean\n    }\n  },\n  watch: {\n    location: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            map = this.map;\n        originInstance.setLocation(val || map);\n      },\n      deep: true\n    },\n    start: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            end = this.end,\n            BMap = this.BMap;\n        originInstance.search(getPosition(BMap, val), getPosition(BMap, end));\n      },\n      deep: true\n    },\n    end: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            start = this.start,\n            BMap = this.BMap;\n        originInstance.search(getPosition(BMap, start), getPosition(BMap, val));\n      },\n      deep: true\n    },\n    panel: function panel() {\n      this.reload();\n    },\n    policy: function policy(val) {\n      this.originInstance.setPolicy(global[val]);\n    },\n    pageCapacity: function pageCapacity(val) {\n      this.originInstance && this.originInstance.setPageCapacity(val);\n    },\n    autoViewport: function autoViewport(val) {\n      this.originInstance && (val ? this.originInstance.enableAutoViewport() : this.originInstance.disableAutoViewport());\n    },\n    selectFirstResult: function selectFirstResult() {\n      this.reload();\n    },\n    highlightMode: function highlightMode() {\n      this.reload();\n    }\n  },\n  methods: {\n    search: function search(start, end) {\n      var originInstance = this.originInstance;\n      originInstance.search(start, end);\n    },\n    load: function load() {\n      var instance = this;\n      var map = this.map,\n          BMap = this.BMap,\n          location = this.location,\n          policy = this.policy,\n          pageCapacity = this.pageCapacity,\n          selectFirstResult = this.selectFirstResult,\n          autoViewport = this.autoViewport,\n          highlightMode = this.highlightMode,\n          search = this.search,\n          start = this.start,\n          end = this.end,\n          originInstance = this.originInstance;\n\n      var _location = location ? isPoint(location) ? createPoint(BMap, location) : location : map;\n\n      var route = this.originInstance = new BMap.TransitRoute(_location, {\n        renderOptions: {\n          map: map,\n          // panel: panel && this.$el,\n          panel: this.$el,\n          selectFirstResult: selectFirstResult,\n          autoViewport: autoViewport,\n          highlightMode: highlightMode\n        },\n        policy: global[policy],\n        pageCapacity: pageCapacity,\n        onSearchComplete: function onSearchComplete(e) {\n          if (originInstance && originInstance !== route) {\n            originInstance.clearResults();\n          }\n\n          instance.$emit('searchcomplete', e);\n        },\n        onMarkersSet: function onMarkersSet(e) {\n          instance.$emit('markersset', e);\n        },\n        onInfoHtmlSet: function onInfoHtmlSet(e) {\n          instance.$emit('infohtmlset', e);\n        },\n        onPolylinesSet: function onPolylinesSet(e) {\n          instance.$emit('polylinesset', e);\n        },\n        onResultsHtmlSet: function onResultsHtmlSet(e) {\n          instance.$emit('resultshtmlset', e);\n        }\n      });\n      search(isPoint(start) ? createPoint(BMap, start) : start, isPoint(end) ? createPoint(BMap, end) : end);\n    }\n  }\n};",{"version":3,"sources":["Transit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div v-show=\"panel\">\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport {createPoint} from '../base/factory.js'\nimport {isPoint, getPosition} from '../base/util.js'\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-transit',\n  mixins: [commonMixin('search')],\n  props: {\n    location: {\n      type: [Object, String]\n    },\n    start: {\n      type: [Object, String]\n    },\n    end: {\n      type: [Object, String]\n    },\n    panel: {\n      type: Boolean,\n      default: true\n    },\n    policy: {\n      type: String\n    },\n    pageCapacity: {\n      type: Number\n    },\n    autoViewport: {\n      type: Boolean\n    },\n    selectFirstResult: {\n      type: Boolean\n    }\n  },\n  watch: {\n    location: {\n      handler (val) {\n        const {originInstance, map} = this\n        originInstance.setLocation(val || map)\n      },\n      deep: true\n    },\n    start: {\n      handler (val) {\n        const {originInstance, end, BMap} = this\n        originInstance.search(getPosition(BMap, val), getPosition(BMap, end))\n      },\n      deep: true\n    },\n    end: {\n      handler (val) {\n        const {originInstance, start, BMap} = this\n        originInstance.search(getPosition(BMap, start), getPosition(BMap, val))\n      },\n      deep: true\n    },\n    panel () {\n      this.reload()\n    },\n    policy (val) {\n      this.originInstance.setPolicy(global[val])\n    },\n    pageCapacity (val) {\n      this.originInstance && this.originInstance.setPageCapacity(val)\n    },\n    autoViewport (val) {\n      this.originInstance && (val ? this.originInstance.enableAutoViewport() : this.originInstance.disableAutoViewport())\n    },\n    selectFirstResult () {\n      this.reload()\n    },\n    highlightMode () {\n      this.reload()\n    }\n  },\n  methods: {\n    search (start, end) {\n      const {originInstance} = this\n      originInstance.search(start, end)\n    },\n    load () {\n      const instance = this\n      const {map, BMap, location, policy, pageCapacity, selectFirstResult, autoViewport, highlightMode, search, start, end, originInstance} = this\n      const _location = location ? isPoint(location) ? createPoint(BMap, location) : location : map\n      const route = this.originInstance = new BMap.TransitRoute(_location, {\n        renderOptions: {\n          map,\n          // panel: panel && this.$el,\n          panel: this.$el,\n          selectFirstResult,\n          autoViewport,\n          highlightMode\n        },\n        policy: global[policy],\n        pageCapacity,\n        onSearchComplete (e) {\n          if (originInstance && originInstance !== route) {\n            originInstance.clearResults()\n          }\n          instance.$emit('searchcomplete', e)\n        },\n        onMarkersSet (e) {\n          instance.$emit('markersset', e)\n        },\n        onInfoHtmlSet (e) {\n          instance.$emit('infohtmlset', e)\n        },\n        onPolylinesSet (e) {\n          instance.$emit('polylinesset', e)\n        },\n        onResultsHtmlSet (e) {\n          instance.$emit('resultshtmlset', e)\n        }\n      })\n      search(isPoint(start) ? createPoint(BMap, start) : start, isPoint(end) ? createPoint(BMap, end) : end)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/search"}]}