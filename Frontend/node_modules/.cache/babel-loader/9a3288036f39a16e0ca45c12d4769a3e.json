{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ConstructionConsultationSystem\\Frontend\\src\\store\\modules\\user.js","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\store\\modules\\user.js","mtime":1553931799951},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport api from '../../api/user';\nimport { welcome } from '@/utils/util';\nvar user = {\n  state: {\n    id: '',\n    username: '',\n    role: []\n  },\n  mutations: {\n    SET_ID: function SET_ID(state, id) {\n      state.id = id;\n    },\n    SET_USERNAME: function SET_USERNAME(state, username) {\n      state.username = username;\n    },\n    SET_ROLE: function SET_ROLE(state, role) {\n      state.role = role;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref, user) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        api.login(user.username, user.password).then(function (data) {\n          if (!data.error && data.result === '登陆成功') {\n            resolve(data.result);\n          } else {\n            console.log('here');\n            reject(data.error);\n          }\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref2) {\n      var commit = _ref2.commit;\n      return new _Promise(function (resolve, reject) {\n        api.getInfo().then(function (response) {\n          var result = response.result;\n\n          if (result.role && result.role.permissions.length > 0) {\n            var role = result.role;\n            role.permissions = result.role.permissions;\n            role.permissions.map(function (per) {\n              if (per.actions != null && per.actions.length > 0) {\n                per.actionList = per.actions.map(function (action) {\n                  return action.name;\n                });\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              return permission.name;\n            });\n            commit('SET_ROLE', result.role);\n            commit('SET_ID', result.id);\n            commit('SET_USERNAME', result.username);\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          }\n\n          resolve(response);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref3) {\n      var commit = _ref3.commit;\n      return new _Promise(function (resolve) {\n        commit('SET_ID', '');\n        commit('SET_USERNAME', '');\n        commit('SET_ROLE', []);\n        api.logout().then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["E:\\ConstructionConsultationSystem\\Frontend\\src\\store\\modules\\user.js"],"names":["api","welcome","user","state","id","username","role","mutations","SET_ID","SET_USERNAME","SET_ROLE","actions","Login","commit","resolve","reject","login","password","then","data","error","result","console","log","catch","GetInfo","getInfo","response","permissions","length","map","per","actionList","action","name","permissionList","permission","Error","Logout","logout"],"mappings":"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","sourcesContent":["import api from '../../api/user'\r\nimport { welcome } from '@/utils/util'\r\n\r\nconst user = {\r\n  state: {\r\n    id: '',\r\n    username: '',\r\n    role: []\r\n  },\r\n  mutations: {\r\n    SET_ID: (state, id) => {\r\n      state.id = id\r\n    },\r\n    SET_USERNAME: (state, username) => {\r\n      state.username = username\r\n    },\r\n    SET_ROLE: (state, role) => {\r\n      state.role = role\r\n    }\r\n  },\r\n  actions: {\r\n    // 登录\r\n    Login ({ commit }, user) {\r\n      return new Promise((resolve, reject) => {\r\n        api.login(user.username, user.password).then(data => {\r\n          if (!data.error && data.result === '登陆成功') {\r\n            resolve(data.result)\r\n          } else {\r\n            console.log('here')\r\n            reject(data.error)\r\n          }\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    GetInfo ({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        api.getInfo().then(response => {\r\n          const result = response.result\r\n          if (result.role && result.role.permissions.length > 0) {\r\n            const role = result.role\r\n            role.permissions = result.role.permissions\r\n            role.permissions.map(per => {\r\n              if (per.actions != null && per.actions.length > 0) {\r\n                per.actionList = per.actions.map(action => {\r\n                  return action.name\r\n                })\r\n              }\r\n            })\r\n            role.permissionList = role.permissions.map(permission => {\r\n              return permission.name\r\n            })\r\n            commit('SET_ROLE', result.role)\r\n            commit('SET_ID', result.id)\r\n            commit('SET_USERNAME', result.username)\r\n          } else {\r\n            reject(new Error('getInfo: roles must be a non-null array !'))\r\n          }\r\n          resolve(response)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 登出\r\n    Logout ({ commit }) {\r\n      return new Promise((resolve) => {\r\n        commit('SET_ID', '')\r\n        commit('SET_USERNAME', '')\r\n        commit('SET_ROLE', [])\r\n        api.logout().then(() => {\r\n          resolve()\r\n        }).catch(() => {\r\n          resolve()\r\n        })\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default user\r\n"]}]}