{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\mixin.js","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\mixin.js","mtime":1553931800013},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":1575333166264}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\FoodProductManagementSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n// import Vue from 'vue'\nimport { DEVICE_TYPE } from '@/utils/device';\nimport { mapState } from 'vuex'; // const mixinsComputed = Vue.config.optionMergeStrategies.computed\n// const mixinsMethods = Vue.config.optionMergeStrategies.methods\n\nvar mixin = {\n  computed: _objectSpread({}, mapState({\n    layoutMode: function layoutMode(state) {\n      return state.app.layout;\n    },\n    navTheme: function navTheme(state) {\n      return state.app.theme;\n    },\n    primaryColor: function primaryColor(state) {\n      return state.app.color;\n    },\n    colorWeak: function colorWeak(state) {\n      return state.app.weak;\n    },\n    fixedHeader: function fixedHeader(state) {\n      return state.app.fixedHeader;\n    },\n    fixSiderbar: function fixSiderbar(state) {\n      return state.app.fixSiderbar;\n    },\n    fixSidebar: function fixSidebar(state) {\n      return state.app.fixSiderbar;\n    },\n    contentWidth: function contentWidth(state) {\n      return state.app.contentWidth;\n    },\n    autoHideHeader: function autoHideHeader(state) {\n      return state.app.autoHideHeader;\n    },\n    sidebarOpened: function sidebarOpened(state) {\n      return state.app.sidebar;\n    },\n    multiTab: function multiTab(state) {\n      return state.app.multiTab;\n    }\n  })),\n  methods: {\n    isTopMenu: function isTopMenu() {\n      return this.layoutMode === 'topmenu';\n    },\n    isSideMenu: function isSideMenu() {\n      return !this.isTopMenu();\n    }\n  }\n};\nvar mixinDevice = {\n  computed: _objectSpread({}, mapState({\n    device: function device(state) {\n      return state.app.device;\n    }\n  })),\n  methods: {\n    isMobile: function isMobile() {\n      return this.device === DEVICE_TYPE.MOBILE;\n    },\n    isDesktop: function isDesktop() {\n      return this.device === DEVICE_TYPE.DESKTOP;\n    },\n    isTablet: function isTablet() {\n      return this.device === DEVICE_TYPE.TABLET;\n    }\n  }\n};\nexport { mixin, mixinDevice };",{"version":3,"sources":["E:\\FoodProductManagementSystem\\Frontend\\src\\utils\\mixin.js"],"names":["DEVICE_TYPE","mapState","mixin","computed","layoutMode","state","app","layout","navTheme","theme","primaryColor","color","colorWeak","weak","fixedHeader","fixSiderbar","fixSidebar","contentWidth","autoHideHeader","sidebarOpened","sidebar","multiTab","methods","isTopMenu","isSideMenu","mixinDevice","device","isMobile","MOBILE","isDesktop","DESKTOP","isTablet","TABLET"],"mappings":";AAAA;AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,MAAzB,C,CAEA;AACA;;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,oBACHF,QAAQ,CAAC;AACVG,IAAAA,UAAU,EAAE,oBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUC,MAAd;AAAA,KADP;AAEVC,IAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUG,KAAd;AAAA,KAFL;AAGVC,IAAAA,YAAY,EAAE,sBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUK,KAAd;AAAA,KAHT;AAIVC,IAAAA,SAAS,EAAE,mBAAAP,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUO,IAAd;AAAA,KAJN;AAKVC,IAAAA,WAAW,EAAE,qBAAAT,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUQ,WAAd;AAAA,KALR;AAMVC,IAAAA,WAAW,EAAE,qBAAAV,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUS,WAAd;AAAA,KANR;AAOVC,IAAAA,UAAU,EAAE,oBAAAX,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUS,WAAd;AAAA,KAPP;AAQVE,IAAAA,YAAY,EAAE,sBAAAZ,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUW,YAAd;AAAA,KART;AASVC,IAAAA,cAAc,EAAE,wBAAAb,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUY,cAAd;AAAA,KATX;AAUVC,IAAAA,aAAa,EAAE,uBAAAd,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUc,OAAd;AAAA,KAVV;AAWVC,IAAAA,QAAQ,EAAE,kBAAAhB,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUe,QAAd;AAAA;AAXL,GAAD,CADL,CADI;AAgBZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SADO,uBACM;AACX,aAAO,KAAKnB,UAAL,KAAoB,SAA3B;AACD,KAHM;AAIPoB,IAAAA,UAJO,wBAIO;AACZ,aAAO,CAAC,KAAKD,SAAL,EAAR;AACD;AANM;AAhBG,CAAd;AA0BA,IAAME,WAAW,GAAG;AAClBtB,EAAAA,QAAQ,oBACHF,QAAQ,CAAC;AACVyB,IAAAA,MAAM,EAAE,gBAAArB,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUoB,MAAd;AAAA;AADH,GAAD,CADL,CADU;AAMlBJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,QADO,sBACK;AACV,aAAO,KAAKD,MAAL,KAAgB1B,WAAW,CAAC4B,MAAnC;AACD,KAHM;AAIPC,IAAAA,SAJO,uBAIM;AACX,aAAO,KAAKH,MAAL,KAAgB1B,WAAW,CAAC8B,OAAnC;AACD,KANM;AAOPC,IAAAA,QAPO,sBAOK;AACV,aAAO,KAAKL,MAAL,KAAgB1B,WAAW,CAACgC,MAAnC;AACD;AATM;AANS,CAApB;AAmBA,SAAS9B,KAAT,EAAgBuB,WAAhB","sourcesContent":["// import Vue from 'vue'\r\nimport { DEVICE_TYPE } from '@/utils/device'\r\nimport { mapState } from 'vuex'\r\n\r\n// const mixinsComputed = Vue.config.optionMergeStrategies.computed\r\n// const mixinsMethods = Vue.config.optionMergeStrategies.methods\r\n\r\nconst mixin = {\r\n  computed: {\r\n    ...mapState({\r\n      layoutMode: state => state.app.layout,\r\n      navTheme: state => state.app.theme,\r\n      primaryColor: state => state.app.color,\r\n      colorWeak: state => state.app.weak,\r\n      fixedHeader: state => state.app.fixedHeader,\r\n      fixSiderbar: state => state.app.fixSiderbar,\r\n      fixSidebar: state => state.app.fixSiderbar,\r\n      contentWidth: state => state.app.contentWidth,\r\n      autoHideHeader: state => state.app.autoHideHeader,\r\n      sidebarOpened: state => state.app.sidebar,\r\n      multiTab: state => state.app.multiTab\r\n    })\r\n  },\r\n  methods: {\r\n    isTopMenu () {\r\n      return this.layoutMode === 'topmenu'\r\n    },\r\n    isSideMenu () {\r\n      return !this.isTopMenu()\r\n    }\r\n  }\r\n}\r\n\r\nconst mixinDevice = {\r\n  computed: {\r\n    ...mapState({\r\n      device: state => state.app.device\r\n    })\r\n  },\r\n  methods: {\r\n    isMobile () {\r\n      return this.device === DEVICE_TYPE.MOBILE\r\n    },\r\n    isDesktop () {\r\n      return this.device === DEVICE_TYPE.DESKTOP\r\n    },\r\n    isTablet () {\r\n      return this.device === DEVICE_TYPE.TABLET\r\n    }\r\n  }\r\n}\r\n\r\nexport { mixin, mixinDevice }\r\n"]}]}