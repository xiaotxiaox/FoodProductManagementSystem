{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\quality\\Quality.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\quality\\Quality.vue","mtime":1563501632238},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _getIterator from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _objectSpread from \"E:\\\\ConstructionConsultationSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport QualityModal from './components/QualityModal';\nimport EmphasisModal from './components/EmphasisModal';\nimport TableModal from './components/TableModal';\nimport api from '../../../api/implement';\nimport { mapGetters } from 'vuex';\nvar columns = [{\n  title: '建筑名称',\n  dataIndex: 'name',\n  width: '20%',\n  align: 'center'\n}, {\n  title: '奖项',\n  dataIndex: 'awards',\n  customRender: function customRender(text, record) {\n    if (record.awards === '1') return '市级';else if (record.awards === '2') return '省级';else if (record.awards === '3') return '国级';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '基础',\n  dataIndex: 'base',\n  customRender: function customRender(text, record) {\n    if (record.base === '1') return '合格';else if (record.base === '2') return '不合格';else if (record.base === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '主体',\n  dataIndex: 'mainBody',\n  customRender: function customRender(text, record) {\n    if (record.mainBody === '1') return '合格';else if (record.mainBody === '2') return '不合格';else if (record.mainBody === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '装饰',\n  dataIndex: 'decorate',\n  customRender: function customRender(text, record) {\n    if (record.decorate === '1') return '合格';else if (record.decorate === '2') return '不合格';else if (record.decorate === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '屋面',\n  dataIndex: 'roofing',\n  customRender: function customRender(text, record) {\n    if (record.roofing === '1') return '合格';else if (record.roofing === '2') return '不合格';else if (record.roofing === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '防水',\n  dataIndex: 'waterproof',\n  customRender: function customRender(text, record) {\n    if (record.waterproof === '1') return '合格';else if (record.waterproof === '2') return '不合格';else if (record.waterproof === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '保温',\n  dataIndex: 'insulation',\n  customRender: function customRender(text, record) {\n    if (record.insulation === '1') return '合格';else if (record.insulation === '2') return '不合格';else if (record.insulation === '3') return '严重不合格';\n  },\n  width: '10%',\n  align: 'center'\n}, {\n  title: '编辑',\n  dataIndex: 'operation',\n  scopedSlots: {\n    customRender: 'operation'\n  },\n  align: 'center'\n}];\nvar emphasisColumns = [{\n  title: '重点',\n  dataIndex: 'keyPoint',\n  width: '25%',\n  align: 'center'\n}, {\n  title: '难点',\n  dataIndex: 'difficulty',\n  width: '25%',\n  align: 'center'\n}, {\n  title: '通病',\n  dataIndex: 'CommonFailing',\n  width: '25%',\n  align: 'center'\n}, {\n  title: '编辑',\n  dataIndex: 'operation',\n  scopedSlots: {\n    customRender: 'operation'\n  },\n  align: 'center'\n}];\nexport default {\n  name: \"Quality\",\n  components: {\n    QualityModal: QualityModal,\n    EmphasisModal: EmphasisModal\n  },\n  props: {\n    id: Number\n  },\n  data: function data() {\n    return {\n      status: {\n        listLoading: true,\n        tableLoading: true\n      },\n      columns: columns,\n      qualityList: [],\n      emphasisColumns: emphasisColumns,\n      emphasisList: [],\n      not_num: '',\n      reply_num: '',\n      option1: {\n        tooltip: {},\n        xAxis: {\n          data: [],\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 20\n            }\n          }\n        },\n        yAxis: {\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 14\n            },\n            formatter: function formatter(value) {\n              var texts = [];\n\n              if (value == \"1\") {\n                texts.push('市级');\n              } else if (value == \"2\") {\n                texts.push('省级');\n              } else if (value == \"3\") {\n                texts.push('国级');\n              }\n\n              return texts;\n            }\n          }\n        },\n        series: [{\n          label: {\n            textStyle: {\n              fontSize: 50\n            }\n          },\n          name: '奖项',\n          type: 'bar',\n          barWidth: 50,\n          data: [1, 2, 3, 3],\n          itemStyle: {\n            normal: {\n              //每根柱子颜色设置\n              color: function color(params) {\n                var colorList = ['#00B0F0'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }\n        }]\n      },\n      chart1: null,\n      charts: '',\n      opinion: ['已回复', '未回复'],\n      opinionData: [{\n        value: 50,\n        name: '已回复',\n        itemStyle: {\n          color: '#00b0f0'\n        }\n      }, {\n        value: 50,\n        name: '未回复',\n        itemStyle: {\n          color: '#7030a0'\n        }\n      }],\n      qualityModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        quality_id: this.id\n      },\n      emphasisModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        emphasis_id: this.id\n      },\n      tableModal: {\n        record: null,\n        visible: false,\n        table_id: this.id\n      },\n      form: this.$form.createForm(this),\n      project_id: this.projectSelected().id\n    };\n  },\n  mounted: function mounted() {\n    this.chart1 = echarts.init(document.getElementById('echartContainer'));\n    this.chart1.setOption(this.option1, true);\n    window.onresize = this.chart1.resize;\n    this.getData();\n    this.$nextTick(function () {\n      this.drawPie('main');\n    });\n  },\n  methods: _objectSpread({}, mapGetters(['projectSelected']), {\n    getData: function getData() {\n      var _this = this;\n\n      api.getQualityList(this.project_id).then(function (data) {\n        _this.qualityList = data;\n\n        _this.change();\n\n        _this.status.listLoading = false;\n      });\n      api.getDifficultyList(this.project_id).then(function (data) {\n        _this.emphasisList = data;\n      });\n      api.getContractNotice(this.project_id).then(function (data) {\n        _this.not_num = data.not_num;\n        _this.reply_num = data.reply_num;\n        _this.opinionData[0].value = _this.reply_num;\n        _this.opinionData[1].value = _this.not_num;\n\n        _this.$nextTick(function () {\n          this.drawPie('main');\n        });\n      });\n    },\n    change: function change() {\n      var arrName = [];\n      var arrProgress = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.qualityList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var building = _step.value;\n          console.log(this.qualityList);\n          console.log(building);\n          arrName.push(building.name);\n          arrProgress.push(building.awards);\n        } // console.log(building)\n        // console.log(arrName)\n        // console.log(arrProgress)\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.chart1.setOption({\n        tooltip: {},\n        xAxis: {\n          data: arrName,\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 20\n            }\n          }\n        },\n        yAxis: {\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 14\n            },\n            formatter: function formatter(value) {\n              var texts = [];\n\n              if (value == \"1\") {\n                texts.push('市级');\n              } else if (value == \"2\") {\n                texts.push('省级');\n              } else if (value == \"3\") {\n                texts.push('国级');\n              }\n\n              return texts;\n            }\n          }\n        },\n        series: [{\n          label: {\n            textStyle: {\n              fontSize: 50\n            }\n          },\n          name: '总计',\n          type: 'bar',\n          barWidth: 50,\n          data: arrProgress,\n          itemStyle: {\n            normal: {\n              //每根柱子颜色设置\n              color: '#1890FF'\n            }\n          }\n        }]\n      }, true);\n    },\n    drawPie: function drawPie(id) {\n      this.charts = echarts.init(document.getElementById(id));\n      this.charts.setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          x: 'left',\n          data: this.opinion\n        },\n        series: [{\n          name: '数量',\n          type: 'pie',\n          radius: ['0%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: true,\n              position: 'inside'\n            },\n            emphasis: {\n              show: true,\n              textStyle: {\n                fontSize: '30',\n                fontWeight: 'blod'\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: this.opinionData\n        }]\n      });\n    },\n    handleQualityClose: function handleQualityClose() {\n      this.qualityModal.type = '';\n      this.qualityModal.record = null;\n      this.qualityModal.visible = false;\n      this.getData();\n    },\n    handleQualityEdit: function handleQualityEdit(record) {\n      this.qualityModal.type = 'edit';\n      this.qualityModal.record = record;\n      this.qualityModal.visible = true;\n    },\n    handleEmphasisClose: function handleEmphasisClose() {\n      this.emphasisModal.type = '';\n      this.emphasisModal.record = null;\n      this.emphasisModal.visible = false;\n      this.getData();\n    },\n    handleEmphasisEdit: function handleEmphasisEdit(record) {\n      this.emphasisModal.type = 'edit';\n      this.emphasisModal.record = record;\n      this.emphasisModal.visible = true;\n    }\n  })\n};",{"version":3,"sources":["Quality.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <quality-modal\r\n      :record=\"qualityModal.record\"\r\n      :visible=\"qualityModal.visible\"\r\n      :type=\"qualityModal.type\"\r\n      :quality_id=\"qualityModal.building_id\"\r\n      v-if=\"qualityModal.visible\"\r\n      @close=\"handleQualityClose()\">\r\n    </quality-modal>\r\n    <emphasis-modal\r\n      :record=\"emphasisModal.record\"\r\n      :visible=\"emphasisModal.visible\"\r\n      :type=\"emphasisModal.type\"\r\n      :difficulty_id=\"emphasisModal.difficulty_id\"\r\n      v-if=\"emphasisModal.visible\"\r\n      @close=\"handleEmphasisClose()\">\r\n    </emphasis-modal>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-row>\r\n        <a-col\r\n          :xs=\"{ span: 24 }\"\r\n          :sm=\"{ span: 24 }\"\r\n          :xl=\"{ span: 24 }\">\r\n          <div style=\"width: 50%;height:100%;float: left\">\r\n            <div id=\"echartContainer\" style=\"width: 100%; height: 400px;\"></div>\r\n          </div>\r\n          <div style=\"width: 50%;height:100%;float: right\">\r\n            <div id=\"main\" style=\"width: 100%;height: 400px;\"></div>\r\n          </div>\r\n        </a-col>\r\n      </a-row>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-spin :spinning=\"status.listLoading\">\r\n        <a-table\r\n          bordered\r\n          :columns=\"columns\"\r\n          :dataSource=\"qualityList\"\r\n          rowKey=\"building_id\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handleQualityEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n      </a-spin>\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-spin :spinning=\"status.listLoading\">\r\n        <a-table\r\n          bordered\r\n          :columns=\"emphasisColumns\"\r\n          :dataSource=\"emphasisList\"\r\n          rowKey=\"building_id\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handleEmphasisEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n      </a-spin>\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import echarts from 'echarts'\r\n  import QualityModal from './components/QualityModal'\r\n  import EmphasisModal from './components/EmphasisModal'\r\n  import TableModal from './components/TableModal'\r\n  import api from '../../../api/implement'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  const columns = [\r\n    {\r\n      title: '建筑名称',\r\n      dataIndex: 'name',\r\n      width: '20%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '奖项',\r\n      dataIndex: 'awards',\r\n      customRender: (text, record) => {\r\n        if (record.awards === '1')\r\n          return '市级'\r\n        else if (record.awards === '2')\r\n          return '省级'\r\n        else if (record.awards === '3')\r\n          return '国级'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '基础',\r\n      dataIndex: 'base',\r\n      customRender: (text, record) => {\r\n        if (record.base === '1')\r\n          return '合格'\r\n        else if (record.base === '2')\r\n          return '不合格'\r\n        else if (record.base === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '主体',\r\n      dataIndex: 'mainBody',\r\n      customRender: (text, record) => {\r\n        if (record.mainBody === '1')\r\n          return '合格'\r\n        else if (record.mainBody === '2')\r\n          return '不合格'\r\n        else if (record.mainBody === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '装饰',\r\n      dataIndex: 'decorate',\r\n      customRender: (text, record) => {\r\n        if (record.decorate === '1')\r\n          return '合格'\r\n        else if (record.decorate === '2')\r\n          return '不合格'\r\n        else if (record.decorate === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '屋面',\r\n      dataIndex: 'roofing',\r\n      customRender: (text, record) => {\r\n        if (record.roofing === '1')\r\n          return '合格'\r\n        else if (record.roofing === '2')\r\n          return '不合格'\r\n         else if (record.roofing === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '防水',\r\n      dataIndex: 'waterproof',\r\n      customRender: (text, record) => {\r\n        if (record.waterproof === '1')\r\n          return '合格'\r\n        else if (record.waterproof === '2')\r\n          return '不合格'\r\n        else if (record.waterproof === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '保温',\r\n      dataIndex: 'insulation',\r\n      customRender: (text, record) => {\r\n        if (record.insulation === '1')\r\n          return '合格'\r\n        else if (record.insulation === '2')\r\n          return '不合格'\r\n        else if (record.insulation === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  const emphasisColumns = [\r\n    {\r\n      title: '重点',\r\n      dataIndex: 'keyPoint',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '难点',\r\n      dataIndex: 'difficulty',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '通病',\r\n      dataIndex: 'CommonFailing',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  export default {\r\n    name: \"Quality\",\r\n    components: {\r\n      QualityModal,\r\n      EmphasisModal,\r\n    },\r\n    props: {\r\n      id: Number\r\n    },\r\n    data() {\r\n      return {\r\n        status: {\r\n          listLoading: true,\r\n          tableLoading: true\r\n        },\r\n        columns,\r\n        qualityList: [],\r\n        emphasisColumns,\r\n        emphasisList: [],\r\n        not_num: '',\r\n        reply_num: '',\r\n        option1: {\r\n          tooltip: {},\r\n          xAxis: {\r\n            data: [],\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 20\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 14\r\n              },\r\n              formatter: function (value) {\r\n                var texts = [];\r\n                if (value == \"1\") {\r\n                  texts.push('市级');\r\n                } else if (value == \"2\") {\r\n                  texts.push('省级');\r\n                } else if (value == \"3\") {\r\n                  texts.push('国级');\r\n                }\r\n                return texts;\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            label: {\r\n              textStyle: {\r\n                fontSize: 50\r\n              }\r\n            },\r\n            name: '奖项',\r\n            type: 'bar',\r\n            barWidth: 50,\r\n            data: [1, 2, 3, 3],\r\n            itemStyle: {\r\n              normal: {\r\n                //每根柱子颜色设置\r\n                color: function (params) {\r\n                  let colorList = [\r\n                    '#00B0F0'\r\n                  ]\r\n                  return colorList[params.dataIndex]\r\n                }\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        chart1: null,\r\n        charts: '',\r\n        opinion: ['已回复', '未回复'],\r\n        opinionData: [\r\n          {value: 50, name: '已回复', itemStyle: {color: '#00b0f0'}},\r\n          {value: 50, name: '未回复', itemStyle: {color: '#7030a0'}},\r\n        ],\r\n        qualityModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          quality_id: this.id\r\n        },\r\n        emphasisModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          emphasis_id: this.id\r\n        },\r\n        tableModal: {\r\n          record: null,\r\n          visible: false,\r\n          table_id: this.id\r\n        },\r\n        form: this.$form.createForm(this),\r\n        project_id: this.projectSelected().id\r\n      }\r\n    }\r\n    ,\r\n    mounted() {\r\n      this.chart1 = echarts.init(document.getElementById('echartContainer'))\r\n      this.chart1.setOption(this.option1, true)\r\n      window.onresize = this.chart1.resize\r\n      this.getData()\r\n      this.$nextTick(function () {\r\n        this.drawPie('main')\r\n      })\r\n    }\r\n    ,\r\n    methods: {\r\n      ...mapGetters(['projectSelected']),\r\n      getData() {\r\n        api.getQualityList(this.project_id)\r\n          .then(data => {\r\n            this.qualityList = data\r\n            this.change()\r\n            this.status.listLoading = false\r\n          })\r\n        api.getDifficultyList(this.project_id)\r\n          .then(data => {\r\n            this.emphasisList = data\r\n          })\r\n        api.getContractNotice(this.project_id)\r\n          .then(data => {\r\n            this.not_num = data.not_num\r\n            this.reply_num = data.reply_num\r\n            this.opinionData[0].value=this.reply_num\r\n            this.opinionData[1].value=this.not_num\r\n            this.$nextTick(function () {\r\n              this.drawPie('main')\r\n            })\r\n          })\r\n      },\r\n      change() {\r\n        var arrName = []\r\n        var arrProgress = []\r\n        for (var building of this.qualityList) {\r\n          console.log(this.qualityList)\r\n          console.log(building)\r\n          arrName.push(building.name)\r\n          arrProgress.push(building.awards)\r\n        }\r\n        // console.log(building)\r\n        // console.log(arrName)\r\n        // console.log(arrProgress)\r\n        this.chart1.setOption({\r\n          tooltip: {},\r\n          xAxis: {\r\n            data: arrName,\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 20\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 14\r\n              },\r\n              formatter: function (value) {\r\n                var texts = [];\r\n                if (value == \"1\") {\r\n                  texts.push('市级');\r\n                } else if (value == \"2\") {\r\n                  texts.push('省级');\r\n                } else if (value == \"3\") {\r\n                  texts.push('国级');\r\n                }\r\n                return texts;\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            label: {\r\n              textStyle: {\r\n                fontSize: 50\r\n              }\r\n            },\r\n            name: '总计',\r\n            type: 'bar',\r\n            barWidth: 50,\r\n            data: arrProgress,\r\n            itemStyle: {\r\n              normal: {\r\n                //每根柱子颜色设置\r\n                color: '#1890FF'\r\n              }\r\n            }\r\n          }]\r\n        }, true)\r\n\r\n      },\r\n      drawPie(id) {\r\n        this.charts = echarts.init(document.getElementById(id))\r\n        this.charts.setOption({\r\n          tooltip: {\r\n            trigger: 'item',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            x: 'left',\r\n            data: this.opinion\r\n          },\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'pie',\r\n              radius: ['0%', '70%'],\r\n              avoidLabelOverlap: false,\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'inside'\r\n                },\r\n                emphasis: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    fontSize: '30',\r\n                    fontWeight: 'blod'\r\n                  }\r\n                }\r\n              },\r\n              labelLine: {\r\n                normal: {\r\n                  show: false\r\n                }\r\n              },\r\n              data: this.opinionData\r\n            }\r\n          ]\r\n        })\r\n      },\r\n      handleQualityClose() {\r\n        this.qualityModal.type = ''\r\n        this.qualityModal.record = null\r\n        this.qualityModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleQualityEdit(record) {\r\n        this.qualityModal.type = 'edit'\r\n        this.qualityModal.record = record\r\n        this.qualityModal.visible = true\r\n      },\r\n      handleEmphasisClose() {\r\n        this.emphasisModal.type = ''\r\n        this.emphasisModal.record = null\r\n        this.emphasisModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleEmphasisEdit(record) {\r\n        this.emphasisModal.type = 'edit'\r\n        this.emphasisModal.record = record\r\n        this.emphasisModal.visible = true\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/implement/quality"}]}