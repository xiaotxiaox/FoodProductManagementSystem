{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\others\\Boundary.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\others\\Boundary.vue","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BmPolygon from '../overlays/Polygon.vue';\nimport commonMixin from '../base/mixins/common.js'; // import abstractMixin from '../base/mixins/abstract.js'\n\nexport default {\n  mixins: [commonMixin('abstract')],\n  props: ['name', 'strokeColor', 'strokeWeight', 'strokeOpacity', 'strokeStyle', 'fillColor', 'fillOpacity', 'massClear', 'clicking'],\n  data: function data() {\n    return {\n      paths: []\n    };\n  },\n  components: {\n    BmPolygon: BmPolygon\n  },\n  watch: {\n    name: function name() {\n      this.reload();\n    }\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      var BMap = this.BMap,\n          name = this.name;\n      var bd = new BMap.Boundary();\n      bd.get(name, function (data) {\n        _this.paths = data.boundaries.map(function (boundary) {\n          return (boundary || []).split(';').map(function (point) {\n            return function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  lng = _ref2[0],\n                  lat = _ref2[1];\n\n              return {\n                lng: lng,\n                lat: lat\n              };\n            }(point.split(',').map(function (p) {\n              return +p;\n            }));\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Boundary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,WAAA,MAAA,0BAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CACA,WAAA,CAAA,UAAA,CADA,CADA;AAIA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,aAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,UAAA,CAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAVA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,MAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;AAEA,UAAA,EAAA,GAAA,IAAA,IAAA,CAAA,QAAA,EAAA;AACA,MAAA,EAAA,CAAA,GAAA,CAAA,IAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,QAAA;AAAA,iBAAA,CAAA,QAAA,IAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EACA,GADA,CACA,UAAA,KAAA;AAAA,mBAAA;AAAA;AAAA,kBAAA,GAAA;AAAA,kBAAA,GAAA;;AAAA,qBAAA;AAAA,gBAAA,GAAA,EAAA,GAAA;AAAA,gBAAA,GAAA,EAAA;AAAA,eAAA;AAAA,aAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA,qBAAA,CAAA,CAAA;AAAA,aAAA,CAAA,CAAA;AAAA,WADA,CAAA;AAAA,SAAA,CAAA;AAEA,OAHA;AAIA;AARA;AAlBA,CAAA","sourcesContent":["<template>\n  <div v-if=\"paths.length\">\n    <bm-polygon\n      v-for=\"(path, index) of paths\"\n      :key=\"index\"\n      :path=\"path\"\n      :stroke-color=\"strokeColor\"\n      :stroke-weight=\"strokeWeight\"\n      :stroke-opacity=\"strokeOpacity\"\n      :stroke-style=\"strokeStyle\"\n      :fill-opacity=\"fillOpacity\"\n      :fill-color=\"fillColor\"\n      :mass-clear=\"massClear\"\n      :clicking=\"clicking\"\n      @click=\"$emit('click', $event)\"\n      @dblclick=\"$emit('dblclick', $event)\"\n      @mousedown=\"$emit('mousedown', $event)\"\n      @mouseup=\"$emit('mouseup', $event)\"\n      @mouseout=\"$emit('mouseout', $event)\"\n      @mouseover=\"$emit('mouseover', $event)\"\n      @remove=\"$emit('remove', $event)\"\n    />\n  </div>\n</template>\n\n<script>\nimport BmPolygon from '../overlays/Polygon.vue'\nimport commonMixin from '../base/mixins/common.js'\n// import abstractMixin from '../base/mixins/abstract.js'\n\nexport default {\n  mixins: [\n    commonMixin('abstract')\n  ],\n  props: ['name', 'strokeColor', 'strokeWeight', 'strokeOpacity', 'strokeStyle', 'fillColor', 'fillOpacity', 'massClear', 'clicking'],\n  data () {\n    return {\n      paths: []\n    }\n  },\n  components: {\n    BmPolygon\n  },\n  watch: {\n    name () {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, name} = this\n      const bd = new BMap.Boundary()\n      bd.get(name, data => {\n        this.paths = data.boundaries.map(boundary => (boundary || []).split(';')\n           .map(point => (([lng, lat]) => ({lng, lat}))(point.split(',').map(p => +p))))\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/others"}]}