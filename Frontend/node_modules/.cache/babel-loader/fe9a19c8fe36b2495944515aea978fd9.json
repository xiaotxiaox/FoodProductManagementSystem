{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\search\\Driving.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\search\\Driving.vue","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport { createPoint } from '../base/factory.js';\nimport { isPoint, getPosition } from '../base/util.js';\nimport commonMixin from '../base/mixins/common.js';\nexport default {\n  name: 'bm-driving',\n  mixins: [commonMixin('search')],\n  props: {\n    location: {\n      type: [Object, String]\n    },\n    start: {\n      type: [Object, String]\n    },\n    end: {\n      type: [Object, String]\n    },\n    startCity: {\n      type: [String, Number]\n    },\n    endCity: {\n      type: [String, Number]\n    },\n    waypoints: {\n      type: Array\n    },\n    policy: {\n      type: String\n    },\n    panel: {\n      type: Boolean,\n      default: true\n    },\n    autoViewport: {\n      type: Boolean\n    },\n    selectFirstResult: {\n      type: Boolean\n    }\n  },\n  watch: {\n    location: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            map = this.map;\n        originInstance.setLocation(val || map);\n      },\n      deep: true\n    },\n    start: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            end = this.end,\n            startCity = this.startCity,\n            endCity = this.endCity,\n            waypoints = this.waypoints,\n            BMap = this.BMap,\n            getWaypoints = this.getWaypoints;\n        originInstance.search(getPosition(BMap, val), getPosition(BMap, end), {\n          startCity: startCity,\n          endCity: endCity,\n          waypoints: getWaypoints(waypoints)\n        });\n      },\n      deep: true\n    },\n    end: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            start = this.start,\n            startCity = this.startCity,\n            endCity = this.endCity,\n            waypoints = this.waypoints,\n            BMap = this.BMap,\n            getWaypoints = this.getWaypoints;\n        originInstance.search(getPosition(BMap, start), getPosition(BMap, val), {\n          startCity: startCity,\n          endCity: endCity,\n          waypoints: getWaypoints(waypoints)\n        });\n      },\n      deep: true\n    },\n    startCity: function startCity(val) {\n      var originInstance = this.originInstance,\n          start = this.start,\n          end = this.end,\n          endCity = this.endCity,\n          waypoints = this.waypoints,\n          getWaypoints = this.getWaypoints;\n      originInstance.search(start, end, {\n        val: val,\n        endCity: endCity,\n        waypoints: getWaypoints(waypoints)\n      });\n    },\n    endCity: function endCity(val) {\n      var originInstance = this.originInstance,\n          start = this.start,\n          end = this.end,\n          startCity = this.startCity,\n          waypoints = this.waypoints,\n          getWaypoints = this.getWaypoints;\n      originInstance.search(start, end, {\n        startCity: startCity,\n        val: val,\n        waypoints: getWaypoints(waypoints)\n      });\n    },\n    waypoints: {\n      handler: function handler(val) {\n        var originInstance = this.originInstance,\n            start = this.start,\n            end = this.end,\n            startCity = this.startCity,\n            endCity = this.endCity,\n            getWaypoints = this.getWaypoints;\n        originInstance.search(start, end, {\n          startCity: startCity,\n          endCity: endCity,\n          waypoints: getWaypoints(val)\n        });\n      },\n      deep: true\n    },\n    panel: function panel() {\n      this.reload();\n    },\n    policy: function policy(val) {\n      this.reload();\n    },\n    autoViewport: function autoViewport() {\n      this.reload();\n    },\n    selectFirstResult: function selectFirstResult() {\n      this.reload();\n    },\n    highlightMode: function highlightMode() {\n      this.reload();\n    }\n  },\n  methods: {\n    search: function search(start, end, _ref) {\n      var startCity = _ref.startCity,\n          endCity = _ref.endCity,\n          waypoints = _ref.waypoints;\n      var originInstance = this.originInstance,\n          getWaypoints = this.getWaypoints;\n      originInstance.search(start, end, {\n        startCity: startCity,\n        endCity: endCity,\n        waypoints: getWaypoints(waypoints)\n      });\n    },\n    getWaypoints: function getWaypoints(waypoints) {\n      var BMap = this.BMap;\n\n      if (waypoints) {\n        return waypoints.map(function (position) {\n          return getPosition(BMap, position);\n        });\n      }\n    },\n    load: function load() {\n      var instance = this;\n      var map = this.map,\n          BMap = this.BMap,\n          location = this.location,\n          policy = this.policy,\n          selectFirstResult = this.selectFirstResult,\n          autoViewport = this.autoViewport,\n          highlightMode = this.highlightMode,\n          search = this.search,\n          start = this.start,\n          end = this.end,\n          startCity = this.startCity,\n          endCity = this.endCity,\n          waypoints = this.waypoints,\n          originInstance = this.originInstance,\n          getWaypoints = this.getWaypoints;\n\n      var _location = location ? isPoint(location) ? createPoint(BMap, location) : location : map;\n\n      var route = this.originInstance = new BMap.DrivingRoute(_location, {\n        renderOptions: {\n          map: map,\n          // panel: panel && this.$el,\n          panel: this.$el,\n          selectFirstResult: selectFirstResult,\n          autoViewport: autoViewport,\n          highlightMode: highlightMode\n        },\n        policy: global[policy],\n        onSearchComplete: function onSearchComplete(e) {\n          if (originInstance && originInstance !== route) {\n            originInstance.clearResults();\n          }\n\n          instance.$emit('searchcomplete', e);\n        },\n        onMarkersSet: function onMarkersSet(e) {\n          instance.$emit('markersset', e);\n        },\n        onInfoHtmlSet: function onInfoHtmlSet(e) {\n          instance.$emit('infohtmlset', e);\n        },\n        onPolylinesSet: function onPolylinesSet(e) {\n          instance.$emit('polylinesset', e);\n        },\n        onResultsHtmlSet: function onResultsHtmlSet(e) {\n          instance.$emit('resultshtmlset', e);\n        }\n      });\n      search(getPosition(BMap, start), getPosition(BMap, end), {\n        startCity: startCity,\n        endCity: endCity,\n        waypoints: getWaypoints(waypoints)\n      });\n    }\n  }\n};",{"version":3,"sources":["Driving.vue"],"names":[],"mappings":";;;;;;;;AAOA,SAAA,WAAA,QAAA,oBAAA;AACA,SAAA,OAAA,EAAA,WAAA,QAAA,iBAAA;AACA,OAAA,WAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KADA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KAJA;AAOA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KAPA;AAUA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KAVA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA,KAbA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAhBA;AAmBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAnBA;AAsBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtBA;AA0BA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA1BA;AA6BA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AA7BA,GAHA;AAoCA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AAAA,YACA,cADA,GACA,IADA,CACA,cADA;AAAA,YACA,GADA,GACA,IADA,CACA,GADA;AAEA,QAAA,cAAA,CAAA,WAAA,CAAA,GAAA,IAAA,GAAA;AACA,OAJA;AAKA,MAAA,IAAA,EAAA;AALA,KADA;AAQA,IAAA,KAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AAAA,YACA,cADA,GACA,IADA,CACA,cADA;AAAA,YACA,GADA,GACA,IADA,CACA,GADA;AAAA,YACA,SADA,GACA,IADA,CACA,SADA;AAAA,YACA,OADA,GACA,IADA,CACA,OADA;AAAA,YACA,SADA,GACA,IADA,CACA,SADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAAA,YACA,YADA,GACA,IADA,CACA,YADA;AAEA,QAAA,cAAA,CAAA,MAAA,CAAA,WAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA,WAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AACA,UAAA,SAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA,OAFA;AAGA,UAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,SAAA;AAKA,OARA;AASA,MAAA,IAAA,EAAA;AATA,KARA;AAmBA,IAAA,GAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AAAA,YACA,cADA,GACA,IADA,CACA,cADA;AAAA,YACA,KADA,GACA,IADA,CACA,KADA;AAAA,YACA,SADA,GACA,IADA,CACA,SADA;AAAA,YACA,OADA,GACA,IADA,CACA,OADA;AAAA,YACA,SADA,GACA,IADA,CACA,SADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAAA,YACA,YADA,GACA,IADA,CACA,YADA;AAEA,QAAA,cAAA,CAAA,MAAA,CAAA,WAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,WAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AACA,UAAA,SAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA,OAFA;AAGA,UAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,SAAA;AAKA,OARA;AASA,MAAA,IAAA,EAAA;AATA,KAnBA;AA8BA,IAAA,SA9BA,qBA8BA,GA9BA,EA8BA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAEA,MAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AACA,QAAA,GAAA,EAAA,GADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,OAAA;AAKA,KArCA;AAsCA,IAAA,OAtCA,mBAsCA,GAtCA,EAsCA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAEA,MAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,GAAA,EAAA,GAFA;AAGA,QAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,OAAA;AAKA,KA7CA;AA8CA,IAAA,SAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AAAA,YACA,cADA,GACA,IADA,CACA,cADA;AAAA,YACA,KADA,GACA,IADA,CACA,KADA;AAAA,YACA,GADA,GACA,IADA,CACA,GADA;AAAA,YACA,SADA,GACA,IADA,CACA,SADA;AAAA,YACA,OADA,GACA,IADA,CACA,OADA;AAAA,YACA,YADA,GACA,IADA,CACA,YADA;AAEA,QAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AACA,UAAA,SAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA,OAFA;AAGA,UAAA,SAAA,EAAA,YAAA,CAAA,GAAA;AAHA,SAAA;AAKA,OARA;AASA,MAAA,IAAA,EAAA;AATA,KA9CA;AAyDA,IAAA,KAzDA,mBAyDA;AACA,WAAA,MAAA;AACA,KA3DA;AA4DA,IAAA,MA5DA,kBA4DA,GA5DA,EA4DA;AACA,WAAA,MAAA;AACA,KA9DA;AA+DA,IAAA,YA/DA,0BA+DA;AACA,WAAA,MAAA;AACA,KAjEA;AAkEA,IAAA,iBAlEA,+BAkEA;AACA,WAAA,MAAA;AACA,KApEA;AAqEA,IAAA,aArEA,2BAqEA;AACA,WAAA,MAAA;AACA;AAvEA,GApCA;AA6GA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA,GADA,QACA;AAAA,UAAA,SAAA,QAAA,SAAA;AAAA,UAAA,OAAA,QAAA,OAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAEA,MAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,OAAA;AAKA,KARA;AASA,IAAA,YATA,wBASA,SATA,EASA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;;AAEA,UAAA,SAAA,EAAA;AACA,eAAA,SAAA,CAAA,GAAA,CAAA,UAAA,QAAA;AAAA,iBAAA,WAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAA,SAAA,CAAA;AACA;AACA,KAdA;AAeA,IAAA,IAfA,kBAeA;AACA,UAAA,QAAA,GAAA,IAAA;AADA,UAEA,GAFA,GAEA,IAFA,CAEA,GAFA;AAAA,UAEA,IAFA,GAEA,IAFA,CAEA,IAFA;AAAA,UAEA,QAFA,GAEA,IAFA,CAEA,QAFA;AAAA,UAEA,MAFA,GAEA,IAFA,CAEA,MAFA;AAAA,UAEA,iBAFA,GAEA,IAFA,CAEA,iBAFA;AAAA,UAEA,YAFA,GAEA,IAFA,CAEA,YAFA;AAAA,UAEA,aAFA,GAEA,IAFA,CAEA,aAFA;AAAA,UAEA,MAFA,GAEA,IAFA,CAEA,MAFA;AAAA,UAEA,KAFA,GAEA,IAFA,CAEA,KAFA;AAAA,UAEA,GAFA,GAEA,IAFA,CAEA,GAFA;AAAA,UAEA,SAFA,GAEA,IAFA,CAEA,SAFA;AAAA,UAEA,OAFA,GAEA,IAFA,CAEA,OAFA;AAAA,UAEA,SAFA,GAEA,IAFA,CAEA,SAFA;AAAA,UAEA,cAFA,GAEA,IAFA,CAEA,cAFA;AAAA,UAEA,YAFA,GAEA,IAFA,CAEA,YAFA;;AAGA,UAAA,SAAA,GAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA,GAAA,WAAA,CAAA,IAAA,EAAA,QAAA,CAAA,GAAA,QAAA,GAAA,GAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,GAAA,IAAA,IAAA,CAAA,YAAA,CAAA,SAAA,EAAA;AACA,QAAA,aAAA,EAAA;AACA,UAAA,GAAA,EAAA,GADA;AAEA;AACA,UAAA,KAAA,EAAA,KAAA,GAHA;AAIA,UAAA,iBAAA,EAAA,iBAJA;AAKA,UAAA,YAAA,EAAA,YALA;AAMA,UAAA,aAAA,EAAA;AANA,SADA;AASA,QAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CATA;AAUA,QAAA,gBAVA,4BAUA,CAVA,EAUA;AACA,cAAA,cAAA,IAAA,cAAA,KAAA,KAAA,EAAA;AACA,YAAA,cAAA,CAAA,YAAA;AACA;;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA;AACA,SAfA;AAgBA,QAAA,YAhBA,wBAgBA,CAhBA,EAgBA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,YAAA,EAAA,CAAA;AACA,SAlBA;AAmBA,QAAA,aAnBA,yBAmBA,CAnBA,EAmBA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,aAAA,EAAA,CAAA;AACA,SArBA;AAsBA,QAAA,cAtBA,0BAsBA,CAtBA,EAsBA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,cAAA,EAAA,CAAA;AACA,SAxBA;AAyBA,QAAA,gBAzBA,4BAyBA,CAzBA,EAyBA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA;AACA;AA3BA,OAAA,CAAA;AA6BA,MAAA,MAAA,CAAA,WAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,WAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA,YAAA,CAAA,SAAA;AAHA,OAAA,CAAA;AAKA;AArDA;AA7GA,CAAA","sourcesContent":["<template>\n<div v-show=\"panel\">\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport {createPoint} from '../base/factory.js'\nimport {isPoint, getPosition} from '../base/util.js'\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-driving',\n  mixins: [commonMixin('search')],\n  props: {\n    location: {\n      type: [Object, String]\n    },\n    start: {\n      type: [Object, String]\n    },\n    end: {\n      type: [Object, String]\n    },\n    startCity: {\n      type: [String, Number]\n    },\n    endCity: {\n      type: [String, Number]\n    },\n    waypoints: {\n      type: Array\n    },\n    policy: {\n      type: String\n    },\n    panel: {\n      type: Boolean,\n      default: true\n    },\n    autoViewport: {\n      type: Boolean\n    },\n    selectFirstResult: {\n      type: Boolean\n    }\n  },\n  watch: {\n    location: {\n      handler (val) {\n        const {originInstance, map} = this\n        originInstance.setLocation(val || map)\n      },\n      deep: true\n    },\n    start: {\n      handler (val) {\n        const {originInstance, end, startCity, endCity, waypoints, BMap, getWaypoints} = this\n        originInstance.search(getPosition(BMap, val), getPosition(BMap, end), {\n          startCity,\n          endCity,\n          waypoints: getWaypoints(waypoints)\n        })\n      },\n      deep: true\n    },\n    end: {\n      handler (val) {\n        const {originInstance, start, startCity, endCity, waypoints, BMap, getWaypoints} = this\n        originInstance.search(getPosition(BMap, start), getPosition(BMap, val), {\n          startCity,\n          endCity,\n          waypoints: getWaypoints(waypoints)\n        })\n      },\n      deep: true\n    },\n    startCity (val) {\n      const {originInstance, start, end, endCity, waypoints, getWaypoints} = this\n      originInstance.search(start, end, {\n        val,\n        endCity,\n        waypoints: getWaypoints(waypoints)\n      })\n    },\n    endCity (val) {\n      const {originInstance, start, end, startCity, waypoints, getWaypoints} = this\n      originInstance.search(start, end, {\n        startCity,\n        val,\n        waypoints: getWaypoints(waypoints)\n      })\n    },\n    waypoints: {\n      handler (val) {\n        const {originInstance, start, end, startCity, endCity, getWaypoints} = this\n        originInstance.search(start, end, {\n          startCity,\n          endCity,\n          waypoints: getWaypoints(val)\n        })\n      },\n      deep: true\n    },\n    panel () {\n      this.reload()\n    },\n    policy (val) {\n      this.reload()\n    },\n    autoViewport () {\n      this.reload()\n    },\n    selectFirstResult () {\n      this.reload()\n    },\n    highlightMode () {\n      this.reload()\n    }\n  },\n  methods: {\n    search (start, end, {startCity, endCity, waypoints}) {\n      const {originInstance, getWaypoints} = this\n      originInstance.search(start, end, {\n        startCity,\n        endCity,\n        waypoints: getWaypoints(waypoints)\n      })\n    },\n    getWaypoints (waypoints) {\n      const {BMap} = this\n      if (waypoints) {\n        return waypoints.map(position => getPosition(BMap, position))\n      }\n    },\n    load () {\n      const instance = this\n      const {map, BMap, location, policy, selectFirstResult, autoViewport, highlightMode, search, start, end, startCity, endCity, waypoints, originInstance, getWaypoints} = this\n      const _location = location ? isPoint(location) ? createPoint(BMap, location) : location : map\n      const route = this.originInstance = new BMap.DrivingRoute(_location, {\n        renderOptions: {\n          map,\n          // panel: panel && this.$el,\n          panel: this.$el,\n          selectFirstResult,\n          autoViewport,\n          highlightMode\n        },\n        policy: global[policy],\n        onSearchComplete (e) {\n          if (originInstance && originInstance !== route) {\n            originInstance.clearResults()\n          }\n          instance.$emit('searchcomplete', e)\n        },\n        onMarkersSet (e) {\n          instance.$emit('markersset', e)\n        },\n        onInfoHtmlSet (e) {\n          instance.$emit('infohtmlset', e)\n        },\n        onPolylinesSet (e) {\n          instance.$emit('polylinesset', e)\n        },\n        onResultsHtmlSet (e) {\n          instance.$emit('resultshtmlset', e)\n        }\n      })\n      search(getPosition(BMap, start), getPosition(BMap, end), {\n        startCity,\n        endCity,\n        waypoints: getWaypoints(waypoints)\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/search"}]}