{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\progress\\Show.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\progress\\Show.vue","mtime":1573723297458},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat2 from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _getIterator from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.function.name\";\nimport _parseInt from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GanttModal from './components/GanttModal';\nimport TaskModal from './components/TaskModal';\nimport api from '../../../api/implement';\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nimport echarts from 'echarts';\nvar columns = [{\n  title: '任务名称',\n  dataIndex: 'name',\n  width: '25%',\n  align: 'center'\n}, {\n  title: '计划开始日期',\n  dataIndex: 'dream_start_date',\n  width: '13%',\n  align: 'center'\n}, {\n  title: '计划截止日期',\n  dataIndex: 'dream_end_date',\n  width: '13%',\n  align: 'center'\n}, {\n  title: '实际开始日期',\n  dataIndex: 'real_start_date',\n  width: '13%',\n  align: 'center'\n}, {\n  title: '实际截止日期',\n  dataIndex: 'real_end_date',\n  width: '13%',\n  align: 'center'\n}, {\n  title: '状态',\n  dataIndex: 'state',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '编辑',\n  dataIndex: 'operation',\n  scopedSlots: {\n    customRender: 'operation'\n  },\n  align: 'center'\n}];\nexport default {\n  name: 'Show',\n  components: {\n    GanttModal: GanttModal,\n    TaskModal: TaskModal\n  },\n  props: {\n    id: Number\n  },\n  data: function data() {\n    return {\n      columns: columns,\n      chart: null,\n      tasks: {\n        data: [],\n        links: []\n      },\n      status: {\n        listLoading: true,\n        tableLoading: true\n      },\n      layout: {\n        'label-col': {\n          span: 6\n        },\n        'wrapper-col': {\n          span: 18\n        }\n      },\n      taskModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        chart_id: this.id\n      },\n      ganttModal: {\n        record: null,\n        visible: false,\n        type: '1'\n      },\n      matterList: [],\n      project_id: this.projectSelected().id\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n    this.chart = echarts.init(document.getElementById('myChart'));\n    this.drawLine();\n  },\n  methods: _objectSpread({}, mapGetters(['projectSelected']), {\n    getData: function getData() {\n      var _this = this;\n\n      api.getProgressList(this.project_id).then(function (data) {\n        _this.matterList = data;\n        console.log(2);\n        console.log(data);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(_this.matterList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            if (i.state == 1) i.state = \"关键\";else i.state = \"一般\";\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        console.log(2);\n        console.log(_this.matterList);\n        api.getInitialChart(_this.project_id).then(function (data) {\n          var sDate = data[0].start_date.split('-');\n          console.log(\"sDate1\");\n          console.log(sDate); //var color=['#000bbb','#000eee','bbbabd']\n\n          var colorList1 = [];\n          var TaskY = [];\n          var TaskX = null;\n          var fuzhu1 = [];\n          var fuzhu2 = [];\n          var end1 = [];\n          var end2 = [];\n          var sDate = data[0].start_date.split('-');\n          console.log(\"SDate\");\n          console.log(sDate);\n          var start = new Date(sDate[0], sDate[1], sDate[2]);\n          var oDate = data[0].end_date.split('-');\n          var oDate1 = new Date(oDate[0], oDate[1], oDate[2]);\n\n          var iDays = _parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24);\n\n          var interval = data[0].interval;\n          interval = _parseInt(interval);\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _getIterator(_this.matterList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var i = _step2.value;\n              TaskY.push(i.name);\n              if (i.state == \"一般\") colorList1.push('#32cd32');else colorList1.push('#ff0000');\n              if (i.real_start_date) var realStartDate = i.real_start_date.split('-');\n              var dreamStartDate = i.dream_start_date.split('-');\n              var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2]);\n              var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2]);\n              if (i.real_end_date) var realEndDate = i.real_end_date.split('-');\n              var dreamEndDate = i.dream_end_date.split('-');\n              var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2]);\n              var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2]);\n              fuzhu1.push(_parseInt(Math.abs(realStartDate1 - start) / 1000 / 60 / 60 / 24));\n              fuzhu2.push(_parseInt(Math.abs(dreamStartDate1 - start) / 1000 / 60 / 60 / 24));\n              if (i.real_end_date && i.real_start_date) end1.push(_parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24));else end1.push(0);\n              end2.push(_parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24));\n              console.log(\"fuzhu1\");\n              console.log(fuzhu1);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          TaskX = iDays;\n          var option = {\n            title: {\n              text: ''\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n              },\n              formatter: function formatter(params) {\n                var tar;\n\n                if (params[1].value != '-') {\n                  tar = params[1];\n                } else {\n                  tar = params[0];\n                }\n\n                return tar.name;\n              }\n            },\n            legend: {\n              data: ['计划', '实际']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            yAxis: {\n              type: 'category',\n              splitLine: {\n                show: true\n              },\n              data: TaskY\n            },\n            xAxis: {\n              type: 'value',\n              min: 0,\n              max: TaskX,\n              interval: interval,\n              position: bottom,\n              top: top,\n              axisTick: {\n                interval: interval,\n                show: true\n              },\n              splitLine: {\n                interval: interval,\n                show: true\n              },\n              splitArea: {\n                interval: interval,\n                show: true,\n                areaStyle: {\n                  color: ['rgba(250,250,250,0.3)']\n                }\n              }\n            },\n            series: [{\n              name: '辅助2',\n              type: 'bar',\n              stack: '计划',\n              itemStyle: {\n                normal: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                },\n                emphasis: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                }\n              },\n              data: fuzhu2\n            }, {\n              name: '辅助1',\n              type: 'bar',\n              stack: '实际',\n              itemStyle: {\n                normal: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                },\n                emphasis: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                }\n              },\n              data: fuzhu1\n            }, {\n              name: '计划',\n              stack: '计划',\n              type: 'bar',\n              itemStyle: {\n                normal: {\n                  color: '#ffd700'\n                },\n                emphasis: {\n                  color: '#ffd700'\n                }\n              },\n              label: {\n                normal: {\n                  show: true,\n                  position: 'bottom'\n                }\n              },\n              data: end2\n            }, {\n              name: '实际',\n              stack: '实际',\n              type: 'bar',\n              itemStyle: {\n                normal: {\n                  color: function color(params) {\n                    var colorList = colorList1;\n                    return colorList[params.dataIndex];\n                  }\n                },\n                emphasis: {\n                  color: ['#000bbb']\n                }\n              },\n              label: {\n                normal: {\n                  show: true,\n                  position: 'top'\n                }\n              },\n              data: end1\n            }]\n          };\n\n          _this.chart.setOption(option);\n\n          data[0].start_date = new moment(data[0].start_date);\n          data[0].end_date = new moment(data[0].end_date);\n          _this.ganttModal.record = data[0];\n\n          _this.change();\n\n          _this.status.listLoading = false;\n        });\n      });\n    },\n    drawLine: function drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      // var bar_dv = document.getElementById('bar_dv');\n      var barDv = this.$refs.chart;\n\n      if (barDv) {\n        console.log('bar_dv不为空'); // let myChart = this.$echarts.init(barDv)\n        // 基于准备好的dom，初始化echarts实例\n        // let myChart = this.$echarts.init(document.getElementById('myChart'))\n        // 绘制图表\n\n        var option = {\n          title: {\n            text: ''\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n            },\n            formatter: function formatter(params) {\n              var tar;\n\n              if (params[1].value != '-') {\n                tar = params[1];\n              } else {\n                tar = params[0];\n              }\n\n              return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\n            }\n          },\n          legend: {\n            data: ['计划', '实际']\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          yAxis: {\n            type: 'category',\n            splitLine: {\n              show: false\n            },\n            data: null\n          },\n          xAxis: {\n            type: 'value'\n          },\n          series: [{\n            name: '辅助2',\n            type: 'bar',\n            stack: '计划',\n            itemStyle: {\n              normal: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              },\n              emphasis: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              }\n            },\n            data: null\n          }, {\n            name: '辅助1',\n            type: 'bar',\n            stack: '实际',\n            itemStyle: {\n              normal: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              },\n              emphasis: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              }\n            },\n            data: null\n          }, {\n            name: '计划',\n            stack: '计划',\n            type: 'bar',\n            label: {\n              normal: {\n                show: true,\n                position: 'bottom'\n              }\n            },\n            data: null\n          }, {\n            name: '实际',\n            stack: '实际',\n            type: 'bar',\n            label: {\n              normal: {\n                show: true,\n                position: 'top'\n              }\n            },\n            data: null\n          }]\n        };\n        this.chart.setOption(option);\n      } else {\n        console.log('bar_dv为空!');\n      }\n    },\n    change: function change() {\n      console.log(\"1\");\n      var TaskY = [];\n      var TaskX = null;\n      var fuzhu1 = [];\n      var fuzhu2 = [];\n      var end1 = [];\n      var end2 = [];\n      var sDate = this.ganttModal.record.start_date.split('-');\n      console.log(\"SDate\");\n      console.log(sDate);\n      var start = new Date(sDate[0], sDate[1], sDate[2]);\n      var oDate = this.ganttModal.record.end_date.split('-');\n      var oDate1 = new Date(oDate[0], oDate[1], oDate[2]);\n\n      var iDays = _parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24);\n\n      var interval = this.ganttModal.record.interval;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getIterator(this.matterList), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var i = _step3.value;\n          TaskY.append(i.name);\n          var realStartDate = i.real_start_date.split('-');\n          var dreamStartDate = i.dream_start_date.split('-');\n          var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2]);\n          var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2]);\n          var realEndDate = i.real_end_date.split('-');\n          var dreamEndDate = i.dream_end_date.split('-');\n          var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2]);\n          var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2]);\n          fuzhu1.append(_parseInt(Math.abs(realEndDate1 - start) / 1000 / 60 / 60 / 24));\n          fuzhu2.append(_parseInt(Math.abs(dreamEndDate1 - start) / 1000 / 60 / 60 / 24));\n          end1.append(_parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24));\n          end2.append(_parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      TaskX = iDays;\n      var option = {\n        title: {\n          text: ''\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          },\n          formatter: function formatter(params) {\n            var tar;\n\n            if (params[1].value != '-') {\n              tar = params[1];\n            } else {\n              tar = params[0];\n            }\n\n            return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\n          }\n        },\n        legend: {\n          data: ['实际', '计划']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        yAxis: {\n          type: 'category',\n          splitLine: {\n            show: false\n          },\n          data: TaskY\n        },\n        xAxis: {\n          type: 'value',\n          data: function () {\n            var list = [];\n\n            for (var i = 0; i <= TaskX; i += interval) {\n              list.push(i);\n            }\n\n            return list;\n          }()\n        },\n        series: [{\n          name: '辅助1',\n          type: 'bar',\n          stack: '实际',\n          itemStyle: {\n            normal: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            },\n            emphasis: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            }\n          },\n          data: fuzhu1\n        }, {\n          name: '辅助2',\n          type: 'bar',\n          stack: '计划',\n          itemStyle: {\n            normal: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            },\n            emphasis: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            }\n          },\n          data: fuzhu2\n        }, {\n          name: '实际',\n          stack: '实际',\n          type: 'bar',\n          label: {\n            normal: {\n              show: true,\n              position: 'top'\n            }\n          },\n          data: end1\n        }, {\n          name: '计划',\n          stack: '计划',\n          type: 'bar',\n          label: {\n            normal: {\n              show: true,\n              position: 'bottom'\n            }\n          },\n          data: end2\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    handleTaskClose: function handleTaskClose() {\n      this.taskModal.type = '';\n      this.taskModal.record = null;\n      this.taskModal.visible = false;\n      this.getData();\n    },\n    handleTaskCreate: function handleTaskCreate() {\n      this.taskModal.type = 'create';\n      this.taskModal.record = null;\n      this.taskModal.visible = true;\n    },\n    handleTaskEdit: function handleTaskEdit(record) {\n      this.taskModal.type = 'edit';\n      this.taskModal.record = record;\n      this.taskModal.visible = true;\n    },\n    handleTaskDelete: function handleTaskDelete(record) {\n      var _this2 = this;\n\n      api.deleteTask(record.chart_id).then(function (data) {\n        _this2.$notification.success({\n          message: '成功',\n          description: '删除成功',\n          key: 'SUCCESS'\n        });\n      });\n    },\n    handleGanttEdit: function handleGanttEdit() {\n      this.getData();\n      this.ganttModal.type = 'edit';\n      this.ganttModal.visible = true;\n    },\n    handleGanttClose: function handleGanttClose() {\n      this.ganttModal.type = '';\n      this.ganttModal.record = null;\n      this.ganttModal.visible = false;\n      this.getData();\n    },\n    parseFloat: function (_parseFloat) {\n      function parseFloat(_x) {\n        return _parseFloat.apply(this, arguments);\n      }\n\n      parseFloat.toString = function () {\n        return _parseFloat.toString();\n      };\n\n      return parseFloat;\n    }(function (f) {\n      return _parseFloat2(f);\n    })\n  })\n};",{"version":3,"sources":["Show.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <gantt-modal\r\n      :record=\"ganttModal.record\"\r\n      :visible=\"ganttModal.visible\"\r\n      :type=\"ganttModal.type\"\r\n      v-if=\"ganttModal.visible\"\r\n      @close=\"handleGanttClose()\">\r\n    </gantt-modal>\r\n    <task-modal\r\n      :record=\"taskModal.record\"\r\n      :visible=\"taskModal.visible\"\r\n      :type=\"taskModal.type\"\r\n      :chart_id=\"taskModal.chart_id\"\r\n      v-if=\"taskModal.visible\"\r\n      @close=\"handleTaskClose()\">\r\n    </task-modal>\r\n    <a-card title=\"施工进度图\"\r\n            style=\"margin-bottom: 16px\">\r\n      <div id=\"myChart\" ref=\"chart\" style=\"width: 900px; height:400px\"></div>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <div>\r\n        <a-button\r\n          type=\"primary\"\r\n          style=\"margin-left: 4px;margin-bottom:16px;\"\r\n          @click=\"handleGanttEdit()\">\r\n          编辑\r\n        </a-button>\r\n        <a-button\r\n          type=\"primary\"\r\n          icon=\"plus\"\r\n          style=\"margin-bottom:16px;float: right\"\r\n          @click=\"handleTaskCreate()\">\r\n          新建\r\n        </a-button>\r\n      </div>\r\n      <a-table\r\n        bordered\r\n        :columns=\"columns\"\r\n        :dataSource=\"matterList\"\r\n        rowKey=\"building_id\"\r\n        :pagination=\"false\">\r\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n          <a-button @click=\"handleTaskEdit(record)\">编辑</a-button>\r\n          <a-popconfirm\r\n            title=\"确认删除吗?\"\r\n            @confirm=\"handleTaskDelete(record)\">\r\n            <a-button type=\"danger\">删除</a-button>\r\n          </a-popconfirm>\r\n        </template>\r\n      </a-table>\r\n\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import GanttModal from './components/GanttModal'\r\n  import TaskModal from './components/TaskModal'\r\n  import api from '../../../api/implement'\r\n  import {mapGetters} from 'vuex'\r\n  import moment from 'moment'\r\n  import echarts from 'echarts'\r\n\r\n  const columns = [\r\n    {\r\n      title: '任务名称',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '计划开始日期',\r\n      dataIndex: 'dream_start_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '计划截止日期',\r\n      dataIndex: 'dream_end_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '实际开始日期',\r\n      dataIndex: 'real_start_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '实际截止日期',\r\n      dataIndex: 'real_end_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'state',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  export default {\r\n    name: 'Show',\r\n    components: {\r\n      GanttModal,\r\n      TaskModal\r\n    },\r\n    props: {\r\n      id: Number\r\n    },\r\n    data() {\r\n      return {\r\n        columns,\r\n        chart: null,\r\n        tasks: {\r\n          data: [],\r\n          links: []\r\n        },\r\n        status: {\r\n          listLoading: true,\r\n          tableLoading: true\r\n        },\r\n        layout: {\r\n          'label-col': {span: 6},\r\n          'wrapper-col': {span: 18}\r\n        },\r\n        taskModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          chart_id: this.id\r\n        },\r\n        ganttModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n        },\r\n        matterList: [],\r\n        project_id: this.projectSelected().id\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getData()\r\n      this.chart = echarts.init(document.getElementById('myChart'))\r\n      this.drawLine()\r\n    },\r\n    methods: {\r\n      ...mapGetters(['projectSelected']),\r\n      getData() {\r\n        api.getProgressList(this.project_id)\r\n          .then(data => {\r\n            this.matterList = data\r\n            console.log(2)\r\n            console.log(data)\r\n            for (var i of this.matterList) {\r\n              if (i.state == 1)\r\n                i.state = \"关键\"\r\n              else\r\n                i.state = \"一般\"\r\n            }\r\n            console.log(2)\r\n            console.log(this.matterList)\r\n            api.getInitialChart(this.project_id)\r\n              .then(data => {\r\n                var sDate = data[0].start_date.split('-')\r\n                console.log(\"sDate1\")\r\n                console.log(sDate)\r\n                //var color=['#000bbb','#000eee','bbbabd']\r\n                var colorList1=[]\r\n                var TaskY = []\r\n                var TaskX = null\r\n                var fuzhu1 = []\r\n                var fuzhu2 = []\r\n                var end1 = []\r\n                var end2 = []\r\n                var sDate = data[0].start_date.split('-')\r\n                console.log(\"SDate\")\r\n                console.log(sDate)\r\n                var start = new Date(sDate[0], sDate[1], sDate[2])\r\n                var oDate = data[0].end_date.split('-')\r\n                var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n                var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n                var interval = data[0].interval\r\n                interval=parseInt(interval)\r\n                for (var i of this.matterList) {\r\n                  TaskY.push(i.name)\r\n                  if(i.state==\"一般\")\r\n                    colorList1.push('#32cd32')\r\n                  else\r\n                    colorList1.push('#ff0000')\r\n                  if(i.real_start_date)\r\n                    var realStartDate = i.real_start_date.split('-')\r\n                  var dreamStartDate = i.dream_start_date.split('-')\r\n                  var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\r\n                  var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\r\n\r\n                  if(i.real_end_date)\r\n                    var realEndDate = i.real_end_date.split('-')\r\n                  var dreamEndDate = i.dream_end_date.split('-')\r\n                  var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\r\n                  var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\r\n                  fuzhu1.push(parseInt(Math.abs(realStartDate1 - start) / 1000 / 60 / 60 / 24))\r\n                  fuzhu2.push(parseInt(Math.abs(dreamStartDate1 - start) / 1000 / 60 / 60 / 24))\r\n                  if(i.real_end_date&&i.real_start_date)\r\n                    end1.push(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\r\n                  else\r\n                    end1.push(0)\r\n                  end2.push(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\r\n                  console.log(\"fuzhu1\")\r\n                  console.log(fuzhu1)\r\n                }\r\n\r\n                TaskX = iDays\r\n\r\n                var option = {\r\n                  title: {\r\n                    text: '',\r\n                  },\r\n                  tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                      type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                    },\r\n                    formatter: function (params) {\r\n                      var tar;\r\n                      if (params[1].value != '-') {\r\n                        tar = params[1];\r\n                      } else {\r\n                        tar = params[0];\r\n                      }\r\n                      return tar.name;\r\n                    }\r\n                  },\r\n                  legend: {\r\n                    data: ['计划','实际']\r\n                  },\r\n                  grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                  },\r\n\r\n                  yAxis: {\r\n                    type: 'category',\r\n                    splitLine: {show: true},\r\n                    data: TaskY\r\n                  },\r\n                  xAxis: {\r\n                    type: 'value',\r\n                    min:0,\r\n                    max:TaskX,\r\n                    interval:interval,\r\n                    position:bottom,top,\r\n                    axisTick:{\r\n                      interval:interval,\r\n                      show:true\r\n                    },\r\n                    splitLine:{\r\n                      interval:interval,\r\n                      show:true\r\n                    },\r\n                    splitArea:{\r\n                      interval:interval,\r\n                      show:true,\r\n                      areaStyle:{\r\n                        color:['rgba(250,250,250,0.3)']\r\n                      }\r\n                    }\r\n                  },\r\n                  series: [\r\n                    {\r\n                      name: '辅助2',\r\n                      type: 'bar',\r\n                      stack: '计划',\r\n                      itemStyle: {\r\n                        normal: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        },\r\n                        emphasis: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        }\r\n                      },\r\n                      data: fuzhu2\r\n                    },\r\n                    {\r\n                      name: '辅助1',\r\n                      type: 'bar',\r\n                      stack: '实际',\r\n                      itemStyle: {\r\n                        normal: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        },\r\n                        emphasis: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        }\r\n                      },\r\n                      data: fuzhu1\r\n                    },\r\n                    {\r\n                      name: '计划',\r\n                      stack: '计划',\r\n                      type: 'bar',\r\n                      itemStyle: {\r\n                        normal: {\r\n                         color:'#ffd700'\r\n                        },\r\n                        emphasis: {\r\n                           color:'#ffd700'\r\n                        }\r\n                      },\r\n                      label: {\r\n                        normal: {\r\n                          show: true,\r\n                          position: 'bottom'\r\n                        }\r\n                      },\r\n                      data: end2\r\n                    },\r\n                    {\r\n                      name: '实际',\r\n                      stack: '实际',\r\n                      type: 'bar',\r\n                      itemStyle: {\r\n                        normal: {\r\n                         color:function (params) {\r\n                           let colorList=colorList1\r\n                           return colorList[params.dataIndex]\r\n                         }\r\n                        },\r\n                        emphasis: {\r\n                           color: ['#000bbb']\r\n                        }\r\n                      },\r\n                      label: {\r\n                        normal: {\r\n                          show: true,\r\n                          position: 'top'\r\n                        }\r\n                      },\r\n                      data: end1\r\n                    }\r\n                  ]\r\n                }\r\n                this.chart.setOption(option)\r\n\r\n                data[0].start_date = new moment(data[0].start_date)\r\n                data[0].end_date = new moment(data[0].end_date)\r\n                this.ganttModal.record = data[0]\r\n                this.change()\r\n                this.status.listLoading = false\r\n              })\r\n          })\r\n      },\r\n      drawLine() {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        // var bar_dv = document.getElementById('bar_dv');\r\n        var barDv = this.$refs.chart;\r\n        if (barDv) {\r\n          console.log('bar_dv不为空');\r\n          // let myChart = this.$echarts.init(barDv)\r\n          // 基于准备好的dom，初始化echarts实例\r\n          // let myChart = this.$echarts.init(document.getElementById('myChart'))\r\n          // 绘制图表\r\n          var option = {\r\n            title: {\r\n              text: '',\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n              },\r\n              formatter: function (params) {\r\n                var tar;\r\n                if (params[1].value != '-') {\r\n                  tar = params[1];\r\n                } else {\r\n                  tar = params[0];\r\n                }\r\n                return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\r\n              }\r\n            },\r\n            legend: {\r\n              data: ['计划','实际']\r\n            },\r\n            grid: {\r\n              left: '3%',\r\n              right: '4%',\r\n              bottom: '3%',\r\n              containLabel: true\r\n            },\r\n\r\n            yAxis: {\r\n              type: 'category',\r\n              splitLine: {show: false},\r\n              data:null\r\n            },\r\n            xAxis: {\r\n              type: 'value'\r\n            },\r\n            series: [\r\n              {\r\n                name: '辅助2',\r\n                type: 'bar',\r\n                stack: '计划',\r\n                itemStyle: {\r\n                  normal: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  },\r\n                  emphasis: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '辅助1',\r\n                type: 'bar',\r\n                stack: '实际',\r\n                itemStyle: {\r\n                  normal: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  },\r\n                  emphasis: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '计划',\r\n                stack: '计划',\r\n                type: 'bar',\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    position: 'bottom'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '实际',\r\n                stack: '实际',\r\n                type: 'bar',\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    position: 'top'\r\n                  }\r\n                },\r\n                data: null\r\n              }\r\n            ]\r\n          };\r\n          this.chart.setOption(option);\r\n        } else {\r\n          console.log('bar_dv为空!');\r\n        }\r\n      },\r\n      change() {\r\n        console.log(\"1\")\r\n        var TaskY = []\r\n        var TaskX = null\r\n        var fuzhu1 = []\r\n        var fuzhu2 = []\r\n        var end1 = []\r\n        var end2 = []\r\n        var sDate = this.ganttModal.record.start_date.split('-')\r\n        console.log(\"SDate\")\r\n        console.log(sDate)\r\n        var start = new Date(sDate[0], sDate[1], sDate[2])\r\n        var oDate = this.ganttModal.record.end_date.split('-')\r\n        var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n        var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n        var interval = this.ganttModal.record.interval\r\n        for (var i of this.matterList) {\r\n          TaskY.append(i.name)\r\n          var realStartDate = i.real_start_date.split('-')\r\n          var dreamStartDate = i.dream_start_date.split('-')\r\n          var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\r\n          var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\r\n\r\n          var realEndDate = i.real_end_date.split('-')\r\n          var dreamEndDate = i.dream_end_date.split('-')\r\n          var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\r\n          var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\r\n          fuzhu1.append(parseInt(Math.abs(realEndDate1 - start) / 1000 / 60 / 60 / 24))\r\n          fuzhu2.append(parseInt(Math.abs(dreamEndDate1 - start) / 1000 / 60 / 60 / 24))\r\n          end1.append(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\r\n          end2.append(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\r\n\r\n        }\r\n\r\n        TaskX = iDays\r\n\r\n        var option = {\r\n          title: {\r\n            text: '',\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n            },\r\n            formatter: function (params) {\r\n              var tar;\r\n              if (params[1].value != '-') {\r\n                tar = params[1];\r\n              } else {\r\n                tar = params[0];\r\n              }\r\n              return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['实际', '计划']\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n\r\n          yAxis: {\r\n            type: 'category',\r\n            splitLine: {show: false},\r\n            data: TaskY\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            data: function () {\r\n              var list = [];\r\n              for (var i = 0; i <= TaskX; i += interval) {\r\n                list.push(i);\r\n              }\r\n              return list;\r\n            }()\r\n          },\r\n          series: [\r\n            {\r\n              name: '辅助1',\r\n              type: 'bar',\r\n              stack: '实际',\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                },\r\n                emphasis: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                }\r\n              },\r\n              data: fuzhu1\r\n            },\r\n            {\r\n              name: '辅助2',\r\n              type: 'bar',\r\n              stack: '计划',\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                },\r\n                emphasis: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                }\r\n              },\r\n              data: fuzhu2\r\n            },\r\n            {\r\n              name: '实际',\r\n              stack: '实际',\r\n              type: 'bar',\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'top'\r\n                }\r\n              },\r\n              data: end1\r\n            },\r\n            {\r\n              name: '计划',\r\n              stack: '计划',\r\n              type: 'bar',\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'bottom'\r\n                }\r\n              },\r\n              data: end2\r\n            }\r\n          ]\r\n        };\r\n        this.chart.setOption(option);\r\n      },\r\n      handleTaskClose() {\r\n        this.taskModal.type = ''\r\n        this.taskModal.record = null\r\n        this.taskModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleTaskCreate() {\r\n        this.taskModal.type = 'create'\r\n        this.taskModal.record = null\r\n        this.taskModal.visible = true\r\n      },\r\n      handleTaskEdit(record) {\r\n        this.taskModal.type = 'edit'\r\n        this.taskModal.record = record\r\n        this.taskModal.visible = true\r\n      },\r\n      handleTaskDelete(record) {\r\n        api.deleteTask(record.chart_id)\r\n          .then(data => {\r\n            this.$notification.success({message: '成功', description: '删除成功', key: 'SUCCESS'})\r\n          })\r\n      },\r\n      handleGanttEdit() {\r\n        this.getData()\r\n        this.ganttModal.type = 'edit'\r\n        this.ganttModal.visible = true\r\n      },\r\n      handleGanttClose() {\r\n        this.ganttModal.type = ''\r\n        this.ganttModal.record = null\r\n        this.ganttModal.visible = false\r\n        this.getData()\r\n      },\r\n      parseFloat(f) {\r\n        return parseFloat(f)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .item {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .wrapper {\r\n    width: 7rem;\r\n    height: 5rem;\r\n  }\r\n\r\n  .gantt_cal_light_wide.gantt_cal_light_full {\r\n    width: 550px;\r\n  }\r\n</style>"],"sourceRoot":"src/views/implement/progress"}]}