{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\invest\\invest_tree\\invest_new_tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\invest\\invest_tree\\invest_new_tree.vue","mtime":1572919019965},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport _parseFloat from \"E:\\\\\\u9879\\u76EE\\\\FoodProductManageSystem\\\\Frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport api from '../../../../api/implement';\nimport dapi from '../../../../api/decision';\nimport TreePlanModal from './components/TreePlanModal';\nvar a = 'A';\nvar columns = [{\n  title: '建设项目总投资',\n  dataIndex: 'total_investment_of_construction_project',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '工程造价',\n  dataIndex: 'project_cost',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '增值税',\n  dataIndex: 'value_added_tax',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '资金筹措费',\n  dataIndex: 'fund_preparation_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '流动资金',\n  dataIndex: 'fluid_capital',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '工程费用',\n  dataIndex: 'project_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '工程建设其他费用',\n  dataIndex: 'project_construction_other_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '预备费',\n  dataIndex: 'prepare_fee',\n  width: '15%',\n  align: 'center'\n}, {\n  title: '建筑工程费',\n  dataIndex: 'construction_work_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '安装工程费',\n  dataIndex: 'installation_work_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '设备预置费',\n  dataIndex: 'device_preset_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '土地使用费和其他补偿费',\n  dataIndex: 'land_use_fee',\n  width: '12%',\n  align: 'center'\n}, {\n  title: '建设管理费',\n  dataIndex: 'construction_management_fee',\n  width: '15%',\n  align: 'center'\n}, {\n  title: '可行性研究费',\n  dataIndex: 'feasibility_study_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '专项评价费',\n  dataIndex: 'special_evaluation_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '研究试验费',\n  dataIndex: 'research_experiment_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '勘察设计费',\n  dataIndex: 'reconnaissance_design_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '场地准备费和临时设施费',\n  dataIndex: 'site_preparation_fee',\n  width: '12%',\n  align: 'center'\n}, {\n  title: '引进技术和进口设备材料其他费',\n  dataIndex: 'imported_technology_fee',\n  width: '15%',\n  align: 'center'\n}, {\n  title: '特殊设备安全监督检验费',\n  dataIndex: 'special_equipment_fee',\n  width: '12%',\n  align: 'center'\n}, {\n  title: '市政公用配套设施费',\n  dataIndex: 'municipal_administration_fee',\n  width: '12%',\n  align: 'center'\n}, {\n  title: '联合试运转费',\n  dataIndex: 'joint_commissioning_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '工程保险费',\n  dataIndex: 'engineer_insurance_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '专利及专有技术使用费',\n  dataIndex: 'patent_fee',\n  width: '15%',\n  align: 'center'\n}, {\n  title: '生产准备费',\n  dataIndex: 'production_preparation_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '监理费',\n  dataIndex: 'supervisor_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '造价咨询',\n  dataIndex: 'cost_consultation_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '招标代理',\n  dataIndex: 'bid_agency_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '其他',\n  dataIndex: 'other_fee',\n  width: '8%',\n  align: 'center'\n}, {\n  title: '编辑',\n  dataIndex: 'operation',\n  scopedSlots: {\n    customRender: 'operation'\n  },\n  align: 'center'\n}];\nexport default {\n  name: 'invest_new_tree',\n  components: {\n    TreePlanModal: TreePlanModal\n  },\n  props: {\n    className: {\n      type: String,\n      default: 'yourClassName'\n    },\n    id: Number,\n    estimate: String,\n    actual: String\n  },\n  data: function data() {\n    return {\n      columns: columns,\n      project_id: this.id,\n      card: {\n        construction_work_fee: null,\n        installation_work_fee: null,\n        device_preset_fee: null,\n        land_use_fee: null,\n        construction_management_fee: null,\n        feasibility_study_fee: null,\n        special_evaluation_fee: null,\n        research_experiment_fee: null,\n        reconnaissance_design_fee: null,\n        site_preparation_fee: null,\n        imported_technology_fee: null,\n        special_equipment_fee: null,\n        municipal_administration_fee: null,\n        joint_commissioning_fee: null,\n        engineer_insurance_fee: null,\n        patent_fee: null,\n        production_preparation_fee: null,\n        supervisor_fee: null,\n        cost_consultation_fee: null,\n        bid_agency_fee: null,\n        other_fee: null,\n        prepare_fee: null,\n        value_added_tax: null,\n        fund_preparation_fee: null,\n        fluid_capital: null,\n        project_construction_other_fee: null,\n        project_fee: null,\n        project_cost: null,\n        total_investment_of_construction_project: null\n      },\n      bid_card: {\n        save_rate: null,\n        bid_price: null,\n        control_price: null,\n        agency_fee: null\n      },\n      planModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        tree_view_id: this.id\n      },\n      treeList: [],\n      applicationList: [],\n      decisionList: [],\n      designCompanyList: [],\n      process: {},\n      trees: {\n        all_paid_total: null,\n        consult_service_paid_total: null,\n        construction_paid_total: null,\n        other_paid_total: null,\n        bid_paid_total: null,\n        design_paid_total: null,\n        consultation_paid_total: null,\n        supervisor_paid_total: null,\n        general_contract_paid_total: null,\n        subcontract_paid_total: null\n      },\n      form: this.$form.createForm(this),\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n    this.chart = echarts.init(this.$refs.myEchart);\n    this.chart.showLoading();\n    this.chart.hideLoading();\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      api.getTreeList(this.$store.getters.projectSelected.id).then(function (data) {\n        console.log(data);\n        _this.treeList = data;\n\n        _this.initChart();\n      });\n      api.getTrees(this.id).then(function (data) {\n        //console.log(data)\n        _this.trees = data;\n      });\n      api.getTreeSum(this.$store.getters.projectSelected.id).then(function (data) {\n        _this.card = data;\n\n        _this.initChart();\n      });\n      api.getApplicationList(this.$store.getters.projectSelected.id).then(function (data) {\n        //console.log(data)\n        _this.applicationList = data;\n\n        _this.initChart();\n      });\n      dapi.getDecisionList(this.$store.getters.projectSelected.id).then(function (data) {\n        _this.decisionList = data.sort(function (x, y) {\n          return x.decision_id > y.decision_id;\n        });\n\n        _this.initChart();\n      });\n      api.getBidSum(this.$store.getters.projectSelected.id).then(function (data) {\n        _this.bid_card = data;\n\n        _this.initChart();\n      });\n      api.getDesignCompanyList(this.project_id).then(function (data) {\n        _this.designCompanyList = data;\n\n        _this.initChart();\n      });\n    },\n    getAllPaidTotal: function getAllPaidTotal(record, total) {\n      var all_paid_total = _parseFloat(record.all_paid_total);\n\n      var actual = _parseFloat(total.actual);\n\n      return \"\".concat((all_paid_total + actual).toFixed(2));\n    },\n    handlePlanEdit: function handlePlanEdit(record) {\n      this.planModal.type = 'edit';\n      this.planModal.record = record;\n      this.planModal.visible = true;\n      console.log(this.planModal.record);\n    },\n    handleCloseTable: function handleCloseTable() {\n      this.planModal.type = '';\n      this.planModal.record = null;\n      this.planModal.visible = false;\n      this.getData();\n    },\n    initChart: function initChart() {\n      // 把配置和数据放这里\n      var app = {};\n      var option = null; //${(parseFloat(this.card.project_construction_other_fee) + parseFloat(this.decisionTotal.actual)).toFixed(2)}\n\n      var data = {\n        'name': \"\\u603B\\u6295\\u8D44\\uFF1A\".concat((_parseFloat(this.card.total_investment_of_construction_project) + _parseFloat(this.decisionTotal.actual) + _parseFloat(this.applicationTotal.actual) + _parseFloat(this.bid_card.agency_fee) + _parseFloat(this.designTotal.paid_total)).toFixed(2), \"\\u5143\\uFF1B\\u603B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.total_investment_of_construction_project, \"\\u5143\"),\n        'children': [{\n          'name': \"\\u5DE5\\u7A0B\\u9020\\u4EF7\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat((_parseFloat(this.card.project_cost) + _parseFloat(this.decisionTotal.actual) + _parseFloat(this.applicationTotal.actual) + _parseFloat(this.bid_card.agency_fee) + _parseFloat(this.designTotal.paid_total)).toFixed(2), \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.project_cost, \"\\u5143\"),\n          'children': [{\n            'name': \"\\u5DE5\\u7A0B\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.project_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.project_fee, \"\\u5143\"),\n            'children': [{\n              'name': \"\\u5EFA\\u7B51\\u5DE5\\u7A0B\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.construction_work_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.construction_work_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5B89\\u88C5\\u5DE5\\u7A0B\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.installation_work_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.installation_work_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u8BBE\\u7F6E\\u9884\\u5907\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.device_preset_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.device_preset_fee, \"\\u5143\")\n            }]\n          }, {\n            'name': \"\\u5DE5\\u7A0B\\u5EFA\\u8BBE\\u5176\\u4ED6\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat((_parseFloat(this.card.project_construction_other_fee) + _parseFloat(this.decisionTotal.actual) + _parseFloat(this.applicationTotal.actual) + _parseFloat(this.bid_card.agency_fee) + _parseFloat(this.designTotal.paid_total)).toFixed(2), \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.project_construction_other_fee, \"\\u5143\"),\n            'children': [{\n              'name': \"\\u571F\\u5730\\u4F7F\\u7528\\u8D39\\u548C\\u5176\\u4ED6\\u8865\\u507F\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.land_use_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.land_use_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5EFA\\u8BBE\\u7BA1\\u7406\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.construction_management_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.construction_management_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u53EF\\u884C\\u6027\\u7814\\u7A76\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.decisionTotal.actual, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.feasibility_study_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u4E13\\u9879\\u8BC4\\u4EF7\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.special_evaluation_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.special_evaluation_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u7814\\u7A76\\u8BD5\\u9A8C\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.research_experiment_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.research_experiment_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u52D8\\u5BDF\\u8BBE\\u8BA1\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.designTotal.paid_total, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.reconnaissance_design_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u573A\\u5730\\u51C6\\u5907\\u8D39\\u548C\\u4E34\\u65F6\\u8BBE\\u65BD\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.site_preparation_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.site_preparation_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5F15\\u8FDB\\u6280\\u672F\\u548C\\u8FDB\\u53E3\\u8BBE\\u5907\\u6750\\u6599\\u5176\\u4ED6\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.imported_technology_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.imported_technology_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u7279\\u6B8A\\u8BBE\\u5907\\u5B89\\u5168\\u76D1\\u7763\\u68C0\\u9A8C\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.special_equipment_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.special_equipment_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5E02\\u653F\\u516C\\u7528\\u914D\\u5957\\u8BBE\\u65BD\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.applicationTotal.actual, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.municipal_administration_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u8054\\u5408\\u8BD5\\u8FD0\\u8F6C\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.joint_commissioning_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.joint_commissioning_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5DE5\\u7A0B\\u4FDD\\u9669\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.engineer_insurance_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.engineer_insurance_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u4E13\\u5229\\u53CA\\u4E13\\u6709\\u6280\\u672F\\u4F7F\\u7528\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.patent_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.patent_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u751F\\u4EA7\\u51C6\\u5907\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.production_preparation_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.production_preparation_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u76D1\\u7406\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.supervisor_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.supervisor_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u9020\\u4EF7\\u54A8\\u8BE2\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.cost_consultation_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.cost_consultation_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u62DB\\u6807\\u4EE3\\u7406\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.bid_card.agency_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.bid_agency_fee, \"\\u5143\")\n            }, {\n              'name': \"\\u5176\\u4ED6\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.other_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.other_fee, \"\\u5143\")\n            }]\n          }, {\n            'name': \"\\u9884\\u5907\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.prepare_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.prepare_fee, \"\\u5143\")\n          }]\n        }, {\n          'name': \"\\u589E\\u503C\\u7A0E\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.value_added_tax, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.value_added_tax, \"\\u5143\")\n        }, {\n          'name': \"\\u8D44\\u91D1\\u7B79\\u63AA\\u8D39\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.fund_preparation_fee, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.fund_preparation_fee, \"\\u5143\")\n        }, {\n          'name': \"\\u6D41\\u52A8\\u8D44\\u91D1\\uFF1A\\u5B9E\\u9645\\uFF1A\".concat(this.card.fluid_capital, \"\\u5143\\uFF1B\\u8BA1\\u5212\\uFF1A\").concat(this.plan.fluid_capital, \"\\u5143\")\n        }]\n      };\n      echarts.util.each(data.children, function (datum, index) {\n        index % 2 === 0 && (datum.collapsed = true);\n      });\n      this.chart.setOption({\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove'\n        },\n        series: [{\n          type: 'tree',\n          data: [data],\n          top: '1%',\n          left: '10%',\n          bottom: '1%',\n          right: '25%',\n          symbolSize: 10,\n          label: {\n            normal: {\n              position: 'bottom',\n              verticalAlign: 'middle',\n              align: 'middle',\n              fontSize: 10\n            }\n          },\n          leaves: {\n            label: {\n              normal: {\n                position: 'bottom',\n                verticalAlign: 'middle',\n                align: 'left'\n              }\n            }\n          },\n          expandAndCollapse: true,\n          animationDuration: 550,\n          animationDurationUpdate: 750\n        }]\n      });\n\n      if (option && _typeof(option) === 'object') {\n        this.chart.setOption(option, true);\n      }\n    }\n  },\n  computed: {\n    applicationTotal: function applicationTotal() {\n      var ret = {\n        estimate: '0',\n        actual: '0'\n      };\n\n      if (this.applicationList.length > 0) {\n        ret = {\n          estimate: this.applicationList.map(function (item) {\n            return _parseFloat(item.estimate);\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          actual: this.applicationList.map(function (item) {\n            var actual = item.actual;\n\n            if (actual) {\n              return _parseFloat(actual);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2)\n        };\n      }\n\n      return ret;\n    },\n    decisionTotal: function decisionTotal() {\n      var ret = {\n        estimate: '0',\n        actual: '0'\n      };\n\n      if (this.decisionList.length > 0) {\n        ret = {\n          estimate: this.decisionList.map(function (item) {\n            return _parseFloat(item.estimate);\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          actual: this.decisionList.map(function (item) {\n            var actual = item.actual;\n\n            if (actual) {\n              return _parseFloat(actual);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2)\n        };\n      }\n\n      return ret;\n    },\n    designTotal: function designTotal() {\n      var ret = {\n        paid_total: '0'\n      };\n\n      if (this.designCompanyList.length > 0) {\n        ret = {\n          paid_total: this.designCompanyList.map(function (item) {\n            return _parseFloat(item.paid_total);\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2)\n        };\n      }\n\n      return ret;\n    },\n    plan: function plan() {\n      var cmp = {\n        construction_work_fee: '0',\n        installation_work_fee: '0',\n        device_preset_fee: '0',\n        land_use_fee: '0',\n        construction_management_fee: '0',\n        feasibility_study_fee: '0',\n        special_evaluation_fee: '0',\n        research_experiment_fee: '0',\n        reconnaissance_design_fee: '0',\n        site_preparation_fee: '0',\n        imported_technology_fee: '0',\n        special_equipment_fee: '0',\n        municipal_administration_fee: '0',\n        joint_commissioning_fee: '0',\n        engineer_insurance_fee: '0',\n        patent_fee: '0',\n        production_preparation_fee: '0',\n        supervisor_fee: '0',\n        cost_consultation_fee: '0',\n        bid_agency_fee: '0',\n        other_fee: '0',\n        prepare_fee: '0',\n        value_added_tax: '0',\n        fund_preparation_fee: '0',\n        fluid_capital: '0',\n        project_construction_other_fee: '0',\n        project_fee: '0',\n        project_cost: '0',\n        total_investment_of_construction_project: '0'\n      };\n\n      if (this.treeList.length > 0) {\n        cmp = {\n          construction_work_fee: this.treeList.map(function (item) {\n            var construction_work_fee = item.construction_work_fee;\n\n            if (construction_work_fee) {\n              return _parseFloat(construction_work_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          installation_work_fee: this.treeList.map(function (item) {\n            var installation_work_fee = item.installation_work_fee;\n\n            if (installation_work_fee) {\n              return _parseFloat(installation_work_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          device_preset_fee: this.treeList.map(function (item) {\n            var device_preset_fee = item.device_preset_fee;\n\n            if (device_preset_fee) {\n              return _parseFloat(device_preset_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          land_use_fee: this.treeList.map(function (item) {\n            var land_use_fee = item.land_use_fee;\n\n            if (land_use_fee) {\n              return _parseFloat(land_use_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          construction_management_fee: this.treeList.map(function (item) {\n            var construction_management_fee = item.construction_management_fee;\n\n            if (construction_management_fee) {\n              return _parseFloat(construction_management_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          feasibility_study_fee: this.treeList.map(function (item) {\n            var feasibility_study_fee = item.feasibility_study_fee;\n\n            if (feasibility_study_fee) {\n              return _parseFloat(feasibility_study_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          special_evaluation_fee: this.treeList.map(function (item) {\n            var special_evaluation_fee = item.special_evaluation_fee;\n\n            if (special_evaluation_fee) {\n              return _parseFloat(special_evaluation_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          research_experiment_fee: this.treeList.map(function (item) {\n            var research_experiment_fee = item.research_experiment_fee;\n\n            if (research_experiment_fee) {\n              return _parseFloat(research_experiment_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          reconnaissance_design_fee: this.treeList.map(function (item) {\n            var reconnaissance_design_fee = item.reconnaissance_design_fee;\n\n            if (reconnaissance_design_fee) {\n              return _parseFloat(reconnaissance_design_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          site_preparation_fee: this.treeList.map(function (item) {\n            var site_preparation_fee = item.site_preparation_fee;\n\n            if (site_preparation_fee) {\n              return _parseFloat(site_preparation_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          imported_technology_fee: this.treeList.map(function (item) {\n            var imported_technology_fee = item.imported_technology_fee;\n\n            if (imported_technology_fee) {\n              return _parseFloat(imported_technology_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          special_equipment_fee: this.treeList.map(function (item) {\n            var special_equipment_fee = item.special_equipment_fee;\n\n            if (special_equipment_fee) {\n              return _parseFloat(special_equipment_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          municipal_administration_fee: this.treeList.map(function (item) {\n            var municipal_administration_fee = item.municipal_administration_fee;\n\n            if (municipal_administration_fee) {\n              return _parseFloat(municipal_administration_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          joint_commissioning_fee: this.treeList.map(function (item) {\n            var joint_commissioning_fee = item.joint_commissioning_fee;\n\n            if (joint_commissioning_fee) {\n              return _parseFloat(joint_commissioning_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          engineer_insurance_fee: this.treeList.map(function (item) {\n            var engineer_insurance_fee = item.engineer_insurance_fee;\n\n            if (engineer_insurance_fee) {\n              return _parseFloat(engineer_insurance_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          patent_fee: this.treeList.map(function (item) {\n            var patent_fee = item.patent_fee;\n\n            if (patent_fee) {\n              return _parseFloat(patent_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          production_preparation_fee: this.treeList.map(function (item) {\n            var production_preparation_fee = item.production_preparation_fee;\n\n            if (production_preparation_fee) {\n              return _parseFloat(production_preparation_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          supervisor_fee: this.treeList.map(function (item) {\n            var supervisor_fee = item.supervisor_fee;\n\n            if (supervisor_fee) {\n              return _parseFloat(supervisor_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          cost_consultation_fee: this.treeList.map(function (item) {\n            var cost_consultation_fee = item.cost_consultation_fee;\n\n            if (cost_consultation_fee) {\n              return _parseFloat(cost_consultation_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          bid_agency_fee: this.treeList.map(function (item) {\n            var bid_agency_fee = item.bid_agency_fee;\n\n            if (bid_agency_fee) {\n              return _parseFloat(bid_agency_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          other_fee: this.treeList.map(function (item) {\n            var other_fee = item.other_fee;\n\n            if (other_fee) {\n              return _parseFloat(other_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          prepare_fee: this.treeList.map(function (item) {\n            var prepare_fee = item.prepare_fee;\n\n            if (prepare_fee) {\n              return _parseFloat(prepare_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          value_added_tax: this.treeList.map(function (item) {\n            var value_added_tax = item.value_added_tax;\n\n            if (value_added_tax) {\n              return _parseFloat(value_added_tax);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          fund_preparation_fee: this.treeList.map(function (item) {\n            var fund_preparation_fee = item.fund_preparation_fee;\n\n            if (fund_preparation_fee) {\n              return _parseFloat(fund_preparation_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          fluid_capital: this.treeList.map(function (item) {\n            var fluid_capital = item.fluid_capital;\n\n            if (fluid_capital) {\n              return _parseFloat(fluid_capital);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          project_construction_other_fee: this.treeList.map(function (item) {\n            var project_construction_other_fee = item.project_construction_other_fee;\n\n            if (project_construction_other_fee) {\n              return _parseFloat(project_construction_other_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          project_fee: this.treeList.map(function (item) {\n            var project_fee = item.project_fee;\n\n            if (project_fee) {\n              return _parseFloat(project_fee);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          project_cost: this.treeList.map(function (item) {\n            var project_cost = item.project_cost;\n\n            if (project_cost) {\n              return _parseFloat(project_cost);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2),\n          total_investment_of_construction_project: this.treeList.map(function (item) {\n            var total_investment_of_construction_project = item.total_investment_of_construction_project;\n\n            if (total_investment_of_construction_project) {\n              return _parseFloat(total_investment_of_construction_project);\n            } else {\n              return 0;\n            }\n          }).reduce(function (x, y) {\n            return x + y;\n          }).toFixed(2)\n        };\n      }\n\n      return cmp;\n    }\n  }\n};",{"version":3,"sources":["invest_new_tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <tree-plan-modal\r\n      :record=\"planModal.record\"\r\n      :visible=\"planModal.visible\"\r\n      :type=\"planModal.type\"\r\n      v-if=\"planModal.visible\"\r\n      :tree_view_id=\"planModal.tree_view_id\"\r\n      @close=\"handleCloseTable()\">\r\n    </tree-plan-modal>\r\n    <div>\r\n        <a-card>\r\n          <div :class=\"className\" :id=\"id\" style=\"width: 100%; height: 400px;\" ref=\"myEchart\"></div>\r\n        </a-card>\r\n    </div>\r\n     <a-card style=\"margin-bottom: 16px\">\r\n      <a-table\r\n          bordered\r\n          :columns=\"columns\"\r\n          :dataSource=\"treeList\"\r\n          rowKey=\"tree_view_id\"\r\n          :scroll=\"{x:1300}\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handlePlanEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n\r\n  </div>\r\n\r\n</template>\r\n<script>\r\n  import echarts from 'echarts'\r\n  import api from '../../../../api/implement'\r\n  import dapi from '../../../../api/decision'\r\n  import TreePlanModal from './components/TreePlanModal'\r\n  const a='A'\r\n  const columns = [\r\n    {\r\n      title: '建设项目总投资',\r\n      dataIndex: 'total_investment_of_construction_project',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '工程造价',\r\n      dataIndex: 'project_cost',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '增值税',\r\n      dataIndex: 'value_added_tax',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '资金筹措费',\r\n      dataIndex: 'fund_preparation_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '流动资金',\r\n      dataIndex: 'fluid_capital',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '工程费用',\r\n      dataIndex: 'project_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '工程建设其他费用',\r\n      dataIndex: 'project_construction_other_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '预备费',\r\n      dataIndex: 'prepare_fee',\r\n      width: '15%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '建筑工程费',\r\n      dataIndex: 'construction_work_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '安装工程费',\r\n      dataIndex: 'installation_work_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '设备预置费',\r\n      dataIndex: 'device_preset_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '土地使用费和其他补偿费',\r\n      dataIndex: 'land_use_fee',\r\n      width: '12%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '建设管理费',\r\n      dataIndex: 'construction_management_fee',\r\n      width: '15%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '可行性研究费',\r\n      dataIndex: 'feasibility_study_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '专项评价费',\r\n      dataIndex: 'special_evaluation_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n      {\r\n      title: '研究试验费',\r\n      dataIndex: 'research_experiment_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '勘察设计费',\r\n      dataIndex: 'reconnaissance_design_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '场地准备费和临时设施费',\r\n      dataIndex: 'site_preparation_fee',\r\n      width: '12%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '引进技术和进口设备材料其他费',\r\n      dataIndex: 'imported_technology_fee',\r\n      width: '15%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '特殊设备安全监督检验费',\r\n      dataIndex: 'special_equipment_fee',\r\n      width: '12%',\r\n      align: 'center'\r\n    },\r\n         {\r\n      title: '市政公用配套设施费',\r\n      dataIndex: 'municipal_administration_fee',\r\n      width: '12%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '联合试运转费',\r\n      dataIndex: 'joint_commissioning_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '工程保险费',\r\n      dataIndex: 'engineer_insurance_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '专利及专有技术使用费',\r\n      dataIndex: 'patent_fee',\r\n      width: '15%',\r\n      align: 'center'\r\n    },\r\n      {\r\n      title: '生产准备费',\r\n      dataIndex: 'production_preparation_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '监理费',\r\n      dataIndex: 'supervisor_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '造价咨询',\r\n      dataIndex: 'cost_consultation_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '招标代理',\r\n      dataIndex: 'bid_agency_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n     {\r\n      title: '其他',\r\n      dataIndex: 'other_fee',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n\r\n  export default {\r\n    name: 'invest_new_tree',\r\n    components:{TreePlanModal},\r\n    props: {\r\n      className: {\r\n        type: String,\r\n        default: 'yourClassName',\r\n      },\r\n      id: Number,\r\n       estimate: String,\r\n       actual: String\r\n    },\r\n    data () {\r\n      return {\r\n        columns,\r\n        project_id: this.id,\r\n        card: {\r\n          construction_work_fee: null,\r\n          installation_work_fee: null,\r\n          device_preset_fee: null,\r\n          land_use_fee: null,\r\n          construction_management_fee: null,\r\n          feasibility_study_fee: null,\r\n          special_evaluation_fee: null,\r\n          research_experiment_fee: null,\r\n          reconnaissance_design_fee: null,\r\n          site_preparation_fee: null,\r\n          imported_technology_fee: null,\r\n          special_equipment_fee: null,\r\n          municipal_administration_fee: null,\r\n          joint_commissioning_fee: null,\r\n          engineer_insurance_fee: null,\r\n          patent_fee: null,\r\n          production_preparation_fee: null,\r\n          supervisor_fee: null,\r\n          cost_consultation_fee: null,\r\n          bid_agency_fee: null,\r\n          other_fee: null,\r\n          prepare_fee: null,\r\n          value_added_tax: null,\r\n          fund_preparation_fee: null,\r\n          fluid_capital: null,\r\n          project_construction_other_fee: null,\r\n          project_fee: null,\r\n          project_cost: null,\r\n          total_investment_of_construction_project: null\r\n        },\r\n        bid_card: {\r\n          save_rate: null,\r\n          bid_price: null,\r\n          control_price: null,\r\n          agency_fee: null\r\n        },\r\n        planModal:{\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          tree_view_id: this.id\r\n        },\r\n         treeList: [],\r\n         applicationList: [],\r\n         decisionList:[],\r\n        designCompanyList:[],\r\n         process:{},\r\n         trees:{\r\n            all_paid_total: null,\r\n            consult_service_paid_total: null,\r\n            construction_paid_total: null,\r\n            other_paid_total: null,\r\n            bid_paid_total: null,\r\n            design_paid_total: null,\r\n            consultation_paid_total: null,\r\n            supervisor_paid_total: null,\r\n            general_contract_paid_total:null,\r\n            subcontract_paid_total:null\r\n         },\r\n         form: this.$form.createForm(this),\r\n        chart: null\r\n\r\n      }\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n      this.chart = echarts.init(this.$refs.myEchart)\r\n       this.chart.showLoading()\r\n        this.chart.hideLoading()\r\n      this.initChart()\r\n\r\n    },\r\n    beforeDestroy () {\r\n      if (!this.chart) {\r\n        return\r\n      }\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    },\r\n    methods: {\r\n      getData() {\r\n        api.getTreeList(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n          console.log(data)\r\n          this.treeList = data\r\n          this.initChart()\r\n        })\r\n         api.getTrees(this.id)\r\n        .then(data => {\r\n          //console.log(data)\r\n          this.trees = data\r\n        })\r\n      api.getTreeSum(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n\r\n          this.card = data\r\n          this.initChart()\r\n        })\r\n         api.getApplicationList(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n          //console.log(data)\r\n          this.applicationList = data\r\n          this.initChart()\r\n        })\r\n        dapi.getDecisionList(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n          this.decisionList = data.sort((x, y) => {\r\n            return x.decision_id > y.decision_id\r\n          })\r\n          this.initChart()\r\n        })\r\n         api.getBidSum(this.$store.getters.projectSelected.id)\r\n          .then(data => {\r\n            this.bid_card = data\r\n           this.initChart()\r\n          })\r\n        api.getDesignCompanyList(this.project_id)\r\n          .then(data => {\r\n            this.designCompanyList = data\r\n            this.initChart()\r\n          })\r\n\r\n\r\n      },\r\n      getAllPaidTotal (record, total) {\r\n        let all_paid_total = parseFloat(record.all_paid_total)\r\n        let actual = parseFloat(total.actual)\r\n        return `${(all_paid_total + actual).toFixed(2)}`\r\n      },\r\n      handlePlanEdit(record) {\r\n        this.planModal.type = 'edit'\r\n        this.planModal.record = record\r\n        this.planModal.visible = true\r\n        console.log(this.planModal.record)\r\n      },\r\n\r\n      handleCloseTable () {\r\n        this.planModal.type = ''\r\n        this.planModal.record = null\r\n        this.planModal.visible = false\r\n        this.getData()\r\n    },\r\n      initChart () {\r\n// 把配置和数据放这里\r\n        let app = {}\r\n        let option = null  //${(parseFloat(this.card.project_construction_other_fee) + parseFloat(this.decisionTotal.actual)).toFixed(2)}\r\n        let data = {\r\n          'name': `总投资：${(parseFloat(this.card.total_investment_of_construction_project) + parseFloat(this.decisionTotal.actual)+ parseFloat(this.applicationTotal.actual)+ parseFloat(this.bid_card.agency_fee)+ parseFloat(this.designTotal.paid_total)).toFixed(2)}元；总计划：${this.plan.total_investment_of_construction_project}元`,\r\n          'children': [\r\n            { 'name': `工程造价：实际：${(parseFloat(this.card.project_cost) + parseFloat(this.decisionTotal.actual)+ parseFloat(this.applicationTotal.actual)+ parseFloat(this.bid_card.agency_fee)+ parseFloat(this.designTotal.paid_total)).toFixed(2)}元；计划：${this.plan.project_cost}元` ,\r\n              'children': [\r\n                {\r\n                  'name': `工程费：实际：${this.card.project_fee}元；计划：${this.plan.project_fee}元`,\r\n                  'children': [\r\n                    { 'name': `建筑工程费：实际：${this.card.construction_work_fee}元；计划：${this.plan.construction_work_fee}元` },\r\n                    { 'name': `安装工程费：实际：${this.card.installation_work_fee}元；计划：${this.plan.installation_work_fee}元` },\r\n                    { 'name': `设置预备费：实际：${this.card.device_preset_fee}元；计划：${this.plan.device_preset_fee}元` }\r\n                  ]\r\n                },\r\n                { 'name': `工程建设其他费：实际：${(parseFloat(this.card.project_construction_other_fee) + parseFloat(this.decisionTotal.actual)+ parseFloat(this.applicationTotal.actual)+ parseFloat(this.bid_card.agency_fee)+ parseFloat(this.designTotal.paid_total)).toFixed(2)}元；计划：${this.plan.project_construction_other_fee}元`,\r\n                  'children': [\r\n                    { 'name': `土地使用费和其他补偿费：实际：${this.card.land_use_fee}元；计划：${this.plan.land_use_fee}元` },\r\n                    { 'name': `建设管理费：实际：${this.card.construction_management_fee}元；计划：${this.plan.construction_management_fee}元` },\r\n                    { 'name': `可行性研究费：实际：${this.decisionTotal.actual}元；计划：${this.plan.feasibility_study_fee}元` },\r\n                    { 'name': `专项评价费：实际：${this.card.special_evaluation_fee}元；计划：${this.plan.special_evaluation_fee}元` },\r\n                    { 'name': `研究试验费：实际：${this.card.research_experiment_fee}元；计划：${this.plan.research_experiment_fee}元` },\r\n                    { 'name': `勘察设计费：实际：${this.designTotal.paid_total}元；计划：${this.plan.reconnaissance_design_fee}元` },\r\n                    { 'name': `场地准备费和临时设施费：实际：${this.card.site_preparation_fee}元；计划：${this.plan.site_preparation_fee}元` },\r\n                    { 'name': `引进技术和进口设备材料其他费：实际：${this.card.imported_technology_fee}元；计划：${this.plan.imported_technology_fee}元` },\r\n                    { 'name': `特殊设备安全监督检验费：实际：${this.card.special_equipment_fee}元；计划：${this.plan.special_equipment_fee}元` },\r\n                    { 'name': `市政公用配套设施费：实际：${this.applicationTotal.actual}元；计划：${this.plan.municipal_administration_fee}元` },\r\n                    { 'name': `联合试运转费：实际：${this.card.joint_commissioning_fee}元；计划：${this.plan.joint_commissioning_fee}元` },\r\n                    { 'name': `工程保险费：实际：${this.card.engineer_insurance_fee}元；计划：${this.plan.engineer_insurance_fee}元` },\r\n                    { 'name': `专利及专有技术使用费：实际：${this.card.patent_fee}元；计划：${this.plan.patent_fee}元` },\r\n                    { 'name': `生产准备费：实际：${this.card.production_preparation_fee}元；计划：${this.plan.production_preparation_fee}元` },\r\n                    { 'name': `监理费：实际：${this.card.supervisor_fee}元；计划：${this.plan.supervisor_fee}元` },\r\n                    { 'name': `造价咨询：实际：${this.card.cost_consultation_fee}元；计划：${this.plan.cost_consultation_fee}元` },\r\n                    { 'name': `招标代理：实际：${this.bid_card.agency_fee}元；计划：${this.plan.bid_agency_fee}元` },\r\n                    { 'name': `其他：实际：${this.card.other_fee}元；计划：${this.plan.other_fee}元` },\r\n                  ]\r\n                },\r\n                { 'name': `预备费：实际：${this.card.prepare_fee}元；计划：${this.plan.prepare_fee}元` }\r\n              ]\r\n            },\r\n            {\r\n              'name': `增值税：实际：${this.card.value_added_tax}元；计划：${this.plan.value_added_tax}元`,\r\n            },\r\n            {\r\n              'name': `资金筹措费：实际：${this.card.fund_preparation_fee}元；计划：${this.plan.fund_preparation_fee}元`,\r\n            },\r\n            { 'name': `流动资金：实际：${this.card.fluid_capital}元；计划：${this.plan.fluid_capital}元` }\r\n          ]\r\n\r\n        }\r\n        echarts.util.each(data.children, function (datum, index) {\r\n          index % 2 === 0 && (datum.collapsed = true)\r\n        })\r\n        this.chart.setOption({\r\n          tooltip: {\r\n            trigger: 'item',\r\n            triggerOn: 'mousemove'\r\n          },\r\n          series: [\r\n            {\r\n              type: 'tree',\r\n\r\n              data: [data],\r\n\r\n              top: '1%',\r\n              left: '10%',\r\n              bottom: '1%',\r\n              right: '25%',\r\n\r\n              symbolSize: 10,\r\n\r\n              label: {\r\n                normal: {\r\n                  position: 'bottom',\r\n                  verticalAlign: 'middle',\r\n                  align: 'middle',\r\n                  fontSize: 10\r\n                }\r\n              },\r\n\r\n              leaves: {\r\n                label: {\r\n                  normal: {\r\n                    position: 'bottom',\r\n                    verticalAlign: 'middle',\r\n                    align: 'left'\r\n                  }\r\n                }\r\n              },\r\n\r\n              expandAndCollapse: true,\r\n              animationDuration: 550,\r\n              animationDurationUpdate: 750\r\n            }\r\n          ]\r\n\r\n        })\r\n        if (option && typeof option === 'object') {\r\n          this.chart.setOption(option, true)\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      applicationTotal () {\r\n        let ret = {\r\n          estimate: '0',\r\n          actual: '0'\r\n        }\r\n        if (this.applicationList.length > 0) {\r\n          ret = {\r\n            estimate: this.applicationList.map((item) => {\r\n              return parseFloat(item.estimate)\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            actual: this.applicationList.map((item) => {\r\n              let actual = item.actual\r\n              if (actual) {\r\n                return parseFloat(actual)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2)\r\n          }\r\n        }\r\n        return ret\r\n      },\r\n      decisionTotal () {\r\n        let ret = {\r\n          estimate: '0',\r\n          actual: '0'\r\n        }\r\n        if (this.decisionList.length > 0) {\r\n          ret = {\r\n            estimate: this.decisionList.map((item) => {\r\n              return parseFloat(item.estimate)\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            actual: this.decisionList.map((item) => {\r\n              let actual = item.actual\r\n              if (actual) {\r\n                return parseFloat(actual)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2)\r\n          }\r\n        }\r\n        return ret\r\n      },\r\n      designTotal () {\r\n        let ret = {\r\n          paid_total: '0'\r\n        }\r\n        if (this.designCompanyList.length > 0) {\r\n          ret = {\r\n            paid_total: this.designCompanyList.map((item) => {\r\n              return parseFloat(item.paid_total)\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2)\r\n          }\r\n        }\r\n        return ret\r\n      },\r\n      plan () {\r\n        let cmp = {\r\n          construction_work_fee: '0',\r\n          installation_work_fee: '0',\r\n          device_preset_fee: '0',\r\n          land_use_fee: '0',\r\n          construction_management_fee: '0',\r\n          feasibility_study_fee: '0',\r\n          special_evaluation_fee: '0',\r\n          research_experiment_fee: '0',\r\n          reconnaissance_design_fee: '0',\r\n          site_preparation_fee: '0',\r\n          imported_technology_fee: '0',\r\n          special_equipment_fee: '0',\r\n          municipal_administration_fee: '0',\r\n          joint_commissioning_fee: '0',\r\n          engineer_insurance_fee: '0',\r\n          patent_fee: '0',\r\n          production_preparation_fee: '0',\r\n          supervisor_fee: '0',\r\n          cost_consultation_fee: '0',\r\n          bid_agency_fee: '0',\r\n          other_fee: '0',\r\n          prepare_fee: '0',\r\n          value_added_tax: '0',\r\n          fund_preparation_fee: '0',\r\n          fluid_capital: '0',\r\n          project_construction_other_fee: '0',\r\n          project_fee: '0',\r\n          project_cost: '0',\r\n          total_investment_of_construction_project: '0'\r\n        }\r\n        if (this.treeList.length > 0) {\r\n          cmp = {\r\n            construction_work_fee: this.treeList.map((item) => {\r\n              let construction_work_fee = item.construction_work_fee\r\n              if (construction_work_fee) {\r\n                return parseFloat(construction_work_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            installation_work_fee: this.treeList.map((item) => {\r\n              let installation_work_fee = item.installation_work_fee\r\n              if (installation_work_fee) {\r\n                return parseFloat(installation_work_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            device_preset_fee: this.treeList.map((item) => {\r\n              let device_preset_fee = item.device_preset_fee\r\n              if (device_preset_fee) {\r\n                return parseFloat(device_preset_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            land_use_fee: this.treeList.map((item) => {\r\n              let land_use_fee = item.land_use_fee\r\n              if (land_use_fee) {\r\n                return parseFloat(land_use_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            construction_management_fee: this.treeList.map((item) => {\r\n              let construction_management_fee = item.construction_management_fee\r\n              if (construction_management_fee) {\r\n                return parseFloat(construction_management_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            feasibility_study_fee: this.treeList.map((item) => {\r\n              let feasibility_study_fee = item.feasibility_study_fee\r\n              if (feasibility_study_fee) {\r\n                return parseFloat(feasibility_study_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            special_evaluation_fee: this.treeList.map((item) => {\r\n              let special_evaluation_fee = item.special_evaluation_fee\r\n              if (special_evaluation_fee) {\r\n                return parseFloat(special_evaluation_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            research_experiment_fee: this.treeList.map((item) => {\r\n              let research_experiment_fee = item.research_experiment_fee\r\n              if (research_experiment_fee) {\r\n                return parseFloat(research_experiment_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            reconnaissance_design_fee: this.treeList.map((item) => {\r\n              let reconnaissance_design_fee = item.reconnaissance_design_fee\r\n              if (reconnaissance_design_fee) {\r\n                return parseFloat(reconnaissance_design_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            site_preparation_fee: this.treeList.map((item) => {\r\n              let site_preparation_fee = item.site_preparation_fee\r\n              if (site_preparation_fee) {\r\n                return parseFloat(site_preparation_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            imported_technology_fee: this.treeList.map((item) => {\r\n              let imported_technology_fee = item.imported_technology_fee\r\n              if (imported_technology_fee) {\r\n                return parseFloat(imported_technology_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            special_equipment_fee: this.treeList.map((item) => {\r\n              let special_equipment_fee = item.special_equipment_fee\r\n              if (special_equipment_fee) {\r\n                return parseFloat(special_equipment_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            municipal_administration_fee: this.treeList.map((item) => {\r\n              let municipal_administration_fee = item.municipal_administration_fee\r\n              if (municipal_administration_fee) {\r\n                return parseFloat(municipal_administration_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            joint_commissioning_fee: this.treeList.map((item) => {\r\n              let joint_commissioning_fee = item.joint_commissioning_fee\r\n              if (joint_commissioning_fee) {\r\n                return parseFloat(joint_commissioning_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            engineer_insurance_fee: this.treeList.map((item) => {\r\n              let engineer_insurance_fee = item.engineer_insurance_fee\r\n              if (engineer_insurance_fee) {\r\n                return parseFloat(engineer_insurance_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            patent_fee: this.treeList.map((item) => {\r\n              let patent_fee = item.patent_fee\r\n              if (patent_fee) {\r\n                return parseFloat(patent_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            production_preparation_fee: this.treeList.map((item) => {\r\n              let production_preparation_fee = item.production_preparation_fee\r\n              if (production_preparation_fee) {\r\n                return parseFloat(production_preparation_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            supervisor_fee: this.treeList.map((item) => {\r\n              let supervisor_fee = item.supervisor_fee\r\n              if (supervisor_fee) {\r\n                return parseFloat(supervisor_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n           cost_consultation_fee: this.treeList.map((item) => {\r\n              let cost_consultation_fee = item.cost_consultation_fee\r\n              if (cost_consultation_fee) {\r\n                return parseFloat(cost_consultation_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n             bid_agency_fee: this.treeList.map((item) => {\r\n              let bid_agency_fee = item.bid_agency_fee\r\n              if (bid_agency_fee) {\r\n                return parseFloat(bid_agency_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n             }).reduce((x, y) => {\r\n               return x + y\r\n             }).toFixed(2),\r\n            other_fee: this.treeList.map((item) => {\r\n              let other_fee = item.other_fee\r\n              if (other_fee) {\r\n                return parseFloat(other_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            prepare_fee: this.treeList.map((item) => {\r\n              let prepare_fee = item.prepare_fee\r\n              if (prepare_fee) {\r\n                return parseFloat(prepare_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            value_added_tax: this.treeList.map((item) => {\r\n              let value_added_tax = item.value_added_tax\r\n              if (value_added_tax) {\r\n                return parseFloat(value_added_tax)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            fund_preparation_fee: this.treeList.map((item) => {\r\n              let fund_preparation_fee = item.fund_preparation_fee\r\n              if (fund_preparation_fee) {\r\n                return parseFloat(fund_preparation_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            fluid_capital: this.treeList.map((item) => {\r\n              let fluid_capital = item.fluid_capital\r\n              if (fluid_capital) {\r\n                return parseFloat(fluid_capital)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            project_construction_other_fee: this.treeList.map((item) => {\r\n              let project_construction_other_fee = item.project_construction_other_fee\r\n              if (project_construction_other_fee) {\r\n                return parseFloat(project_construction_other_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            project_fee: this.treeList.map((item) => {\r\n              let project_fee = item.project_fee\r\n              if (project_fee) {\r\n                return parseFloat(project_fee)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            project_cost: this.treeList.map((item) => {\r\n              let project_cost = item.project_cost\r\n              if (project_cost) {\r\n                return parseFloat(project_cost)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            total_investment_of_construction_project: this.treeList.map((item) => {\r\n              let total_investment_of_construction_project = item.total_investment_of_construction_project\r\n              if (total_investment_of_construction_project) {\r\n                return parseFloat(total_investment_of_construction_project)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2)\r\n\r\n          }\r\n        }\r\n        return cmp\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/implement/invest/invest_tree"}]}