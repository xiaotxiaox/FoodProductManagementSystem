{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\progress\\Show.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\progress\\Show.vue","mtime":1573723297458},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GanttModal from './components/GanttModal'\nimport TaskModal from './components/TaskModal'\nimport api from '../../../api/implement'\nimport {mapGetters} from 'vuex'\nimport moment from 'moment'\nimport echarts from 'echarts'\n\nconst columns = [\n  {\n    title: '任务名称',\n    dataIndex: 'name',\n    width: '25%',\n    align: 'center'\n  },\n  {\n    title: '计划开始日期',\n    dataIndex: 'dream_start_date',\n    width: '13%',\n    align: 'center'\n  },\n  {\n    title: '计划截止日期',\n    dataIndex: 'dream_end_date',\n    width: '13%',\n    align: 'center'\n  },\n  {\n    title: '实际开始日期',\n    dataIndex: 'real_start_date',\n    width: '13%',\n    align: 'center'\n  },\n  {\n    title: '实际截止日期',\n    dataIndex: 'real_end_date',\n    width: '13%',\n    align: 'center'\n  },\n  {\n    title: '状态',\n    dataIndex: 'state',\n    width: '8%',\n    align: 'center'\n  },\n  {\n    title: '编辑',\n    dataIndex: 'operation',\n    scopedSlots: {customRender: 'operation'},\n    align: 'center'\n  }\n]\nexport default {\n  name: 'Show',\n  components: {\n    GanttModal,\n    TaskModal\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      columns,\n      chart: null,\n      tasks: {\n        data: [],\n        links: []\n      },\n      status: {\n        listLoading: true,\n        tableLoading: true\n      },\n      layout: {\n        'label-col': {span: 6},\n        'wrapper-col': {span: 18}\n      },\n      taskModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        chart_id: this.id\n      },\n      ganttModal: {\n        record: null,\n        visible: false,\n        type: '1',\n      },\n      matterList: [],\n      project_id: this.projectSelected().id\n    }\n  },\n  mounted() {\n    this.getData()\n    this.chart = echarts.init(document.getElementById('myChart'))\n    this.drawLine()\n  },\n  methods: {\n    ...mapGetters(['projectSelected']),\n    getData() {\n      api.getProgressList(this.project_id)\n        .then(data => {\n          this.matterList = data\n          console.log(2)\n          console.log(data)\n          for (var i of this.matterList) {\n            if (i.state == 1)\n              i.state = \"关键\"\n            else\n              i.state = \"一般\"\n          }\n          console.log(2)\n          console.log(this.matterList)\n          api.getInitialChart(this.project_id)\n            .then(data => {\n              var sDate = data[0].start_date.split('-')\n              console.log(\"sDate1\")\n              console.log(sDate)\n              //var color=['#000bbb','#000eee','bbbabd']\n              var colorList1=[]\n              var TaskY = []\n              var TaskX = null\n              var fuzhu1 = []\n              var fuzhu2 = []\n              var end1 = []\n              var end2 = []\n              var sDate = data[0].start_date.split('-')\n              console.log(\"SDate\")\n              console.log(sDate)\n              var start = new Date(sDate[0], sDate[1], sDate[2])\n              var oDate = data[0].end_date.split('-')\n              var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\n              var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\n              var interval = data[0].interval\n              interval=parseInt(interval)\n              for (var i of this.matterList) {\n                TaskY.push(i.name)\n                if(i.state==\"一般\")\n                  colorList1.push('#32cd32')\n                else\n                  colorList1.push('#ff0000')\n                if(i.real_start_date)\n                  var realStartDate = i.real_start_date.split('-')\n                var dreamStartDate = i.dream_start_date.split('-')\n                var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\n                var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\n\n                if(i.real_end_date)\n                  var realEndDate = i.real_end_date.split('-')\n                var dreamEndDate = i.dream_end_date.split('-')\n                var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\n                var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\n                fuzhu1.push(parseInt(Math.abs(realStartDate1 - start) / 1000 / 60 / 60 / 24))\n                fuzhu2.push(parseInt(Math.abs(dreamStartDate1 - start) / 1000 / 60 / 60 / 24))\n                if(i.real_end_date&&i.real_start_date)\n                  end1.push(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\n                else\n                  end1.push(0)\n                end2.push(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\n                console.log(\"fuzhu1\")\n                console.log(fuzhu1)\n              }\n\n              TaskX = iDays\n\n              var option = {\n                title: {\n                  text: '',\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                  },\n                  formatter: function (params) {\n                    var tar;\n                    if (params[1].value != '-') {\n                      tar = params[1];\n                    } else {\n                      tar = params[0];\n                    }\n                    return tar.name;\n                  }\n                },\n                legend: {\n                  data: ['计划','实际']\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n\n                yAxis: {\n                  type: 'category',\n                  splitLine: {show: true},\n                  data: TaskY\n                },\n                xAxis: {\n                  type: 'value',\n                  min:0,\n                  max:TaskX,\n                  interval:interval,\n                  position:bottom,top,\n                  axisTick:{\n                    interval:interval,\n                    show:true\n                  },\n                  splitLine:{\n                    interval:interval,\n                    show:true\n                  },\n                  splitArea:{\n                    interval:interval,\n                    show:true,\n                    areaStyle:{\n                      color:['rgba(250,250,250,0.3)']\n                    }\n                  }\n                },\n                series: [\n                  {\n                    name: '辅助2',\n                    type: 'bar',\n                    stack: '计划',\n                    itemStyle: {\n                      normal: {\n                        barBorderColor: 'rgba(0,0,0,0)',\n                        color: 'rgba(0,0,0,0)'\n                      },\n                      emphasis: {\n                        barBorderColor: 'rgba(0,0,0,0)',\n                        color: 'rgba(0,0,0,0)'\n                      }\n                    },\n                    data: fuzhu2\n                  },\n                  {\n                    name: '辅助1',\n                    type: 'bar',\n                    stack: '实际',\n                    itemStyle: {\n                      normal: {\n                        barBorderColor: 'rgba(0,0,0,0)',\n                        color: 'rgba(0,0,0,0)'\n                      },\n                      emphasis: {\n                        barBorderColor: 'rgba(0,0,0,0)',\n                        color: 'rgba(0,0,0,0)'\n                      }\n                    },\n                    data: fuzhu1\n                  },\n                  {\n                    name: '计划',\n                    stack: '计划',\n                    type: 'bar',\n                    itemStyle: {\n                      normal: {\n                       color:'#ffd700'\n                      },\n                      emphasis: {\n                         color:'#ffd700'\n                      }\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        position: 'bottom'\n                      }\n                    },\n                    data: end2\n                  },\n                  {\n                    name: '实际',\n                    stack: '实际',\n                    type: 'bar',\n                    itemStyle: {\n                      normal: {\n                       color:function (params) {\n                         let colorList=colorList1\n                         return colorList[params.dataIndex]\n                       }\n                      },\n                      emphasis: {\n                         color: ['#000bbb']\n                      }\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        position: 'top'\n                      }\n                    },\n                    data: end1\n                  }\n                ]\n              }\n              this.chart.setOption(option)\n\n              data[0].start_date = new moment(data[0].start_date)\n              data[0].end_date = new moment(data[0].end_date)\n              this.ganttModal.record = data[0]\n              this.change()\n              this.status.listLoading = false\n            })\n        })\n    },\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      // var bar_dv = document.getElementById('bar_dv');\n      var barDv = this.$refs.chart;\n      if (barDv) {\n        console.log('bar_dv不为空');\n        // let myChart = this.$echarts.init(barDv)\n        // 基于准备好的dom，初始化echarts实例\n        // let myChart = this.$echarts.init(document.getElementById('myChart'))\n        // 绘制图表\n        var option = {\n          title: {\n            text: '',\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: function (params) {\n              var tar;\n              if (params[1].value != '-') {\n                tar = params[1];\n              } else {\n                tar = params[0];\n              }\n              return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\n            }\n          },\n          legend: {\n            data: ['计划','实际']\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n\n          yAxis: {\n            type: 'category',\n            splitLine: {show: false},\n            data:null\n          },\n          xAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              name: '辅助2',\n              type: 'bar',\n              stack: '计划',\n              itemStyle: {\n                normal: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                },\n                emphasis: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                }\n              },\n              data: null\n            },\n            {\n              name: '辅助1',\n              type: 'bar',\n              stack: '实际',\n              itemStyle: {\n                normal: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                },\n                emphasis: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n                }\n              },\n              data: null\n            },\n            {\n              name: '计划',\n              stack: '计划',\n              type: 'bar',\n              label: {\n                normal: {\n                  show: true,\n                  position: 'bottom'\n                }\n              },\n              data: null\n            },\n            {\n              name: '实际',\n              stack: '实际',\n              type: 'bar',\n              label: {\n                normal: {\n                  show: true,\n                  position: 'top'\n                }\n              },\n              data: null\n            }\n          ]\n        };\n        this.chart.setOption(option);\n      } else {\n        console.log('bar_dv为空!');\n      }\n    },\n    change() {\n      console.log(\"1\")\n      var TaskY = []\n      var TaskX = null\n      var fuzhu1 = []\n      var fuzhu2 = []\n      var end1 = []\n      var end2 = []\n      var sDate = this.ganttModal.record.start_date.split('-')\n      console.log(\"SDate\")\n      console.log(sDate)\n      var start = new Date(sDate[0], sDate[1], sDate[2])\n      var oDate = this.ganttModal.record.end_date.split('-')\n      var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\n      var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\n      var interval = this.ganttModal.record.interval\n      for (var i of this.matterList) {\n        TaskY.append(i.name)\n        var realStartDate = i.real_start_date.split('-')\n        var dreamStartDate = i.dream_start_date.split('-')\n        var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\n        var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\n\n        var realEndDate = i.real_end_date.split('-')\n        var dreamEndDate = i.dream_end_date.split('-')\n        var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\n        var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\n        fuzhu1.append(parseInt(Math.abs(realEndDate1 - start) / 1000 / 60 / 60 / 24))\n        fuzhu2.append(parseInt(Math.abs(dreamEndDate1 - start) / 1000 / 60 / 60 / 24))\n        end1.append(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\n        end2.append(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\n\n      }\n\n      TaskX = iDays\n\n      var option = {\n        title: {\n          text: '',\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n          },\n          formatter: function (params) {\n            var tar;\n            if (params[1].value != '-') {\n              tar = params[1];\n            } else {\n              tar = params[0];\n            }\n            return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\n          }\n        },\n        legend: {\n          data: ['实际', '计划']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n\n        yAxis: {\n          type: 'category',\n          splitLine: {show: false},\n          data: TaskY\n        },\n        xAxis: {\n          type: 'value',\n          data: function () {\n            var list = [];\n            for (var i = 0; i <= TaskX; i += interval) {\n              list.push(i);\n            }\n            return list;\n          }()\n        },\n        series: [\n          {\n            name: '辅助1',\n            type: 'bar',\n            stack: '实际',\n            itemStyle: {\n              normal: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              },\n              emphasis: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              }\n            },\n            data: fuzhu1\n          },\n          {\n            name: '辅助2',\n            type: 'bar',\n            stack: '计划',\n            itemStyle: {\n              normal: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              },\n              emphasis: {\n                barBorderColor: 'rgba(0,0,0,0)',\n                color: 'rgba(0,0,0,0)'\n              }\n            },\n            data: fuzhu2\n          },\n          {\n            name: '实际',\n            stack: '实际',\n            type: 'bar',\n            label: {\n              normal: {\n                show: true,\n                position: 'top'\n              }\n            },\n            data: end1\n          },\n          {\n            name: '计划',\n            stack: '计划',\n            type: 'bar',\n            label: {\n              normal: {\n                show: true,\n                position: 'bottom'\n              }\n            },\n            data: end2\n          }\n        ]\n      };\n      this.chart.setOption(option);\n    },\n    handleTaskClose() {\n      this.taskModal.type = ''\n      this.taskModal.record = null\n      this.taskModal.visible = false\n      this.getData()\n    },\n    handleTaskCreate() {\n      this.taskModal.type = 'create'\n      this.taskModal.record = null\n      this.taskModal.visible = true\n    },\n    handleTaskEdit(record) {\n      this.taskModal.type = 'edit'\n      this.taskModal.record = record\n      this.taskModal.visible = true\n    },\n    handleTaskDelete(record) {\n      api.deleteTask(record.chart_id)\n        .then(data => {\n          this.$notification.success({message: '成功', description: '删除成功', key: 'SUCCESS'})\n        })\n    },\n    handleGanttEdit() {\n      this.getData()\n      this.ganttModal.type = 'edit'\n      this.ganttModal.visible = true\n    },\n    handleGanttClose() {\n      this.ganttModal.type = ''\n      this.ganttModal.record = null\n      this.ganttModal.visible = false\n      this.getData()\n    },\n    parseFloat(f) {\n      return parseFloat(f)\n    }\n  }\n}\n",{"version":3,"sources":["Show.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Show.vue","sourceRoot":"src/views/implement/progress","sourcesContent":["<template>\r\n  <div>\r\n    <gantt-modal\r\n      :record=\"ganttModal.record\"\r\n      :visible=\"ganttModal.visible\"\r\n      :type=\"ganttModal.type\"\r\n      v-if=\"ganttModal.visible\"\r\n      @close=\"handleGanttClose()\">\r\n    </gantt-modal>\r\n    <task-modal\r\n      :record=\"taskModal.record\"\r\n      :visible=\"taskModal.visible\"\r\n      :type=\"taskModal.type\"\r\n      :chart_id=\"taskModal.chart_id\"\r\n      v-if=\"taskModal.visible\"\r\n      @close=\"handleTaskClose()\">\r\n    </task-modal>\r\n    <a-card title=\"施工进度图\"\r\n            style=\"margin-bottom: 16px\">\r\n      <div id=\"myChart\" ref=\"chart\" style=\"width: 900px; height:400px\"></div>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <div>\r\n        <a-button\r\n          type=\"primary\"\r\n          style=\"margin-left: 4px;margin-bottom:16px;\"\r\n          @click=\"handleGanttEdit()\">\r\n          编辑\r\n        </a-button>\r\n        <a-button\r\n          type=\"primary\"\r\n          icon=\"plus\"\r\n          style=\"margin-bottom:16px;float: right\"\r\n          @click=\"handleTaskCreate()\">\r\n          新建\r\n        </a-button>\r\n      </div>\r\n      <a-table\r\n        bordered\r\n        :columns=\"columns\"\r\n        :dataSource=\"matterList\"\r\n        rowKey=\"building_id\"\r\n        :pagination=\"false\">\r\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n          <a-button @click=\"handleTaskEdit(record)\">编辑</a-button>\r\n          <a-popconfirm\r\n            title=\"确认删除吗?\"\r\n            @confirm=\"handleTaskDelete(record)\">\r\n            <a-button type=\"danger\">删除</a-button>\r\n          </a-popconfirm>\r\n        </template>\r\n      </a-table>\r\n\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import GanttModal from './components/GanttModal'\r\n  import TaskModal from './components/TaskModal'\r\n  import api from '../../../api/implement'\r\n  import {mapGetters} from 'vuex'\r\n  import moment from 'moment'\r\n  import echarts from 'echarts'\r\n\r\n  const columns = [\r\n    {\r\n      title: '任务名称',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '计划开始日期',\r\n      dataIndex: 'dream_start_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '计划截止日期',\r\n      dataIndex: 'dream_end_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '实际开始日期',\r\n      dataIndex: 'real_start_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '实际截止日期',\r\n      dataIndex: 'real_end_date',\r\n      width: '13%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'state',\r\n      width: '8%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  export default {\r\n    name: 'Show',\r\n    components: {\r\n      GanttModal,\r\n      TaskModal\r\n    },\r\n    props: {\r\n      id: Number\r\n    },\r\n    data() {\r\n      return {\r\n        columns,\r\n        chart: null,\r\n        tasks: {\r\n          data: [],\r\n          links: []\r\n        },\r\n        status: {\r\n          listLoading: true,\r\n          tableLoading: true\r\n        },\r\n        layout: {\r\n          'label-col': {span: 6},\r\n          'wrapper-col': {span: 18}\r\n        },\r\n        taskModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          chart_id: this.id\r\n        },\r\n        ganttModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n        },\r\n        matterList: [],\r\n        project_id: this.projectSelected().id\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getData()\r\n      this.chart = echarts.init(document.getElementById('myChart'))\r\n      this.drawLine()\r\n    },\r\n    methods: {\r\n      ...mapGetters(['projectSelected']),\r\n      getData() {\r\n        api.getProgressList(this.project_id)\r\n          .then(data => {\r\n            this.matterList = data\r\n            console.log(2)\r\n            console.log(data)\r\n            for (var i of this.matterList) {\r\n              if (i.state == 1)\r\n                i.state = \"关键\"\r\n              else\r\n                i.state = \"一般\"\r\n            }\r\n            console.log(2)\r\n            console.log(this.matterList)\r\n            api.getInitialChart(this.project_id)\r\n              .then(data => {\r\n                var sDate = data[0].start_date.split('-')\r\n                console.log(\"sDate1\")\r\n                console.log(sDate)\r\n                //var color=['#000bbb','#000eee','bbbabd']\r\n                var colorList1=[]\r\n                var TaskY = []\r\n                var TaskX = null\r\n                var fuzhu1 = []\r\n                var fuzhu2 = []\r\n                var end1 = []\r\n                var end2 = []\r\n                var sDate = data[0].start_date.split('-')\r\n                console.log(\"SDate\")\r\n                console.log(sDate)\r\n                var start = new Date(sDate[0], sDate[1], sDate[2])\r\n                var oDate = data[0].end_date.split('-')\r\n                var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n                var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n                var interval = data[0].interval\r\n                interval=parseInt(interval)\r\n                for (var i of this.matterList) {\r\n                  TaskY.push(i.name)\r\n                  if(i.state==\"一般\")\r\n                    colorList1.push('#32cd32')\r\n                  else\r\n                    colorList1.push('#ff0000')\r\n                  if(i.real_start_date)\r\n                    var realStartDate = i.real_start_date.split('-')\r\n                  var dreamStartDate = i.dream_start_date.split('-')\r\n                  var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\r\n                  var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\r\n\r\n                  if(i.real_end_date)\r\n                    var realEndDate = i.real_end_date.split('-')\r\n                  var dreamEndDate = i.dream_end_date.split('-')\r\n                  var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\r\n                  var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\r\n                  fuzhu1.push(parseInt(Math.abs(realStartDate1 - start) / 1000 / 60 / 60 / 24))\r\n                  fuzhu2.push(parseInt(Math.abs(dreamStartDate1 - start) / 1000 / 60 / 60 / 24))\r\n                  if(i.real_end_date&&i.real_start_date)\r\n                    end1.push(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\r\n                  else\r\n                    end1.push(0)\r\n                  end2.push(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\r\n                  console.log(\"fuzhu1\")\r\n                  console.log(fuzhu1)\r\n                }\r\n\r\n                TaskX = iDays\r\n\r\n                var option = {\r\n                  title: {\r\n                    text: '',\r\n                  },\r\n                  tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                      type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                    },\r\n                    formatter: function (params) {\r\n                      var tar;\r\n                      if (params[1].value != '-') {\r\n                        tar = params[1];\r\n                      } else {\r\n                        tar = params[0];\r\n                      }\r\n                      return tar.name;\r\n                    }\r\n                  },\r\n                  legend: {\r\n                    data: ['计划','实际']\r\n                  },\r\n                  grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                  },\r\n\r\n                  yAxis: {\r\n                    type: 'category',\r\n                    splitLine: {show: true},\r\n                    data: TaskY\r\n                  },\r\n                  xAxis: {\r\n                    type: 'value',\r\n                    min:0,\r\n                    max:TaskX,\r\n                    interval:interval,\r\n                    position:bottom,top,\r\n                    axisTick:{\r\n                      interval:interval,\r\n                      show:true\r\n                    },\r\n                    splitLine:{\r\n                      interval:interval,\r\n                      show:true\r\n                    },\r\n                    splitArea:{\r\n                      interval:interval,\r\n                      show:true,\r\n                      areaStyle:{\r\n                        color:['rgba(250,250,250,0.3)']\r\n                      }\r\n                    }\r\n                  },\r\n                  series: [\r\n                    {\r\n                      name: '辅助2',\r\n                      type: 'bar',\r\n                      stack: '计划',\r\n                      itemStyle: {\r\n                        normal: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        },\r\n                        emphasis: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        }\r\n                      },\r\n                      data: fuzhu2\r\n                    },\r\n                    {\r\n                      name: '辅助1',\r\n                      type: 'bar',\r\n                      stack: '实际',\r\n                      itemStyle: {\r\n                        normal: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        },\r\n                        emphasis: {\r\n                          barBorderColor: 'rgba(0,0,0,0)',\r\n                          color: 'rgba(0,0,0,0)'\r\n                        }\r\n                      },\r\n                      data: fuzhu1\r\n                    },\r\n                    {\r\n                      name: '计划',\r\n                      stack: '计划',\r\n                      type: 'bar',\r\n                      itemStyle: {\r\n                        normal: {\r\n                         color:'#ffd700'\r\n                        },\r\n                        emphasis: {\r\n                           color:'#ffd700'\r\n                        }\r\n                      },\r\n                      label: {\r\n                        normal: {\r\n                          show: true,\r\n                          position: 'bottom'\r\n                        }\r\n                      },\r\n                      data: end2\r\n                    },\r\n                    {\r\n                      name: '实际',\r\n                      stack: '实际',\r\n                      type: 'bar',\r\n                      itemStyle: {\r\n                        normal: {\r\n                         color:function (params) {\r\n                           let colorList=colorList1\r\n                           return colorList[params.dataIndex]\r\n                         }\r\n                        },\r\n                        emphasis: {\r\n                           color: ['#000bbb']\r\n                        }\r\n                      },\r\n                      label: {\r\n                        normal: {\r\n                          show: true,\r\n                          position: 'top'\r\n                        }\r\n                      },\r\n                      data: end1\r\n                    }\r\n                  ]\r\n                }\r\n                this.chart.setOption(option)\r\n\r\n                data[0].start_date = new moment(data[0].start_date)\r\n                data[0].end_date = new moment(data[0].end_date)\r\n                this.ganttModal.record = data[0]\r\n                this.change()\r\n                this.status.listLoading = false\r\n              })\r\n          })\r\n      },\r\n      drawLine() {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        // var bar_dv = document.getElementById('bar_dv');\r\n        var barDv = this.$refs.chart;\r\n        if (barDv) {\r\n          console.log('bar_dv不为空');\r\n          // let myChart = this.$echarts.init(barDv)\r\n          // 基于准备好的dom，初始化echarts实例\r\n          // let myChart = this.$echarts.init(document.getElementById('myChart'))\r\n          // 绘制图表\r\n          var option = {\r\n            title: {\r\n              text: '',\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n              },\r\n              formatter: function (params) {\r\n                var tar;\r\n                if (params[1].value != '-') {\r\n                  tar = params[1];\r\n                } else {\r\n                  tar = params[0];\r\n                }\r\n                return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\r\n              }\r\n            },\r\n            legend: {\r\n              data: ['计划','实际']\r\n            },\r\n            grid: {\r\n              left: '3%',\r\n              right: '4%',\r\n              bottom: '3%',\r\n              containLabel: true\r\n            },\r\n\r\n            yAxis: {\r\n              type: 'category',\r\n              splitLine: {show: false},\r\n              data:null\r\n            },\r\n            xAxis: {\r\n              type: 'value'\r\n            },\r\n            series: [\r\n              {\r\n                name: '辅助2',\r\n                type: 'bar',\r\n                stack: '计划',\r\n                itemStyle: {\r\n                  normal: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  },\r\n                  emphasis: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '辅助1',\r\n                type: 'bar',\r\n                stack: '实际',\r\n                itemStyle: {\r\n                  normal: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  },\r\n                  emphasis: {\r\n                    barBorderColor: 'rgba(0,0,0,0)',\r\n                    color: 'rgba(0,0,0,0)'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '计划',\r\n                stack: '计划',\r\n                type: 'bar',\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    position: 'bottom'\r\n                  }\r\n                },\r\n                data: null\r\n              },\r\n              {\r\n                name: '实际',\r\n                stack: '实际',\r\n                type: 'bar',\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    position: 'top'\r\n                  }\r\n                },\r\n                data: null\r\n              }\r\n            ]\r\n          };\r\n          this.chart.setOption(option);\r\n        } else {\r\n          console.log('bar_dv为空!');\r\n        }\r\n      },\r\n      change() {\r\n        console.log(\"1\")\r\n        var TaskY = []\r\n        var TaskX = null\r\n        var fuzhu1 = []\r\n        var fuzhu2 = []\r\n        var end1 = []\r\n        var end2 = []\r\n        var sDate = this.ganttModal.record.start_date.split('-')\r\n        console.log(\"SDate\")\r\n        console.log(sDate)\r\n        var start = new Date(sDate[0], sDate[1], sDate[2])\r\n        var oDate = this.ganttModal.record.end_date.split('-')\r\n        var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n        var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n        var interval = this.ganttModal.record.interval\r\n        for (var i of this.matterList) {\r\n          TaskY.append(i.name)\r\n          var realStartDate = i.real_start_date.split('-')\r\n          var dreamStartDate = i.dream_start_date.split('-')\r\n          var realStartDate1 = new Date(realStartDate[0], realStartDate[1], realStartDate[2])\r\n          var dreamStartDate1 = new Date(dreamStartDate[0], dreamStartDate[1], dreamStartDate[2])\r\n\r\n          var realEndDate = i.real_end_date.split('-')\r\n          var dreamEndDate = i.dream_end_date.split('-')\r\n          var realEndDate1 = new Date(realEndDate[0], realEndDate[1], realEndDate[2])\r\n          var dreamEndDate1 = new Date(dreamEndDate[0], dreamEndDate[1], dreamEndDate[2])\r\n          fuzhu1.append(parseInt(Math.abs(realEndDate1 - start) / 1000 / 60 / 60 / 24))\r\n          fuzhu2.append(parseInt(Math.abs(dreamEndDate1 - start) / 1000 / 60 / 60 / 24))\r\n          end1.append(parseInt(Math.abs(realEndDate1 - realStartDate1) / 1000 / 60 / 60 / 24))\r\n          end2.append(parseInt(Math.abs(dreamEndDate1 - dreamStartDate1) / 1000 / 60 / 60 / 24))\r\n\r\n        }\r\n\r\n        TaskX = iDays\r\n\r\n        var option = {\r\n          title: {\r\n            text: '',\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n            },\r\n            formatter: function (params) {\r\n              var tar;\r\n              if (params[1].value != '-') {\r\n                tar = params[1];\r\n              } else {\r\n                tar = params[0];\r\n              }\r\n              return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['实际', '计划']\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n\r\n          yAxis: {\r\n            type: 'category',\r\n            splitLine: {show: false},\r\n            data: TaskY\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            data: function () {\r\n              var list = [];\r\n              for (var i = 0; i <= TaskX; i += interval) {\r\n                list.push(i);\r\n              }\r\n              return list;\r\n            }()\r\n          },\r\n          series: [\r\n            {\r\n              name: '辅助1',\r\n              type: 'bar',\r\n              stack: '实际',\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                },\r\n                emphasis: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                }\r\n              },\r\n              data: fuzhu1\r\n            },\r\n            {\r\n              name: '辅助2',\r\n              type: 'bar',\r\n              stack: '计划',\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                },\r\n                emphasis: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n                }\r\n              },\r\n              data: fuzhu2\r\n            },\r\n            {\r\n              name: '实际',\r\n              stack: '实际',\r\n              type: 'bar',\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'top'\r\n                }\r\n              },\r\n              data: end1\r\n            },\r\n            {\r\n              name: '计划',\r\n              stack: '计划',\r\n              type: 'bar',\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'bottom'\r\n                }\r\n              },\r\n              data: end2\r\n            }\r\n          ]\r\n        };\r\n        this.chart.setOption(option);\r\n      },\r\n      handleTaskClose() {\r\n        this.taskModal.type = ''\r\n        this.taskModal.record = null\r\n        this.taskModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleTaskCreate() {\r\n        this.taskModal.type = 'create'\r\n        this.taskModal.record = null\r\n        this.taskModal.visible = true\r\n      },\r\n      handleTaskEdit(record) {\r\n        this.taskModal.type = 'edit'\r\n        this.taskModal.record = record\r\n        this.taskModal.visible = true\r\n      },\r\n      handleTaskDelete(record) {\r\n        api.deleteTask(record.chart_id)\r\n          .then(data => {\r\n            this.$notification.success({message: '成功', description: '删除成功', key: 'SUCCESS'})\r\n          })\r\n      },\r\n      handleGanttEdit() {\r\n        this.getData()\r\n        this.ganttModal.type = 'edit'\r\n        this.ganttModal.visible = true\r\n      },\r\n      handleGanttClose() {\r\n        this.ganttModal.type = ''\r\n        this.ganttModal.record = null\r\n        this.ganttModal.visible = false\r\n        this.getData()\r\n      },\r\n      parseFloat(f) {\r\n        return parseFloat(f)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .item {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .wrapper {\r\n    width: 7rem;\r\n    height: 5rem;\r\n  }\r\n\r\n  .gantt_cal_light_wide.gantt_cal_light_full {\r\n    width: 550px;\r\n  }\r\n</style>"]}]}