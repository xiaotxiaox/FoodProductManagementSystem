{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Polygon.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Polygon.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint} from '../base/factory.js'\n\nexport default {\n  name: 'bm-polygon',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    path: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    strokeColor: {\n      type: String\n    },\n    strokeWeight: {\n      type: Number\n    },\n    strokeOpacity: {\n      type: Number\n    },\n    strokeStyle: {\n      type: String\n    },\n    fillColor: {\n      type: String\n    },\n    fillOpacity: {\n      type: Number\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    path: {\n      handler (val, oldVal) {\n        this.reload()\n      },\n      deep: true\n    },\n    strokeColor (val) {\n      this.originInstance.setStrokeColor(val)\n    },\n    strokeOpacity (val) {\n      this.originInstance.setStrokeOpacity(val)\n    },\n    strokeWeight (val) {\n      this.originInstance.setStrokeWeight(val)\n    },\n    strokeStyle (val) {\n      this.originInstance.setStrokeStyle(val)\n    },\n    fillColor (val) {\n      this.originInstance.setFillColor(val)\n    },\n    fillOpacity (val) {\n      this.originInstance.setFillOpacity(val)\n    },\n    editing (val) {\n      val ? this.originInstance.enableEditing() : this.originInstance.disableEditing()\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    },\n    clicking (val) {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, path, strokeColor, strokeWeight, strokeOpacity, strokeStyle, fillColor, fillOpacity, editing, massClear, clicking} = this\n      const overlay = new BMap.Polygon(path.map(item => createPoint(BMap, {lng: item.lng, lat: item.lat})), {\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        fillColor,\n        fillOpacity,\n        // enableEditing: editing,\n        enableMassClear: massClear,\n        enableClicking: clicking\n      })\n      this.originInstance = overlay\n      map.addOverlay(overlay)\n      bindEvents.call(this, overlay)\n      // 这里有一个诡异的bug，直接给 editing 赋值时会出现未知错误，因为使用下面的方法抹平。\n      editing ? overlay.enableEditing() : overlay.disableEditing()\n    }\n  }\n}\n",{"version":3,"sources":["Polygon.vue"],"names":[],"mappingsfile":"Polygon.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint} from '../base/factory.js'\n\nexport default {\n  name: 'bm-polygon',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    path: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    strokeColor: {\n      type: String\n    },\n    strokeWeight: {\n      type: Number\n    },\n    strokeOpacity: {\n      type: Number\n    },\n    strokeStyle: {\n      type: String\n    },\n    fillColor: {\n      type: String\n    },\n    fillOpacity: {\n      type: Number\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    path: {\n      handler (val, oldVal) {\n        this.reload()\n      },\n      deep: true\n    },\n    strokeColor (val) {\n      this.originInstance.setStrokeColor(val)\n    },\n    strokeOpacity (val) {\n      this.originInstance.setStrokeOpacity(val)\n    },\n    strokeWeight (val) {\n      this.originInstance.setStrokeWeight(val)\n    },\n    strokeStyle (val) {\n      this.originInstance.setStrokeStyle(val)\n    },\n    fillColor (val) {\n      this.originInstance.setFillColor(val)\n    },\n    fillOpacity (val) {\n      this.originInstance.setFillOpacity(val)\n    },\n    editing (val) {\n      val ? this.originInstance.enableEditing() : this.originInstance.disableEditing()\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    },\n    clicking (val) {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, path, strokeColor, strokeWeight, strokeOpacity, strokeStyle, fillColor, fillOpacity, editing, massClear, clicking} = this\n      const overlay = new BMap.Polygon(path.map(item => createPoint(BMap, {lng: item.lng, lat: item.lat})), {\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        fillColor,\n        fillOpacity,\n        // enableEditing: editing,\n        enableMassClear: massClear,\n        enableClicking: clicking\n      })\n      this.originInstance = overlay\n      map.addOverlay(overlay)\n      bindEvents.call(this, overlay)\n      // 这里有一个诡异的bug，直接给 editing 赋值时会出现未知错误，因为使用下面的方法抹平。\n      editing ? overlay.enableEditing() : overlay.disableEditing()\n    }\n  }\n}\n</script>\n"]}]}