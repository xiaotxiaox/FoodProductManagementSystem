{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\application\\Application.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\application\\Application.vue","mtime":1557281848162},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Card from '../../decision/components/Card'\nimport TotalCard from '../../decision/components/TotalCard'\nimport api from '../../../api/implement'\n\nexport default {\n  name: 'Application',\n  components: {\n    Card,\n    TotalCard\n  },\n  data () {\n    return {\n      applicationList: []\n    }\n  },\n  mounted () {\n    this.getData()\n  },\n  methods: {\n    getData () {\n      api.getApplicationList(this.$store.getters.projectSelected.id)\n        .then(data => {\n          this.applicationList = data\n        })\n    }\n  },\n  computed: {\n    total () {\n      let ret = {\n        estimate: 0,\n        actual: 0\n      }\n      if (this.applicationList.length > 0) {\n        ret = {\n          estimate: this.applicationList.map((item) => {\n            return parseFloat(item.estimate)\n          }).reduce((x, y) => {\n            return x + y\n          }).toFixed(2),\n          actual: this.applicationList.map((item) => {\n            let actual = item.actual\n            if (actual) {\n              return parseFloat(actual)\n            } else {\n              return 0\n            }\n          }).reduce((x, y) => {\n            return x + y\n          }).toFixed(2)\n        }\n      }\n      return ret\n    }\n  }\n}\n",{"version":3,"sources":["Application.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Application.vue","sourceRoot":"src/views/implement/application","sourcesContent":["<template>\r\n  <div>\r\n    <a-card v-if=\"applicationList.length > 0\">\r\n      <a-row :gutter=\"60\">\r\n        <a-col\r\n          :xs=\"{span: 24}\"\r\n          :sm=\"{span: 8}\"\r\n          :xl=\"{span: 6}\"\r\n          v-for=\"item in applicationList\">\r\n          <card\r\n            :key=\"item.application_id\"\r\n            :id=\"item.application_id\"\r\n            :title=\"item.title\"\r\n            :estimate=\"item.estimate\"\r\n            :status=\"item.status\"\r\n            :actual=\"item.actual\"\r\n            toName=\"implementApplicationDetail\">\r\n          </card>\r\n        </a-col>\r\n      </a-row>\r\n      <a-row>\r\n        <total-card\r\n          :estimate=\"total.estimate\"\r\n          :actual=\"total.actual\">\r\n        </total-card>\r\n      </a-row>\r\n      <a-row>\r\n        <a-button\r\n          type=\"primary\"\r\n          @click=\"$router.push({name: 'implementApplicationEdit'})\" style=\"float: right;\">\r\n          编辑\r\n        </a-button>\r\n        <p>提示：绿色表示完成，黄色表示正在办理，红色表示无法办理，紫色表示不用办理 ，灰色表示尚未办理。</p>\r\n      </a-row>\r\n    </a-card>\r\n    <a-card v-else>\r\n      <a-skeleton active/>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Card from '../../decision/components/Card'\r\n  import TotalCard from '../../decision/components/TotalCard'\r\n  import api from '../../../api/implement'\r\n\r\n  export default {\r\n    name: 'Application',\r\n    components: {\r\n      Card,\r\n      TotalCard\r\n    },\r\n    data () {\r\n      return {\r\n        applicationList: []\r\n      }\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData () {\r\n        api.getApplicationList(this.$store.getters.projectSelected.id)\r\n          .then(data => {\r\n            this.applicationList = data\r\n          })\r\n      }\r\n    },\r\n    computed: {\r\n      total () {\r\n        let ret = {\r\n          estimate: 0,\r\n          actual: 0\r\n        }\r\n        if (this.applicationList.length > 0) {\r\n          ret = {\r\n            estimate: this.applicationList.map((item) => {\r\n              return parseFloat(item.estimate)\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2),\r\n            actual: this.applicationList.map((item) => {\r\n              let actual = item.actual\r\n              if (actual) {\r\n                return parseFloat(actual)\r\n              } else {\r\n                return 0\r\n              }\r\n            }).reduce((x, y) => {\r\n              return x + y\r\n            }).toFixed(2)\r\n          }\r\n        }\r\n        return ret\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}