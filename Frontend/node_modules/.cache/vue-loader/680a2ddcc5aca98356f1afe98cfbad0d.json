{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\security\\components\\SecurityModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\security\\components\\SecurityModal.vue","mtime":1573727173499},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '../../../../api/implement'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'SecurityModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String,\r\n  },\r\n  data () {\r\n    return {\r\n      project_id: this.projectSelected().id,\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 12 }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      matter: {}\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    handleSecurityOk () {\r\n      this.form.validateFields((error, data) => {\r\n        if (!error) {\r\n          if (this.isEdit) {\r\n            api.updateSecurity(this.record.risk_id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          } else {\r\n            api.createSecurity(this.project_id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleSecurityCancel () {\r\n      this.$emit('close')\r\n    },\r\n    validateProgressLimit (rule, value, callback) {\r\n      if (this.isEdit) {\r\n        callback()\r\n      } else {\r\n        if (value < 0 || value > 100)\r\n          callback('false')\r\n        else\r\n          callback()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["SecurityModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SecurityModal.vue","sourceRoot":"src/views/implement/security/components","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleSecurityOk()\"\r\n    @cancel=\"handleSecurityCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"内容\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'risk_content',\r\n            {\r\n              rules: [\r\n                { max:256, message: '长度在256个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.risk_content : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"部位\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'part',\r\n            {\r\n              rules: [\r\n                { max:16, message: '长度在16个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.part : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"风险等级\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'risk_rank',\r\n            {\r\n              rules: [\r\n                { max:16, message: '长度在16个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.risk_rank : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"检查结果\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'result',\r\n            {\r\n              rules: [\r\n                { max:16, message: '长度在16个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.result : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport api from '../../../../api/implement'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'SecurityModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String,\r\n  },\r\n  data () {\r\n    return {\r\n      project_id: this.projectSelected().id,\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 12 }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      matter: {}\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    handleSecurityOk () {\r\n      this.form.validateFields((error, data) => {\r\n        if (!error) {\r\n          if (this.isEdit) {\r\n            api.updateSecurity(this.record.risk_id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          } else {\r\n            api.createSecurity(this.project_id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleSecurityCancel () {\r\n      this.$emit('close')\r\n    },\r\n    validateProgressLimit (rule, value, callback) {\r\n      if (this.isEdit) {\r\n        callback()\r\n      } else {\r\n        if (value < 0 || value > 100)\r\n          callback('false')\r\n        else\r\n          callback()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}