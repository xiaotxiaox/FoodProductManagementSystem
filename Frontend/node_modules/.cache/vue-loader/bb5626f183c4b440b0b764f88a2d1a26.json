{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Ground.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Ground.vue","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createBounds} from '../base/factory.js'\n\nexport default {\n  name: 'bm-ground',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    bounds: {\n      type: Object\n    },\n    opacity: {\n      type: Number\n    },\n    imageURL: {\n      type: String\n    },\n    displayOnMinLevel: {\n      type: Number\n    },\n    displayOnMaxLevel: {\n      type: Number\n    }\n  },\n  watch: {\n    bounds: {\n      handler (val) {\n        const {BMap} = this\n        this.originInstance.setBounds(createBounds(BMap, val))\n      },\n      deep: true\n    },\n    opacity (val) {\n      this.originInstance.setOpacity(val)\n    },\n    imageURL (val) {\n      this.originInstance.setImageURL(val)\n    },\n    displayOnMinLevel (val) {\n      this.originInstance.setDisplayOnMinLevel(val)\n    },\n    displayOnMaxLevel (val) {\n      this.originInstance.setDisplayOnMaxLevel(val)\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, bounds, opacity, imageURL, displayOnMinLevel, displayOnMaxLevel} = this\n      const overlay = new BMap.GroundOverlay(bounds && createBounds(BMap, bounds), {\n        opacity,\n        imageURL,\n        displayOnMaxLevel,\n        displayOnMinLevel\n      })\n      // option 中配置 https 协议地址无法加载\n      overlay.setImageURL(imageURL)\n      this.originInstance = overlay\n      bindEvents.call(this, overlay)\n      map.addOverlay(overlay)\n    }\n  }\n}\n",{"version":3,"sources":["Ground.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ground.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createBounds} from '../base/factory.js'\n\nexport default {\n  name: 'bm-ground',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    bounds: {\n      type: Object\n    },\n    opacity: {\n      type: Number\n    },\n    imageURL: {\n      type: String\n    },\n    displayOnMinLevel: {\n      type: Number\n    },\n    displayOnMaxLevel: {\n      type: Number\n    }\n  },\n  watch: {\n    bounds: {\n      handler (val) {\n        const {BMap} = this\n        this.originInstance.setBounds(createBounds(BMap, val))\n      },\n      deep: true\n    },\n    opacity (val) {\n      this.originInstance.setOpacity(val)\n    },\n    imageURL (val) {\n      this.originInstance.setImageURL(val)\n    },\n    displayOnMinLevel (val) {\n      this.originInstance.setDisplayOnMinLevel(val)\n    },\n    displayOnMaxLevel (val) {\n      this.originInstance.setDisplayOnMaxLevel(val)\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, bounds, opacity, imageURL, displayOnMinLevel, displayOnMaxLevel} = this\n      const overlay = new BMap.GroundOverlay(bounds && createBounds(BMap, bounds), {\n        opacity,\n        imageURL,\n        displayOnMaxLevel,\n        displayOnMinLevel\n      })\n      // option 中配置 https 协议地址无法加载\n      overlay.setImageURL(imageURL)\n      this.originInstance = overlay\n      bindEvents.call(this, overlay)\n      map.addOverlay(overlay)\n    }\n  }\n}\n</script>\n"]}]}