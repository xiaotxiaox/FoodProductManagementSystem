{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\components\\page\\GlobalHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\components\\page\\GlobalHeader.vue","mtime":1553931799798},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport UserMenu from '../tools/UserMenu'\r\nimport SMenu from '../menu/'\r\nimport Logo from '../tools/Logo'\r\n\r\nimport { mixin } from '@/utils/mixin.js'\r\n\r\nexport default {\r\n  name: 'GlobalHeader',\r\n  components: {\r\n    UserMenu,\r\n    SMenu,\r\n    Logo\r\n  },\r\n  mixins: [mixin],\r\n  props: {\r\n    mode: {\r\n      type: String,\r\n      // sidemenu, topmenu\r\n      default: 'sidemenu'\r\n    },\r\n    menus: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    theme: {\r\n      type: String,\r\n      required: false,\r\n      default: 'dark'\r\n    },\r\n    collapsed: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    device: {\r\n      type: String,\r\n      required: false,\r\n      default: 'desktop'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      headerBarFixed: false\r\n    }\r\n  },\r\n  mounted () {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n  },\r\n  methods: {\r\n    handleScroll () {\r\n      if (this.autoHideHeader) {\r\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop\r\n        if (scrollTop > 100) {\r\n          this.headerBarFixed = true\r\n        } else {\r\n          this.headerBarFixed = false\r\n        }\r\n      } else {\r\n        this.headerBarFixed = false\r\n      }\r\n    },\r\n    toggle () {\r\n      this.$emit('toggle')\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["GlobalHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GlobalHeader.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n  <!-- , width: fixedHeader ? `calc(100% - ${sidebarOpened ? 256 : 80}px)` : '100%'  -->\r\n  <a-layout-header v-if=\"!headerBarFixed\" :class=\"[fixedHeader && 'ant-header-fixedHeader', sidebarOpened ? 'ant-header-side-opened' : 'ant-header-side-closed', ]\" :style=\"{ padding: '0' }\">\r\n    <div v-if=\"mode === 'sidemenu'\" class=\"header\">\r\n      <a-icon\r\n        v-if=\"device==='mobile'\"\r\n        class=\"trigger\"\r\n        :type=\"collapsed ? 'menu-fold' : 'menu-unfold'\"\r\n        @click=\"toggle\"></a-icon>\r\n      <a-icon\r\n        v-else\r\n        class=\"trigger\"\r\n        :type=\"collapsed ? 'menu-unfold' : 'menu-fold'\"\r\n        @click=\"toggle\"/>\r\n\r\n      <user-menu></user-menu>\r\n    </div>\r\n    <div v-else :class=\"['top-nav-header-index', theme]\">\r\n      <div class=\"header-index-wide\">\r\n        <div class=\"header-index-left\">\r\n          <logo class=\"top-nav-header\" :show-title=\"device !== 'mobile'\" />\r\n          <s-menu\r\n            v-if=\"device !== 'mobile'\"\r\n            mode=\"horizontal\"\r\n            :menu=\"menus\"\r\n            :theme=\"theme\"\r\n          ></s-menu>\r\n          <a-icon\r\n            v-else\r\n            class=\"trigger\"\r\n            :type=\"collapsed ? 'menu-fold' : 'menu-unfold'\"\r\n            @click=\"toggle\"></a-icon>\r\n        </div>\r\n        <user-menu class=\"header-index-right\"></user-menu>\r\n      </div>\r\n    </div>\r\n\r\n  </a-layout-header>\r\n</template>\r\n\r\n<script>\r\nimport UserMenu from '../tools/UserMenu'\r\nimport SMenu from '../menu/'\r\nimport Logo from '../tools/Logo'\r\n\r\nimport { mixin } from '@/utils/mixin.js'\r\n\r\nexport default {\r\n  name: 'GlobalHeader',\r\n  components: {\r\n    UserMenu,\r\n    SMenu,\r\n    Logo\r\n  },\r\n  mixins: [mixin],\r\n  props: {\r\n    mode: {\r\n      type: String,\r\n      // sidemenu, topmenu\r\n      default: 'sidemenu'\r\n    },\r\n    menus: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    theme: {\r\n      type: String,\r\n      required: false,\r\n      default: 'dark'\r\n    },\r\n    collapsed: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    device: {\r\n      type: String,\r\n      required: false,\r\n      default: 'desktop'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      headerBarFixed: false\r\n    }\r\n  },\r\n  mounted () {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n  },\r\n  methods: {\r\n    handleScroll () {\r\n      if (this.autoHideHeader) {\r\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop\r\n        if (scrollTop > 100) {\r\n          this.headerBarFixed = true\r\n        } else {\r\n          this.headerBarFixed = false\r\n        }\r\n      } else {\r\n        this.headerBarFixed = false\r\n      }\r\n    },\r\n    toggle () {\r\n      this.$emit('toggle')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}