{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\ScheduleControl\\ScheduleNotice\\components\\ScheduleNoticeModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\ScheduleControl\\ScheduleNotice\\components\\ScheduleNoticeModal.vue","mtime":1571468294976},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '../../../../api/scheduleControl'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'ScheduleNoticeModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String,\r\n    notice_id: Number,\r\n    id: Number\r\n  },\r\n  data () {\r\n    return {\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 12 }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      notice: {},\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    getData () {\r\n      if (this.isEdit) {\r\n        this.record.give_time = new moment(this.record.give_time)\r\n        this.record.reply_time = new moment(this.record.reply_time)\r\n        api.getScheduleNoticeMatter(this.record.id)\r\n          .then(data => {\r\n            this.notice = data\r\n          })\r\n      }\r\n    },\r\n    handleOk () {\r\n      this.form.validateFields((error, data) => {\r\n        console.log(data)\r\n        if (!error) {\r\n          data.give_time = data.give_time.format('YYYY-MM-DD')\r\n          if (data.reply_time != null) {\r\n            data.reply_time = data.reply_time.format('YYYY-MM-DD')\r\n          }\r\n          if (this.isEdit) {\r\n            api.updateScheduleNotice(this.record.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          } else {\r\n            api.createScheduleNotice(this.$store.getters.projectSelected.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.$emit('close')\r\n    }\r\n\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ScheduleNoticeModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScheduleNoticeModal.vue","sourceRoot":"src/views/ScheduleControl/ScheduleNotice/components","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleOk()\"\r\n    @cancel=\"handleCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"通知单编号\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"Number\"\r\n          v-decorator=\"[\r\n            'id',\r\n            {\r\n              rules:[\r\n                { required: true, message: '请输入通知单编号' },\r\n                { max:128, message: '长度在128个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.id : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"部位\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'part',\r\n            {\r\n              rules:[\r\n                { required: true, message: '请输入部位' },\r\n                { max:128, message: '长度在128个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.part : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"发出日期\"\r\n        :label-col=\"{span: 6}\"\r\n        :wrapper-col=\"{span: 18}\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n                'give_time',\r\n                {rules: [{type: 'object',required: true, message: '请选择发出日期'}]}\r\n              ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"回复日期\"\r\n        :label-col=\"{span: 6}\"\r\n        :wrapper-col=\"{span: 18}\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n                'reply_time',\r\n                {rules: [{type: 'object',required: false, message: '请选择回复日期'}]}\r\n              ]\"></a-date-picker>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport api from '../../../../api/scheduleControl'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'ScheduleNoticeModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String,\r\n    notice_id: Number,\r\n    id: Number\r\n  },\r\n  data () {\r\n    return {\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 12 }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      notice: {},\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    getData () {\r\n      if (this.isEdit) {\r\n        this.record.give_time = new moment(this.record.give_time)\r\n        this.record.reply_time = new moment(this.record.reply_time)\r\n        api.getScheduleNoticeMatter(this.record.id)\r\n          .then(data => {\r\n            this.notice = data\r\n          })\r\n      }\r\n    },\r\n    handleOk () {\r\n      this.form.validateFields((error, data) => {\r\n        console.log(data)\r\n        if (!error) {\r\n          data.give_time = data.give_time.format('YYYY-MM-DD')\r\n          if (data.reply_time != null) {\r\n            data.reply_time = data.reply_time.format('YYYY-MM-DD')\r\n          }\r\n          if (this.isEdit) {\r\n            api.updateScheduleNotice(this.record.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          } else {\r\n            api.createScheduleNotice(this.$store.getters.projectSelected.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.$emit('close')\r\n    }\r\n\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}