{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Label.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Label.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint, createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-label',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    content: {\n      type: String\n    },\n    title: {\n      type: String\n    },\n    offset: {},\n    position: {},\n    labelStyle: {},\n    zIndex: {\n      type: Number,\n      default: 0\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    }\n  },\n  watch: {\n    content (val) {\n      this.originInstance.setContent(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    'offset.width' (val, oldVal) {\n      const {BMap} = this\n      if (val.toString() !== oldVal.toString()) {\n        this.originInstance.setOffset(createSize(BMap, {width: val, height: this.offset.height}))\n      }\n    },\n    'offset.height' (val, oldVal) {\n      const {BMap} = this\n      if (val.toString() !== oldVal.toString()) {\n        this.originInstance.setOffset(createSize(BMap, {\n          width: this.offset.width,\n          height: val\n        }))\n      }\n    },\n    'position.lng' (val, oldVal) {\n      const {BMap} = this\n      const lng = val\n      if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {\n        this.originInstance.setCenter(createPoint(BMap, {lng, lat: this.center.lat}))\n      }\n    },\n    'position.lat' (val, oldVal) {\n      const {BMap} = this\n      const lat = val\n      if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {\n        this.originInstance.setCenter(createPoint(BMap, {lng: this.center.lng, lat}))\n      }\n    },\n    labelStyle: {\n      handler (val) {\n        this.originInstance.setStyle(val)\n      },\n      deep: true\n    },\n    zIndex (val) {\n      this.originInstance.setZIndex(val)\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, content, title, offset, position, labelStyle, zIndex, massClear, $parent} = this\n      const overlay = new BMap.Label(content, {\n        offset: createSize(BMap, offset),\n        position: createPoint(BMap, position),\n        enableMassClear: massClear\n      })\n      this.originInstance = overlay\n      try {\n        $parent.originInstance.setLabel(overlay)\n      } catch (e) {\n        map.addOverlay(overlay)\n      }\n      title && overlay.setTitle(title)\n      labelStyle && overlay.setStyle(labelStyle)\n      zIndex && overlay.setZIndex(zIndex)\n      bindEvents.call(this, overlay)\n    }\n  }\n}\n",{"version":3,"sources":["Label.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Label.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint, createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-label',\n  render () {},\n  mixins: [commonMixin('overlay')],\n  props: {\n    content: {\n      type: String\n    },\n    title: {\n      type: String\n    },\n    offset: {},\n    position: {},\n    labelStyle: {},\n    zIndex: {\n      type: Number,\n      default: 0\n    },\n    massClear: {\n      type: Boolean,\n      default: true\n    }\n  },\n  watch: {\n    content (val) {\n      this.originInstance.setContent(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    'offset.width' (val, oldVal) {\n      const {BMap} = this\n      if (val.toString() !== oldVal.toString()) {\n        this.originInstance.setOffset(createSize(BMap, {width: val, height: this.offset.height}))\n      }\n    },\n    'offset.height' (val, oldVal) {\n      const {BMap} = this\n      if (val.toString() !== oldVal.toString()) {\n        this.originInstance.setOffset(createSize(BMap, {\n          width: this.offset.width,\n          height: val\n        }))\n      }\n    },\n    'position.lng' (val, oldVal) {\n      const {BMap} = this\n      const lng = val\n      if (val.toString() !== oldVal.toString() && lng >= -180 && lng <= 180) {\n        this.originInstance.setCenter(createPoint(BMap, {lng, lat: this.center.lat}))\n      }\n    },\n    'position.lat' (val, oldVal) {\n      const {BMap} = this\n      const lat = val\n      if (val.toString() !== oldVal.toString() && lat >= -74 && lat <= 74) {\n        this.originInstance.setCenter(createPoint(BMap, {lng: this.center.lng, lat}))\n      }\n    },\n    labelStyle: {\n      handler (val) {\n        this.originInstance.setStyle(val)\n      },\n      deep: true\n    },\n    zIndex (val) {\n      this.originInstance.setZIndex(val)\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, content, title, offset, position, labelStyle, zIndex, massClear, $parent} = this\n      const overlay = new BMap.Label(content, {\n        offset: createSize(BMap, offset),\n        position: createPoint(BMap, position),\n        enableMassClear: massClear\n      })\n      this.originInstance = overlay\n      try {\n        $parent.originInstance.setLabel(overlay)\n      } catch (e) {\n        map.addOverlay(overlay)\n      }\n      title && overlay.setTitle(title)\n      labelStyle && overlay.setStyle(labelStyle)\n      zIndex && overlay.setZIndex(zIndex)\n      bindEvents.call(this, overlay)\n    }\n  }\n}\n</script>\n"]}]}