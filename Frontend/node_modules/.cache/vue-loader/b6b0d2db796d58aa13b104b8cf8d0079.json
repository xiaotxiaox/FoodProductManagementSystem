{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-task-node\\src\\lib\\components\\node\\initial\\initial.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-task-node\\src\\lib\\components\\node\\initial\\initial.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Node from '../node.vue'\nimport InPort from '../../port/inport.vue'\nimport OutPort from '../../port/outport.vue'\nimport mixinsNode from '../../../mixins/node'\nimport mixinsTool from '../../../mixins/tool'\nconst prefixCls = 'task-initial-node'\nexport default {\n  components: {\n    OutPort,\n    InPort,\n    Node},\n  name: 'InitialNode',\n  mixins: [ mixinsNode, mixinsTool ],\n  data () {\n    return {\n    }\n  },\n  props: {\n    backgroundColor: [String],\n    node: {\n      id: [String, Number],\n      name: {\n        type: [String, Number],\n        default: '节点'\n      },\n      positionX: {\n        type: [String, Number],\n        default: 0\n      },\n      positionY: {\n        type: [String, Number],\n        default: 0\n      },\n      icon: [String, Number],\n      inPorts: {\n        type: Array,\n        default: [],\n        validator: function (value) {\n          if (value && value.length > 1) {\n            return false\n          }\n          return true\n        }\n      },\n      outPorts: {\n        type: Array,\n        default: [],\n        validator: function (value) {\n          if (value && value.length > 1) {\n            return false\n          }\n          return true\n        }\n      }\n    }\n  },\n  computed: {\n    classes () {\n      return [\n        `${prefixCls}`,\n        `${prefixCls}-in`\n      ]\n    },\n    wrapInCls () {\n      return [\n        `${prefixCls}-in-wrap`\n      ]\n    },\n    wrapOutCls () {\n      return [\n        `${prefixCls}-out-wrap`\n      ]\n    },\n    nameCls () {\n      return [\n        `${prefixCls}-name`\n      ]\n    },\n    iconCls () {\n      return [\n        `${prefixCls}-icon`\n      ]\n    }\n  }\n}\n",{"version":3,"sources":["initial.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"initial.vue","sourceRoot":"node_modules/vue-task-node/src/lib/components/node/initial","sourcesContent":["<template>\n  <node :node=\"node\" width=30 height=30 v-on:on-select=\"selectNodeMethod\" v-on:on-drag-ging=\"dragGing\" v-on:on-drag-start=\"dragStart\" v-on:on-drag-end=\"dragEnd\" v-on:updateTem=\"updateTemp\" v-on:on-mouse=\"mouseMenu\">\n    <div :class=\"classes\" :style=\"'background-color: '+ backgroundColor\">\n      <span :class=\"iconCls +' '+ [node.icon ? node.icon : 'task-icon-53']\"></span>\n      <div v-if=\"isEmpty(node.inPorts) && node.inPorts.length > 0\" :class=\"wrapInCls\">\n        <div style=\"width: 45%\">\n          <in-port :pid=\"node.inPorts[0].id\" :isConnected = node.inPorts[0].isConnected></in-port>\n        </div>\n      </div>\n      <div v-if=\"isEmpty(node.outPorts) && node.outPorts.length > 0\" :class=\"wrapOutCls\">\n        <div style=\"width: 45%\">\n          <out-port :pid=\"node.outPorts[0].id\"></out-port>\n        </div>\n      </div>\n    </div>\n  </node>\n</template>\n<script>\nimport Node from '../node.vue'\nimport InPort from '../../port/inport.vue'\nimport OutPort from '../../port/outport.vue'\nimport mixinsNode from '../../../mixins/node'\nimport mixinsTool from '../../../mixins/tool'\nconst prefixCls = 'task-initial-node'\nexport default {\n  components: {\n    OutPort,\n    InPort,\n    Node},\n  name: 'InitialNode',\n  mixins: [ mixinsNode, mixinsTool ],\n  data () {\n    return {\n    }\n  },\n  props: {\n    backgroundColor: [String],\n    node: {\n      id: [String, Number],\n      name: {\n        type: [String, Number],\n        default: '节点'\n      },\n      positionX: {\n        type: [String, Number],\n        default: 0\n      },\n      positionY: {\n        type: [String, Number],\n        default: 0\n      },\n      icon: [String, Number],\n      inPorts: {\n        type: Array,\n        default: [],\n        validator: function (value) {\n          if (value && value.length > 1) {\n            return false\n          }\n          return true\n        }\n      },\n      outPorts: {\n        type: Array,\n        default: [],\n        validator: function (value) {\n          if (value && value.length > 1) {\n            return false\n          }\n          return true\n        }\n      }\n    }\n  },\n  computed: {\n    classes () {\n      return [\n        `${prefixCls}`,\n        `${prefixCls}-in`\n      ]\n    },\n    wrapInCls () {\n      return [\n        `${prefixCls}-in-wrap`\n      ]\n    },\n    wrapOutCls () {\n      return [\n        `${prefixCls}-out-wrap`\n      ]\n    },\n    nameCls () {\n      return [\n        `${prefixCls}-name`\n      ]\n    },\n    iconCls () {\n      return [\n        `${prefixCls}-icon`\n      ]\n    }\n  }\n}\n</script>\n"]}]}