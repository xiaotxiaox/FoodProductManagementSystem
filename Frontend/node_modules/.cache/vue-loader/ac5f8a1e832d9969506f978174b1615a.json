{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\src\\views\\detail\\components\\ImageModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\views\\detail\\components\\ImageModal.vue","mtime":1572857662654},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '../../../api/detail'\r\nimport { mapGetters } from 'vuex'\r\nimport { getCookie } from '../../../utils/util'\r\n\r\nexport default {\r\n  name: 'ImageModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String\r\n  },\r\n  data () {\r\n    return {\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 16 }\r\n      },\r\n      status: {\r\n        img: {\r\n          loading: false\r\n        }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      typeList: [],\r\n      project_id: this.projectSelected().id,\r\n      image: {\r\n        uuid: null,\r\n        url: null\r\n      },\r\n      headers: {\r\n        'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    if(this.record.url!=0)\r\n      this.image=this.record\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    handleOk () {\r\n      this.form.validateFields((error, data) => {\r\n        if (!error) {\r\n          data.uuid = this.image.uuid\r\n          if(this.record.url==0){\r\n            api.createImage(this.project_id, data)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n            })\r\n          }\r\n          else{\r\n            api.deleteImage(this.project_id)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '删除成功', key: 'SUCCESS' })\r\n            })\r\n            api.createImage(this.project_id, data)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleImageChange (info) {\r\n      if (info.file.status === 'uploading') {\r\n        this.loading = true\r\n      } else if (info.file.status === 'done') {\r\n        this.image.uuid = info.file.response.uuid\r\n        this.image.url = info.file.response.url.toString()\r\n        this.loading = false\r\n        console.log(\"this.image\")\r\n        console.log(this.image)\r\n      } else if (info.file.status === 'error') {\r\n        this.$message.error(`${info.file.name} 上传失败.`)\r\n        this.loading = false\r\n      }\r\n    },\r\n    beforeUpload (file) {\r\n      const isImage = /image\\/*/.test(file.type)\r\n      if (!isImage) {\r\n        this.$message.error('图片格式不正确')\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 <= 100\r\n      if (!isLt2M) {\r\n        this.$message.error('图片大小请小于100MB')\r\n      }\r\n      return isImage && isLt2M\r\n    },\r\n    handleCancel () {\r\n      this.$emit('close')\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ImageModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"ImageModal.vue","sourceRoot":"src/views/detail/components","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleOk()\"\r\n    @cancel=\"handleCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"项目图片\"\r\n        v-bind=\"layout\">\r\n        <a-upload\r\n          name=\"image\"\r\n          action=\"/api/file/\"\r\n          :withCredentials=\"true\"\r\n          :headers=\"headers\"\r\n          accept=\"image/*\"\r\n          listType=\"picture-card\"\r\n          :showUploadList=\"false\"\r\n          :beforeUpload=\"beforeUpload\"\r\n          @change=\"handleImageChange\">\r\n          <img v-if=\"image.url\" :src=\"image.url\" alt=\"项目图片\" width=\"200px\"/>\r\n          <div v-else style=\"width: 100px\">\r\n            <a-icon :type=\"status.img.loading ? 'loading' : 'plus'\"/>\r\n            <div class=\"text\">选择图片</div>\r\n          </div>\r\n        </a-upload>\r\n        <span>支持图片文件，不大于2MB</span>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport api from '../../../api/detail'\r\nimport { mapGetters } from 'vuex'\r\nimport { getCookie } from '../../../utils/util'\r\n\r\nexport default {\r\n  name: 'ImageModal',\r\n  props: {\r\n    record: Object,\r\n    visible: Boolean,\r\n    type: String\r\n  },\r\n  data () {\r\n    return {\r\n      layout: {\r\n        'label-col': { span: 8 },\r\n        'wrapper-col': { span: 16 }\r\n      },\r\n      status: {\r\n        img: {\r\n          loading: false\r\n        }\r\n      },\r\n      form: this.$form.createForm(this),\r\n      typeList: [],\r\n      project_id: this.projectSelected().id,\r\n      image: {\r\n        uuid: null,\r\n        url: null\r\n      },\r\n      headers: {\r\n        'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    if(this.record.url!=0)\r\n      this.image=this.record\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    handleOk () {\r\n      this.form.validateFields((error, data) => {\r\n        if (!error) {\r\n          data.uuid = this.image.uuid\r\n          if(this.record.url==0){\r\n            api.createImage(this.project_id, data)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n            })\r\n          }\r\n          else{\r\n            api.deleteImage(this.project_id)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '删除成功', key: 'SUCCESS' })\r\n            })\r\n            api.createImage(this.project_id, data)\r\n            .then(data => {\r\n              this.$emit('close')\r\n              this.$notification.success({ message: '成功', description: '新建成功', key: 'SUCCESS' })\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleImageChange (info) {\r\n      if (info.file.status === 'uploading') {\r\n        this.loading = true\r\n      } else if (info.file.status === 'done') {\r\n        this.image.uuid = info.file.response.uuid\r\n        this.image.url = info.file.response.url.toString()\r\n        this.loading = false\r\n        console.log(\"this.image\")\r\n        console.log(this.image)\r\n      } else if (info.file.status === 'error') {\r\n        this.$message.error(`${info.file.name} 上传失败.`)\r\n        this.loading = false\r\n      }\r\n    },\r\n    beforeUpload (file) {\r\n      const isImage = /image\\/*/.test(file.type)\r\n      if (!isImage) {\r\n        this.$message.error('图片格式不正确')\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 <= 100\r\n      if (!isLt2M) {\r\n        this.$message.error('图片大小请小于100MB')\r\n      }\r\n      return isImage && isLt2M\r\n    },\r\n    handleCancel () {\r\n      this.$emit('close')\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit () {\r\n      return this.type === 'edit'\r\n    },\r\n    title () {\r\n      return this.isEdit ? '编辑' : '新建'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>"]}]}