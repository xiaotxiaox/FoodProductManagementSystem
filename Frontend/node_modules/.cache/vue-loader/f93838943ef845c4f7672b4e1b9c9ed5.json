{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\setting\\components\\ProjectTable.vue?vue&type=style&index=0&id=31d55d45&scoped=true&lang=less&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\setting\\components\\ProjectTable.vue","mtime":1555814419893},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\less-loader\\dist\\cjs.js","mtime":1553685064192},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.add-btn {\n  width: 100%;\n  margin-top: 20px;\n}\n",{"version":3,"sources":["ProjectTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA","file":"ProjectTable.vue","sourceRoot":"src/views/setting/components","sourcesContent":["<template>\r\n  <div>\r\n    <a-divider orientation=\"left\" style=\"font-size: 20px\">{{title}}</a-divider>\r\n    <a-skeleton active v-if=\"!dataSource\"></a-skeleton>\r\n    <div v-else>\r\n      <a-table rowKey=\"value\"\r\n               class=\"project-table\"\r\n               :columns=\"columns\"\r\n               :dataSource=\"dataSource\"\r\n               :pagination=\"false\">\r\n        <template v-for=\"col in ['label', 'description']\"\r\n                  :slot=\"col\"\r\n                  slot-scope=\"text, record, index\">\r\n          <div :key=\"col\">\r\n            <a-input\r\n              v-if=\"record.editable\"\r\n              :value=\"text\"\r\n              @change=\"e => handleChange(e.target.value, record.value, col)\"/>\r\n            <template v-else>{{ text }}</template>\r\n          </div>\r\n        </template>\r\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n      <span v-if=\"record.editable\">\r\n        <a-button-group>\r\n          <a-button type=\"primary\" @click=\"handleSave(record)\">保存</a-button>\r\n          <a-button @click=\"handleCancel(record)\">取消</a-button>\r\n          <a-popconfirm\r\n            v-if=\"record.value !== -1\"\r\n            title=\"确认删除吗?\"\r\n            @confirm=\"handleDelete(record)\">\r\n            <a-button type=\"danger\">删除</a-button>\r\n          </a-popconfirm>\r\n        </a-button-group>\r\n      </span>\r\n          <span v-else>\r\n        <a-button @click=\"handleClick(record)\">编辑</a-button>\r\n      </span>\r\n        </template>\r\n      </a-table>\r\n      <a-row>\r\n        <a-col\r\n          :xs=\"{span: 24}\"\r\n          :sm=\"{span: 4, offset: 20}\"\r\n          :xl=\"{span: 3, offset: 21}\">\r\n          <a-button\r\n            class=\"add-btn\"\r\n            icon=\"plus\"\r\n            type=\"primary\"\r\n            @click=\"handleAdd()\">\r\n            添加\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import _ from 'lodash'\r\n\r\n  export default {\r\n    name: 'ProjectTable',\r\n    data () {\r\n      return {\r\n        cacheData: [],\r\n        dataSource: null,\r\n        columns: [\r\n          {\r\n            title: '选项',\r\n            dataIndex: 'label',\r\n            width: '20%',\r\n            scopedSlots: { customRender: 'label' }\r\n          },\r\n          {\r\n            title: '说明',\r\n            dataIndex: 'description',\r\n            width: '20%',\r\n            scopedSlots: { customRender: 'description' }\r\n          },\r\n          {\r\n            title: '操作',\r\n            width: '15%',\r\n            scopedSlots: { customRender: 'operation' }\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      getListFn: Function,\r\n      addFn: Function,\r\n      updateFn: Function,\r\n      deleteFn: Function\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData () {\r\n        this.getListFn().then(data => {\r\n          this.dataSource = data\r\n          this.cacheData = _.cloneDeep(data)\r\n        })\r\n      },\r\n      handleAdd () {\r\n        if (this.dataSource[this.dataSource.length - 1].value !== -1) {\r\n          let newRow = {\r\n            value: -1,\r\n            label: '',\r\n            description: '',\r\n            editable: true\r\n          }\r\n          this.dataSource.push(newRow)\r\n        }\r\n\r\n      },\r\n      handleClick (record) {\r\n        let newData = [...this.dataSource]\r\n        let target = newData.find(item => record.value === item.value)\r\n        if (target) {\r\n          target.editable = true\r\n          this.dataSource = newData\r\n        }\r\n      },\r\n      handleChange (text, value, column) {\r\n        let newData = [...this.dataSource]\r\n        let target = newData.find(item => value === item.value)\r\n        if (target) {\r\n          target[column] = text\r\n          this.dataSource = newData\r\n        }\r\n      },\r\n      handleDelete (value) {\r\n        console.log(value)\r\n      },\r\n      handleSave (value) {\r\n        console.log(value)\r\n      },\r\n      handleCancel (record) {\r\n        let newData = [...this.dataSource]\r\n        let target = newData.find(item => record.value === item.value)\r\n        if (target) {\r\n          delete target.editable\r\n          this.dataSource = newData\r\n        } else {\r\n          this.restore()\r\n        }\r\n      },\r\n      restore () {\r\n        this.dataSource = _.cloneDeep(this.cacheData)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .add-btn {\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n</style>"]}]}