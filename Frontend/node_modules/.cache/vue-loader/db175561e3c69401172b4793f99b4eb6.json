{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\application\\Application.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\application\\Application.vue","mtime":1573727021126},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Card from '../../decision/components/Card'\r\nimport TotalCard from '../../decision/components/TotalCard'\r\nimport api from '../../../api/implement'\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'Application',\r\n  components: {\r\n    Card,\r\n    TotalCard\r\n  },\r\n  data () {\r\n    return {\r\n      applicationList: [],\r\n      option1: {\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: ['预算', '实际', '节约'],\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 20\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          label: {\r\n            textStyle: {\r\n              fontSize: 50\r\n            }\r\n          },\r\n          name: '总计',\r\n          type: 'bar',\r\n          barWidth: 50,\r\n          data: [0, 0, 0],\r\n          itemStyle: {\r\n            normal: {\r\n              //每根柱子颜色设置\r\n              color: function (params) {\r\n                let colorList = [\r\n                  '#32CD32',\r\n                  '#FF0000',\r\n                  '#FFD700'\r\n                ]\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      chart: null\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.getData()\r\n  },\r\n  mounted () {\r\n\r\n  },\r\n  methods: {\r\n    getData () {\r\n      api.getApplicationList(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n          console.log(data)\r\n          this.applicationList = data\r\n          this.change()\r\n        })\r\n    },\r\n    change () {\r\n      var arr = []\r\n\r\n      this.chart = echarts.init(document.getElementById('echartContainer'))\r\n      arr.push(this.total.estimate)\r\n      arr.push(this.total.actual)\r\n      arr.push(this.total.estimate - this.total.actual)\r\n      console.log(this.total)\r\n      console.log(arr)\r\n      this.chart.setOption({\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: ['预算', '实际', '节约'],\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 20\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          label: {\r\n            textStyle: {\r\n              fontSize: 50\r\n            }\r\n          },\r\n          name: '总计',\r\n          type: 'bar',\r\n          barWidth: 50,\r\n          data: arr,\r\n          itemStyle: {\r\n            normal: {\r\n              //每根柱子颜色设置\r\n              color: function (params) {\r\n                let colorList = [\r\n                  '#32CD32',\r\n                  '#FF0000',\r\n                  '#FFD700'\r\n                ]\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }, true)\r\n      window.onresize = this.chart.resize\r\n    }\r\n  },\r\n  computed: {\r\n    total () {\r\n      let ret = {\r\n        estimate: '0',\r\n        actual: '0'\r\n      }\r\n      if (this.applicationList.length >0) {\r\n        ret = {\r\n          estimate: this.applicationList.map((item) => {\r\n            return parseFloat(item.estimate)\r\n          }).reduce((x, y) => {\r\n            return x + y\r\n          }).toFixed(2),\r\n          actual: this.applicationList.map((item) => {\r\n            let actual = item.actual\r\n            if (actual) {\r\n              return parseFloat(actual)\r\n            } else {\r\n              return 0\r\n            }\r\n          }).reduce((x, y) => {\r\n            return x + y\r\n          }).toFixed(2)\r\n        }\r\n      }\r\n      return ret\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Application.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Application.vue","sourceRoot":"src/views/implement/application","sourcesContent":["<template>\r\n  <div>\r\n    <a-card v-if=\"applicationList\">\r\n      <a-row>\r\n        <a-button\r\n          type=\"primary\"\r\n          @click=\"$router.push({name: 'implementApplicationEdit'})\" style=\"float: right;\">\r\n          编辑\r\n        </a-button>\r\n        <p>提示：绿色表示完成，黄色表示正在办理，红色表示无法办理，紫色表示不用办理 ，灰色表示尚未办理。</p>\r\n      </a-row>\r\n      <a-row :gutter=\"60\">\r\n        <a-col\r\n          :xs=\"{span: 20}\"\r\n          :sm=\"{span: 8}\"\r\n          :xl=\"{span: 6}\"\r\n          v-for=\"item in applicationList\">\r\n          <card\r\n            :key=\"item.application_id\"\r\n            :id=\"item.application_id\"\r\n            :title=\"item.title\"\r\n            :estimate=\"item.estimate\"\r\n            :status=\"item.status\"\r\n            :actual=\"item.actual\"\r\n            toName=\"implementApplicationDetail\">\r\n          </card>\r\n        </a-col>\r\n      </a-row>\r\n      <a-row>\r\n        <total-card\r\n          :estimate=\"total.estimate\"\r\n          :actual=\"total.actual\">\r\n        </total-card>\r\n        <a-col\r\n          :xs=\"{span: 24}\"\r\n          :sm=\"{span: 20, offset: 2}\"\r\n          :xl=\"{span: 16, offset: 4}\">\r\n          <div id=\"app\">\r\n            <!--创建一个echarts的容器-->\r\n            <div id=\"echartContainer\" style=\"width: 100%; height: 400px;\"></div>\r\n          </div>\r\n        </a-col>\r\n      </a-row>\r\n    </a-card>\r\n    <a-card v-else>\r\n      <a-skeleton active/>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Card from '../../decision/components/Card'\r\nimport TotalCard from '../../decision/components/TotalCard'\r\nimport api from '../../../api/implement'\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'Application',\r\n  components: {\r\n    Card,\r\n    TotalCard\r\n  },\r\n  data () {\r\n    return {\r\n      applicationList: [],\r\n      option1: {\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: ['预算', '实际', '节约'],\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 20\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          label: {\r\n            textStyle: {\r\n              fontSize: 50\r\n            }\r\n          },\r\n          name: '总计',\r\n          type: 'bar',\r\n          barWidth: 50,\r\n          data: [0, 0, 0],\r\n          itemStyle: {\r\n            normal: {\r\n              //每根柱子颜色设置\r\n              color: function (params) {\r\n                let colorList = [\r\n                  '#32CD32',\r\n                  '#FF0000',\r\n                  '#FFD700'\r\n                ]\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      chart: null\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.getData()\r\n  },\r\n  mounted () {\r\n\r\n  },\r\n  methods: {\r\n    getData () {\r\n      api.getApplicationList(this.$store.getters.projectSelected.id)\r\n        .then(data => {\r\n          console.log(data)\r\n          this.applicationList = data\r\n          this.change()\r\n        })\r\n    },\r\n    change () {\r\n      var arr = []\r\n\r\n      this.chart = echarts.init(document.getElementById('echartContainer'))\r\n      arr.push(this.total.estimate)\r\n      arr.push(this.total.actual)\r\n      arr.push(this.total.estimate - this.total.actual)\r\n      console.log(this.total)\r\n      console.log(arr)\r\n      this.chart.setOption({\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: ['预算', '实际', '节约'],\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 20\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          label: {\r\n            textStyle: {\r\n              fontSize: 50\r\n            }\r\n          },\r\n          name: '总计',\r\n          type: 'bar',\r\n          barWidth: 50,\r\n          data: arr,\r\n          itemStyle: {\r\n            normal: {\r\n              //每根柱子颜色设置\r\n              color: function (params) {\r\n                let colorList = [\r\n                  '#32CD32',\r\n                  '#FF0000',\r\n                  '#FFD700'\r\n                ]\r\n                return colorList[params.dataIndex]\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }, true)\r\n      window.onresize = this.chart.resize\r\n    }\r\n  },\r\n  computed: {\r\n    total () {\r\n      let ret = {\r\n        estimate: '0',\r\n        actual: '0'\r\n      }\r\n      if (this.applicationList.length >0) {\r\n        ret = {\r\n          estimate: this.applicationList.map((item) => {\r\n            return parseFloat(item.estimate)\r\n          }).reduce((x, y) => {\r\n            return x + y\r\n          }).toFixed(2),\r\n          actual: this.applicationList.map((item) => {\r\n            let actual = item.actual\r\n            if (actual) {\r\n              return parseFloat(actual)\r\n            } else {\r\n              return 0\r\n            }\r\n          }).reduce((x, y) => {\r\n            return x + y\r\n          }).toFixed(2)\r\n        }\r\n      }\r\n      return ret\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}