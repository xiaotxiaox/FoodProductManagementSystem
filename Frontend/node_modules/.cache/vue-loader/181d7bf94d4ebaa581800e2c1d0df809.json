{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\setting\\userPermissions\\components\\updatePswModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\setting\\userPermissions\\components\\updatePswModal.vue","mtime":1568979339149},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n import api from '../../../../api/setting'\n import AFormItem from 'ant-design-vue/es/form/FormItem'\nexport default {\n  name: 'updatePswModal',\n  components: { AFormItem },\n  props: {\n    record: Object,\n    visible: Boolean,\n    type: String,\n    id: Number\n  },\n  data () {\n    return {\n      layout: {\n        'label-col': { span: 8 },\n        'wrapper-col': { span: 12 }\n      },\n      form: this.$form.createForm(this),\n      users: {},\n    }\n  },\n  mounted () {\n    this.getData()\n  },\n  methods: {\n    getData () {\n      if (this.isUpdatePsw) {\n        api.getSettingUsersMatter(this.record.id)\n          .then(data => {\n            this.users = data\n          })\n      }\n    },\n    handleOk () {\n      this.form.validateFields((error, data) => {\n        if (!error) {\n          api.udPswSettingUsersMatter(this.record.id, data)\n            .then(data => {\n              this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\n              this.$emit('close')\n            })\n        }\n      })\n    },\n    handleCancel () {\n      this.$emit('close')\n    },\n    validatePassword (rule, value, callback) {\n      if (/[\\u4e00-\\u9fa5]/.test(value)) {\n        callback('id can not contain chinese')\n      } else {\n        callback()\n      }\n    },\n    validateSortPsw (rule, value, callback) {\n      if (/[\\u4e00-\\u9fa5]/.test(value)) {\n        callback('id can not contain chinese')\n      } else {\n        callback()\n      }\n    },\n\n\n\n  },\n  computed: {\n    isUpdatePsw () {\n      return this.type === 'update'\n    },\n    title(){\n      return '编辑'\n    }\n  }\n}\n",{"version":3,"sources":["updatePswModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"updatePswModal.vue","sourceRoot":"src/views/setting/userPermissions/components","sourcesContent":["<template>\r\n    <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleOk()\"\r\n    @cancel=\"handleCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"用户名\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'username',\r\n            {\r\n              rules:[\r\n                { required: true, message: '请输入用户名' },\r\n                { max:128, message: '长度在128个汉字以内' }\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.username : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"新密码\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"password\"\r\n          v-decorator=\"[\r\n            'password',\r\n            {\r\n              rules: [\r\n                { required: true, message: '请输入新密码' },\r\n                { max:128, message: '长度在128个汉字以内' },\r\n                {validator:validatePassword , message: '密码格式不正确'},\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.password : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"新密码确认\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          v-decorator=\"[\r\n            'retry_password',\r\n            {\r\n              rules: [\r\n                { max:128, message: '长度在128个汉字以内' },\r\n                {validator:validateSortPsw , message: '密码再次输入不正确'},\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.retry_password : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n   import api from '../../../../api/setting'\r\n   import AFormItem from 'ant-design-vue/es/form/FormItem'\r\n  export default {\r\n    name: 'updatePswModal',\r\n    components: { AFormItem },\r\n    props: {\r\n      record: Object,\r\n      visible: Boolean,\r\n      type: String,\r\n      id: Number\r\n    },\r\n    data () {\r\n      return {\r\n        layout: {\r\n          'label-col': { span: 8 },\r\n          'wrapper-col': { span: 12 }\r\n        },\r\n        form: this.$form.createForm(this),\r\n        users: {},\r\n      }\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData () {\r\n        if (this.isUpdatePsw) {\r\n          api.getSettingUsersMatter(this.record.id)\r\n            .then(data => {\r\n              this.users = data\r\n            })\r\n        }\r\n      },\r\n      handleOk () {\r\n        this.form.validateFields((error, data) => {\r\n          if (!error) {\r\n            api.udPswSettingUsersMatter(this.record.id, data)\r\n              .then(data => {\r\n                this.$notification.success({ message: '成功', description: '更新成功', key: 'SUCCESS' })\r\n                this.$emit('close')\r\n              })\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.$emit('close')\r\n      },\r\n      validatePassword (rule, value, callback) {\r\n        if (/[\\u4e00-\\u9fa5]/.test(value)) {\r\n          callback('id can not contain chinese')\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      validateSortPsw (rule, value, callback) {\r\n        if (/[\\u4e00-\\u9fa5]/.test(value)) {\r\n          callback('id can not contain chinese')\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n\r\n\r\n\r\n    },\r\n    computed: {\r\n      isUpdatePsw () {\r\n        return this.type === 'update'\r\n      },\r\n      title(){\r\n        return '编辑'\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}