{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Overlay.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\Overlay.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-overlay',\n  mixins: [commonMixin('overlay')],\n  props: {\n    pane: {\n      type: String\n    }\n  },\n  watch: {\n    pane () {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, $el, pane} = this\n      const $emit = this.$emit.bind(this)\n      class CustomOverlay extends BMap.Overlay {\n        initialize () {\n          $emit('initialize', {\n            BMap,\n            map,\n            el: $el,\n            overlay: this\n          })\n          try {\n            map.getPanes()[pane].appendChild($el)\n          } catch (e) {}\n          return $el\n        }\n        draw () {\n          $emit('draw', {\n            BMap,\n            map,\n            el: $el,\n            overlay: this\n          })\n        }\n      }\n      const overlay = new CustomOverlay()\n      this.originInstance = overlay\n      map.addOverlay(overlay)\n    }\n  }\n}\n",{"version":3,"sources":["Overlay.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Overlay.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<template>\n<div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-overlay',\n  mixins: [commonMixin('overlay')],\n  props: {\n    pane: {\n      type: String\n    }\n  },\n  watch: {\n    pane () {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, $el, pane} = this\n      const $emit = this.$emit.bind(this)\n      class CustomOverlay extends BMap.Overlay {\n        initialize () {\n          $emit('initialize', {\n            BMap,\n            map,\n            el: $el,\n            overlay: this\n          })\n          try {\n            map.getPanes()[pane].appendChild($el)\n          } catch (e) {}\n          return $el\n        }\n        draw () {\n          $emit('draw', {\n            BMap,\n            map,\n            el: $el,\n            overlay: this\n          })\n        }\n      }\n      const overlay = new CustomOverlay()\n      this.originInstance = overlay\n      map.addOverlay(overlay)\n    }\n  }\n}\n</script>\n"]}]}