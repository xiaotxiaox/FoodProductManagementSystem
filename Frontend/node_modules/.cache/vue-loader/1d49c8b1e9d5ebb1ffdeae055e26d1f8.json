{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\design\\PaymentDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\design\\PaymentDetail.vue","mtime":1571492562003},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst columns = [\n  {\n    title: '支付时间',\n    dataIndex: 'time',\n    width: '35%',\n    align: 'center'\n  },\n  {\n    title: '本次实付',\n    dataIndex: 'money',\n    width: '35%',\n    align: 'center'\n  },\n  {\n    title: '编辑',\n    dataIndex: 'operation',\n    scopedSlots: { customRender: 'operation' },\n    align: 'center'\n  }\n]\n import PayDetailModal from './components/payDetailModal'\nimport api from '../../../api/implement'\nexport default {\n  name: 'PaymentDetail',\n  components: {\n    PayDetailModal\n  },\n  props: {\n    id: Number\n  },\n  data () {\n    return {\n      layout: {\n        'label-col': { span: 6 },\n        'wrapper-col': { span: 18 }\n      },\n      status:{\n        loading:true\n      },\n      form: this.$form.createForm(this),\n      details:{},\n      modal: {\n        record: null,\n        visible: false,\n        type: '1',\n        detail_id: this.id\n      },\n      columns,\n      detailList: []\n    }\n  },\n  mounted () {\n    this.getData()\n  },\n  methods: {\n    getData () {\n      this.status.loading=true\n      this.modal.detail_id= this.id\n      api.getDesignPayDetailMatter(this.id)\n        .then(data => {\n          console.log(data)\n          this.detailList = data.child\n          this.status.loading=false\n        })\n    },\n    handleClose () {\n      this.modal.type = ''\n      this.modal.record = null\n      this.modal.visible = false\n      this.getData()\n    },\n    handleCreate () {\n      this.modal.type = 'create'\n      this.modal.record = null\n      this.modal.visible = true\n    },\n    handleEdit (record) {\n      this.modal.type = 'edit'\n      this.modal.record = record\n      this.modal.visible = true\n    },\n    handleDelete (record) {\n      api.deleteDesignPayDetail(record.id)\n        .then(data => {\n          this.$notification.success({ message: '成功', description: '删除成功', key: 'SUCCESS' })\n          this.getData()\n        })\n    },\n    getName(record) {\n     let name=record.name\n      if (name) {\n        return `name`\n      } else {\n        return ''\n      }\n    },\n    parseFloat (f) {\n      return parseFloat(f)\n    }\n  }\n}\n",{"version":3,"sources":["PaymentDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PaymentDetail.vue","sourceRoot":"src/views/implement/design","sourcesContent":["<template>\r\n    <div>\r\n      <pay-detail-modal\r\n      :record=\"modal.record\"\r\n      :visible=\"modal.visible\"\r\n      :type=\"modal.type\"\r\n      :detail_id=\"modal.detail_id\"\r\n      v-if=\"modal.visible\"\r\n      @close=\"handleClose()\">\r\n      </pay-detail-modal>\r\n        <a-card style=\"margin-bottom: 16px\">\r\n      <a-row class=\"item\">\r\n        <a-col\r\n          :xs=\"{span: 24}\"\r\n          :sm=\"{span: 12}\"\r\n          :xl=\"{span: 20}\">\r\n          <span style=\"font-size: 20px; margin-left: 4px\">{{details.title}}</span>\r\n        </a-col>\r\n        <a-col\r\n          :xs=\"{ span: 24 }\"\r\n          :sm=\"{ span: 12, offset: 12 }\"\r\n          :xl=\"{ span: 8, offset: 16 }\">\r\n          <a-button\r\n            type=\"primary\"\r\n            icon=\"plus\"\r\n            style=\"float: right; \"\r\n            @click=\"handleCreate()\">\r\n            新建\r\n          </a-button>\r\n           <a-button\r\n            style=\"float: right; margin-right: 5px;\"\r\n            @click=\"$router.go(-1)\">\r\n            返回\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n      <a-table\r\n        bordered\r\n        :columns=\"columns\"\r\n        :dataSource=\"detailList\"\r\n        rowKey=\"id\"\r\n        :pagination=\"false\">\r\n        <template slot=\"getName\" slot-scope=\"text, record, index\">\r\n          {{getName(record)}}\r\n        </template>\r\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n          <a-button @click=\"handleEdit(record)\">编辑</a-button>\r\n          <a-popconfirm\r\n            title=\"确认删除吗?\"\r\n            @confirm=\"handleDelete(record)\">\r\n            <a-button type=\"danger\">删除</a-button>\r\n          </a-popconfirm>\r\n        </template>\r\n      </a-table>\r\n    </a-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  const columns = [\r\n    {\r\n      title: '支付时间',\r\n      dataIndex: 'time',\r\n      width: '35%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '本次实付',\r\n      dataIndex: 'money',\r\n      width: '35%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: { customRender: 'operation' },\r\n      align: 'center'\r\n    }\r\n  ]\r\n   import PayDetailModal from './components/payDetailModal'\r\n  import api from '../../../api/implement'\r\n  export default {\r\n    name: 'PaymentDetail',\r\n    components: {\r\n      PayDetailModal\r\n    },\r\n    props: {\r\n      id: Number\r\n    },\r\n    data () {\r\n      return {\r\n        layout: {\r\n          'label-col': { span: 6 },\r\n          'wrapper-col': { span: 18 }\r\n        },\r\n        status:{\r\n          loading:true\r\n        },\r\n        form: this.$form.createForm(this),\r\n        details:{},\r\n        modal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          detail_id: this.id\r\n        },\r\n        columns,\r\n        detailList: []\r\n      }\r\n    },\r\n    mounted () {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      getData () {\r\n        this.status.loading=true\r\n        this.modal.detail_id= this.id\r\n        api.getDesignPayDetailMatter(this.id)\r\n          .then(data => {\r\n            console.log(data)\r\n            this.detailList = data.child\r\n            this.status.loading=false\r\n          })\r\n      },\r\n      handleClose () {\r\n        this.modal.type = ''\r\n        this.modal.record = null\r\n        this.modal.visible = false\r\n        this.getData()\r\n      },\r\n      handleCreate () {\r\n        this.modal.type = 'create'\r\n        this.modal.record = null\r\n        this.modal.visible = true\r\n      },\r\n      handleEdit (record) {\r\n        this.modal.type = 'edit'\r\n        this.modal.record = record\r\n        this.modal.visible = true\r\n      },\r\n      handleDelete (record) {\r\n        api.deleteDesignPayDetail(record.id)\r\n          .then(data => {\r\n            this.$notification.success({ message: '成功', description: '删除成功', key: 'SUCCESS' })\r\n            this.getData()\r\n          })\r\n      },\r\n      getName(record) {\r\n       let name=record.name\r\n        if (name) {\r\n          return `name`\r\n        } else {\r\n          return ''\r\n        }\r\n      },\r\n      parseFloat (f) {\r\n        return parseFloat(f)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}