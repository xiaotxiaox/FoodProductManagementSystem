{"remainingRequest":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\application\\components\\ApplicationModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\src\\views\\implement\\application\\components\\ApplicationModal.vue","mtime":1557281848185},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\FoodProductManageSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '../../../../api/implement'\n\nexport default {\n  name: 'ContactModal',\n  props: {\n    record: Object,\n    visible: Boolean,\n    type: String\n  },\n  data () {\n    return {\n      form: this.$form.createForm(this)\n    }\n  },\n  methods: {\n    handleOk () {\n      this.form.validateFields((error, data) => {\n        if (!error) {\n          if (this.isEdit) {\n            api.updateApplication(this.record.application_id, data)\n              .then(data => {\n                this.$emit('close')\n                this.$notification.success({message: '成功', description: '更新成功', key: 'SUCCESS'})\n              })\n          } else {\n            api.createApplication(this.$store.getters.projectSelected.id, data)\n              .then(data => {\n                this.$emit('close')\n                this.$notification.success({message: '成功', description: '新建成功', key: 'SUCCESS'})\n              })\n          }\n        }\n      })\n    },\n    handleCancel () {\n      this.$emit('close')\n    }\n  },\n  computed: {\n    isEdit () {\n      return this.type === 'edit'\n    },\n    title () {\n      return this.isEdit ? '编辑' : '新建'\n    }\n  }\n}\n",{"version":3,"sources":["ApplicationModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ApplicationModal.vue","sourceRoot":"src/views/implement/application/components","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleOk()\"\r\n    @cancel=\"handleCancel()\">\r\n    <a-form :form=\"form\">\r\n      <a-form-item\r\n        v-if=\"isEdit\"\r\n        label=\"id\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12,offset:2}\">\r\n        {{record.application_id}}\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"名称\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12,offset:2}\">\r\n        <a-input\r\n          @keypress.enter=\"handleOk\"\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'title',\r\n            {\r\n              rules:\r\n                [\r\n                  {required: true, message: '请输入名称'},\r\n                  {max:128, message:'长度在128个汉字以内'}\r\n                ],\r\n              validateTrigger: 'blur',\r\n              initialValue: isEdit ? record.title : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import api from '../../../../api/implement'\r\n\r\n  export default {\r\n    name: 'ContactModal',\r\n    props: {\r\n      record: Object,\r\n      visible: Boolean,\r\n      type: String\r\n    },\r\n    data () {\r\n      return {\r\n        form: this.$form.createForm(this)\r\n      }\r\n    },\r\n    methods: {\r\n      handleOk () {\r\n        this.form.validateFields((error, data) => {\r\n          if (!error) {\r\n            if (this.isEdit) {\r\n              api.updateApplication(this.record.application_id, data)\r\n                .then(data => {\r\n                  this.$emit('close')\r\n                  this.$notification.success({message: '成功', description: '更新成功', key: 'SUCCESS'})\r\n                })\r\n            } else {\r\n              api.createApplication(this.$store.getters.projectSelected.id, data)\r\n                .then(data => {\r\n                  this.$emit('close')\r\n                  this.$notification.success({message: '成功', description: '新建成功', key: 'SUCCESS'})\r\n                })\r\n            }\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.$emit('close')\r\n      }\r\n    },\r\n    computed: {\r\n      isEdit () {\r\n        return this.type === 'edit'\r\n      },\r\n      title () {\r\n        return this.isEdit ? '编辑' : '新建'\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>"]}]}