{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\PointCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\overlays\\PointCollection.vue","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint} from '../base/factory.js'\n\nexport default {\n  render () {},\n  name: 'bm-point-collection',\n  mixins: [commonMixin('overlay')],\n  props: {\n    points: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    shape: {\n      type: String,\n      default: 'BMAP_POINT_SHAPE_CIRCLE'\n    },\n    color: {\n      type: String\n    },\n    size: {\n      type: String,\n      default: 'BMAP_POINT_SIZE_NORMAL'\n    }\n  },\n  watch: {\n    shape (val) {\n      const {originInstance, color, size} = this\n      originInstance.setStyles({\n        shape: global[val],\n        color,\n        size: global[size]\n      })\n    },\n    size (val) {\n      const {originInstance, color, shape} = this\n      originInstance.setStyles({\n        shape: global[shape],\n        color,\n        size: global[val]\n      })\n    },\n    color (val) {\n      const {originInstance, shape, size} = this\n      originInstance.setStyles({\n        shape: global[shape],\n        color: val,\n        size: global[size]\n      })\n    },\n    points: {\n      deep: true,\n      handler (val) {\n        const {originInstance} = this\n        originInstance.clear()\n        originInstance.setPoints(val)\n      }\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, points, shape, color, size} = this\n      const overlay = this.originInstance = new BMap.PointCollection(points.map(p => createPoint(BMap, p)), {\n        shape: global[shape],\n        color,\n        size: global[size]\n      })\n      bindEvents.call(this, overlay)\n      map.addOverlay(overlay)\n    }\n  }\n}\n",{"version":3,"sources":["PointCollection.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PointCollection.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint} from '../base/factory.js'\n\nexport default {\n  render () {},\n  name: 'bm-point-collection',\n  mixins: [commonMixin('overlay')],\n  props: {\n    points: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    shape: {\n      type: String,\n      default: 'BMAP_POINT_SHAPE_CIRCLE'\n    },\n    color: {\n      type: String\n    },\n    size: {\n      type: String,\n      default: 'BMAP_POINT_SIZE_NORMAL'\n    }\n  },\n  watch: {\n    shape (val) {\n      const {originInstance, color, size} = this\n      originInstance.setStyles({\n        shape: global[val],\n        color,\n        size: global[size]\n      })\n    },\n    size (val) {\n      const {originInstance, color, shape} = this\n      originInstance.setStyles({\n        shape: global[shape],\n        color,\n        size: global[val]\n      })\n    },\n    color (val) {\n      const {originInstance, shape, size} = this\n      originInstance.setStyles({\n        shape: global[shape],\n        color: val,\n        size: global[size]\n      })\n    },\n    points: {\n      deep: true,\n      handler (val) {\n        const {originInstance} = this\n        originInstance.clear()\n        originInstance.setPoints(val)\n      }\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, points, shape, color, size} = this\n      const overlay = this.originInstance = new BMap.PointCollection(points.map(p => createPoint(BMap, p)), {\n        shape: global[shape],\n        color,\n        size: global[size]\n      })\n      bindEvents.call(this, overlay)\n      map.addOverlay(overlay)\n    }\n  }\n}\n</script>\n"]}]}