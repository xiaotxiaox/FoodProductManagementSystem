{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\Gantt.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\Gantt.vue","mtime":1570526383574},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport 'dhtmlx-gantt'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/locale/locale_cn.js'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/dhtmlxgantt.css'\r\nimport api from '../../../../api/implement'\r\nimport { mapGetters } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nvar colHeader = '<div class =\"gantt_grid_head_cell gantt_grid_head_add\" onclick =\"gantt.createTask()\"> </div>'\r\nvar colContent = function (task) {\r\n  return ('<button type=\"button\" class=\"ant-btn ant-btn-default\"   onclick=\"gantt.showLightbox(' + task.id + ')\">编辑</button>')\r\n}\r\n\r\nvar opts = [\r\n  { key: '1', label: '关键' },\r\n  { key: '2', label: '一般' },\r\n]\r\nexport default {\r\n  name: 'gantt',\r\n  props: {\r\n    project_id: String,\r\n    tasks: Object\r\n  },\r\n  data () {\r\n    return {\r\n      infor: Object,\r\n      initialGantt: Object,\r\n\r\n\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    getData () {\r\n      console.log(this.project_id)\r\n      var temp_id = this.project_id\r\n      console.log(temp_id)\r\n      api.getInitialChart(this.project_id)\r\n        .then(data => {\r\n          this.initialGantt = data[0]\r\n          var num = parseInt(data[0].interval)\r\n          var sDate = data[0].start_date.split('-')\r\n          var start = new Date(sDate[0], sDate[1], sDate[2])\r\n          var oDate = data[0].end_date.split('-')\r\n          var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n          var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n          gantt.config.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n          gantt.templates.task_text = function (s, e, task) {\r\n            return task.name\r\n          }\r\n          gantt.config.scales = [\r\n            {\r\n              unit: 'day', step: iDays, format: function (date) {\r\n                var sDate = data[0].start_date.split('-')\r\n                var sDate1 = new Date(sDate[0], sDate[1], sDate[2])\r\n                var eDate = data[0].end_date.split('-')\r\n                var eDate1 = new Date(eDate[0], eDate[1], eDate[2])\r\n                var max = parseInt(Math.abs(eDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var rDate = dateToStr(date).split('-')\r\n                var rDate1 = new Date(rDate[0], rDate[1], rDate[2])\r\n                var result = parseInt((rDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                if (result <= max) {\r\n                  return data[0].start_date + '到' + data[0].end_date\r\n                } else {\r\n                  return '超过预期'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              unit: 'day', step: num, format: function (date) {\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var aDate = dateToStr(date).split('-')\r\n                var oDate1 = new Date(aDate[0], aDate[1], aDate[2])\r\n                var sDate = data[0].start_date.split('-')\r\n                var start = new Date(sDate[0], sDate[1], sDate[2])\r\n                var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n                return iDays\r\n              }\r\n            }\r\n          ]\r\n          //设置图标区域的日期坐标最大值\r\n          gantt.config.drag_resize = false\r\n          gantt.config.drag_move = false\r\n          gantt.config.drag_lightbox = true\r\n          gantt.config.drag_links = false\r\n          gantt.config.show_progress = false\r\n          gantt.config.autofit = true\r\n          //设置图标区域间隔\r\n          gantt.config.columns = [\r\n            { id: 1, name: 'chart_id', label: '编号', width: 50, align: 'center' },\r\n            { id: 2, name: 'name', label: '名称', width: 75, align: 'center' },\r\n            { id: 3, name: 'start_date', label: '开始时间', width: 86, align: 'center', format: '%YY-%mm-%dd' },\r\n            { id: 4, name: 'end_date', label: '截止时间', width: 86, align: 'center' },\r\n            { id: 5, name: 'status', label: '状态', width: 32, align: 'center' },\r\n            {\r\n              name: 'buttons',\r\n              label: colHeader,\r\n              width: 95,\r\n              template: colContent\r\n            }\r\n          ]\r\n\r\n          gantt.init(this.$refs.gantt)\r\n          gantt.parse(this.$props.tasks)\r\n          //为弹窗按钮添加函数\r\n          //删除delete\r\n          gantt.attachEvent('onLightboxDelete', function (id) {\r\n            var task = gantt.getTask(id)\r\n            console.log(gantt.getTask(id))\r\n            api.deleteProgress(task.chart_id)\r\n              .then(data => {\r\n                gantt.hideLightbox()\r\n              })\r\n            return false\r\n          })\r\n          //取消cancle\r\n          gantt.attachEvent('onLightboxCancle', function (id) {\r\n            gantt.hideLightbox()\r\n            return false\r\n          })\r\n          //保存save\r\n\r\n          gantt.attachEvent('onLightboxSave', function (id, task, is_new) {\r\n            console.log(\"2222222222222222\")\r\n            var temp = {}\r\n            var dateToStr2 = gantt.date.date_to_str('%Y-%m-%d')\r\n            temp.name = task.name\r\n            temp.start_date = dateToStr2(task.start_date)\r\n            temp.end_date = dateToStr2(task.end_date)\r\n            temp.state = task.state\r\n            temp.status = task.status\r\n            this.infor = temp\r\n            if (is_new) {\r\n              api.createProgress(temp_id, this.infor)\r\n                .then(data => {\r\n                  gantt.hideLightbox()\r\n\r\n                })\r\n              console.log(\"23123213123123123\")\r\n            }\r\n            else {\r\n              api.updateProgress(task.chart_id, this.infor)\r\n                .then(data => {\r\n                  gantt.updateTask(task.id)\r\n                  gantt.hideLightbox()\r\n                })\r\n            }\r\n            return false\r\n          })\r\n          //自定义弹窗\r\n          // gantt.locale.labels.section_chart_id = '编号'\r\n          gantt.locale.labels.section_name = '名称'\r\n          gantt.locale.labels.section_sta = '状态'\r\n          gantt.config.lightbox.sections = [\r\n            // { name: 'chart_id', height: 28, map_to: 'chart_id', type: 'textarea', focus: true },\r\n            { name: 'name', height: 28, map_to: 'name', type: 'textarea', focus: true, default_value: '新任务' },\r\n            {\r\n              name: 'time',\r\n              height: 35,\r\n              map_to: { start_date: 'start_date', end_date: 'end_date' },\r\n              type: 'time',\r\n              year_range: [1950, 2100]\r\n            },\r\n            { name: 'sta', height: 28, map_to: 'state', type: 'select', options: opts }\r\n          ]\r\n          gantt.templates.lightbox_header = function (start_date, end_date, task) {\r\n            return (gantt.templates.task_text(task.start_date, task.end_date, task) || '').substr(0, 70)\r\n          }\r\n\r\n        })\r\n    },\r\n    change () {\r\n      api.getProgressList(this.project_id)\r\n        .then(data => {\r\n          this.tasks.data = data\r\n          for (var temp of this.tasks.data) {\r\n            var sDate = temp.start_date.split('-')\r\n            temp.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n            var eDate = temp.end_date.split('-')\r\n            temp.end_date = new Date(eDate[0], eDate[1] - 1, eDate[2])\r\n            temp.chart_id = '' + temp.chart_id + ''\r\n            if (temp.state == 1) {\r\n              temp.color = 'red'\r\n              temp.status = '关键'\r\n            } else {\r\n              temp.color = 'blue'\r\n              temp.status = '一般'\r\n            }\r\n          }\r\n        })\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["Gantt.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gantt.vue","sourceRoot":"src/views/implement/progress/components","sourcesContent":["<template>\r\n  <div ref=\"gantt\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'dhtmlx-gantt'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/locale/locale_cn.js'\r\nimport '../../../../../node_modules/dhtmlx-gantt/codebase/dhtmlxgantt.css'\r\nimport api from '../../../../api/implement'\r\nimport { mapGetters } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nvar colHeader = '<div class =\"gantt_grid_head_cell gantt_grid_head_add\" onclick =\"gantt.createTask()\"> </div>'\r\nvar colContent = function (task) {\r\n  return ('<button type=\"button\" class=\"ant-btn ant-btn-default\"   onclick=\"gantt.showLightbox(' + task.id + ')\">编辑</button>')\r\n}\r\n\r\nvar opts = [\r\n  { key: '1', label: '关键' },\r\n  { key: '2', label: '一般' },\r\n]\r\nexport default {\r\n  name: 'gantt',\r\n  props: {\r\n    project_id: String,\r\n    tasks: Object\r\n  },\r\n  data () {\r\n    return {\r\n      infor: Object,\r\n      initialGantt: Object,\r\n\r\n\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    ...mapGetters(['projectSelected']),\r\n    getData () {\r\n      console.log(this.project_id)\r\n      var temp_id = this.project_id\r\n      console.log(temp_id)\r\n      api.getInitialChart(this.project_id)\r\n        .then(data => {\r\n          this.initialGantt = data[0]\r\n          var num = parseInt(data[0].interval)\r\n          var sDate = data[0].start_date.split('-')\r\n          var start = new Date(sDate[0], sDate[1], sDate[2])\r\n          var oDate = data[0].end_date.split('-')\r\n          var oDate1 = new Date(oDate[0], oDate[1], oDate[2])\r\n          var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n          gantt.config.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n          gantt.templates.task_text = function (s, e, task) {\r\n            return task.name\r\n          }\r\n          gantt.config.scales = [\r\n            {\r\n              unit: 'day', step: iDays, format: function (date) {\r\n                var sDate = data[0].start_date.split('-')\r\n                var sDate1 = new Date(sDate[0], sDate[1], sDate[2])\r\n                var eDate = data[0].end_date.split('-')\r\n                var eDate1 = new Date(eDate[0], eDate[1], eDate[2])\r\n                var max = parseInt(Math.abs(eDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var rDate = dateToStr(date).split('-')\r\n                var rDate1 = new Date(rDate[0], rDate[1], rDate[2])\r\n                var result = parseInt((rDate1 - sDate1) / 1000 / 60 / 60 / 24)\r\n                if (result <= max) {\r\n                  return data[0].start_date + '到' + data[0].end_date\r\n                } else {\r\n                  return '超过预期'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              unit: 'day', step: num, format: function (date) {\r\n                var dateToStr = gantt.date.date_to_str('%Y-%m-%d')\r\n                var aDate = dateToStr(date).split('-')\r\n                var oDate1 = new Date(aDate[0], aDate[1], aDate[2])\r\n                var sDate = data[0].start_date.split('-')\r\n                var start = new Date(sDate[0], sDate[1], sDate[2])\r\n                var iDays = parseInt(Math.abs(oDate1 - start) / 1000 / 60 / 60 / 24)\r\n                return iDays\r\n              }\r\n            }\r\n          ]\r\n          //设置图标区域的日期坐标最大值\r\n          gantt.config.drag_resize = false\r\n          gantt.config.drag_move = false\r\n          gantt.config.drag_lightbox = true\r\n          gantt.config.drag_links = false\r\n          gantt.config.show_progress = false\r\n          gantt.config.autofit = true\r\n          //设置图标区域间隔\r\n          gantt.config.columns = [\r\n            { id: 1, name: 'chart_id', label: '编号', width: 50, align: 'center' },\r\n            { id: 2, name: 'name', label: '名称', width: 75, align: 'center' },\r\n            { id: 3, name: 'start_date', label: '开始时间', width: 86, align: 'center', format: '%YY-%mm-%dd' },\r\n            { id: 4, name: 'end_date', label: '截止时间', width: 86, align: 'center' },\r\n            { id: 5, name: 'status', label: '状态', width: 32, align: 'center' },\r\n            {\r\n              name: 'buttons',\r\n              label: colHeader,\r\n              width: 95,\r\n              template: colContent\r\n            }\r\n          ]\r\n\r\n          gantt.init(this.$refs.gantt)\r\n          gantt.parse(this.$props.tasks)\r\n          //为弹窗按钮添加函数\r\n          //删除delete\r\n          gantt.attachEvent('onLightboxDelete', function (id) {\r\n            var task = gantt.getTask(id)\r\n            console.log(gantt.getTask(id))\r\n            api.deleteProgress(task.chart_id)\r\n              .then(data => {\r\n                gantt.hideLightbox()\r\n              })\r\n            return false\r\n          })\r\n          //取消cancle\r\n          gantt.attachEvent('onLightboxCancle', function (id) {\r\n            gantt.hideLightbox()\r\n            return false\r\n          })\r\n          //保存save\r\n\r\n          gantt.attachEvent('onLightboxSave', function (id, task, is_new) {\r\n            console.log(\"2222222222222222\")\r\n            var temp = {}\r\n            var dateToStr2 = gantt.date.date_to_str('%Y-%m-%d')\r\n            temp.name = task.name\r\n            temp.start_date = dateToStr2(task.start_date)\r\n            temp.end_date = dateToStr2(task.end_date)\r\n            temp.state = task.state\r\n            temp.status = task.status\r\n            this.infor = temp\r\n            if (is_new) {\r\n              api.createProgress(temp_id, this.infor)\r\n                .then(data => {\r\n                  gantt.hideLightbox()\r\n\r\n                })\r\n              console.log(\"23123213123123123\")\r\n            }\r\n            else {\r\n              api.updateProgress(task.chart_id, this.infor)\r\n                .then(data => {\r\n                  gantt.updateTask(task.id)\r\n                  gantt.hideLightbox()\r\n                })\r\n            }\r\n            return false\r\n          })\r\n          //自定义弹窗\r\n          // gantt.locale.labels.section_chart_id = '编号'\r\n          gantt.locale.labels.section_name = '名称'\r\n          gantt.locale.labels.section_sta = '状态'\r\n          gantt.config.lightbox.sections = [\r\n            // { name: 'chart_id', height: 28, map_to: 'chart_id', type: 'textarea', focus: true },\r\n            { name: 'name', height: 28, map_to: 'name', type: 'textarea', focus: true, default_value: '新任务' },\r\n            {\r\n              name: 'time',\r\n              height: 35,\r\n              map_to: { start_date: 'start_date', end_date: 'end_date' },\r\n              type: 'time',\r\n              year_range: [1950, 2100]\r\n            },\r\n            { name: 'sta', height: 28, map_to: 'state', type: 'select', options: opts }\r\n          ]\r\n          gantt.templates.lightbox_header = function (start_date, end_date, task) {\r\n            return (gantt.templates.task_text(task.start_date, task.end_date, task) || '').substr(0, 70)\r\n          }\r\n\r\n        })\r\n    },\r\n    change () {\r\n      api.getProgressList(this.project_id)\r\n        .then(data => {\r\n          this.tasks.data = data\r\n          for (var temp of this.tasks.data) {\r\n            var sDate = temp.start_date.split('-')\r\n            temp.start_date = new Date(sDate[0], sDate[1] - 1, sDate[2])\r\n            var eDate = temp.end_date.split('-')\r\n            temp.end_date = new Date(eDate[0], eDate[1] - 1, eDate[2])\r\n            temp.chart_id = '' + temp.chart_id + ''\r\n            if (temp.state == 1) {\r\n              temp.color = 'red'\r\n              temp.status = '关键'\r\n            } else {\r\n              temp.color = 'blue'\r\n              temp.status = '一般'\r\n            }\r\n          }\r\n        })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .gantt_cal_light_wide.gantt_cal_light_full {\r\n    width: 550px;\r\n  }\r\n</style>"]}]}