{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\quality\\Quality.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\src\\views\\implement\\quality\\Quality.vue","mtime":1572918078633},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport QualityModal from './components/QualityModal'\nimport EmphasisModal from './components/EmphasisModal'\nimport apiProject from '../../../api/project'\nimport TableModal from './components/TableModal'\nimport api from '../../../api/implement'\nimport {mapGetters} from 'vuex'\n\nconst columns1 = [\n  {\n    title: '建筑名称',\n    dataIndex: 'name',\n    width: '20%',\n    align: 'center'\n  },\n  {\n    title: '奖项',\n    dataIndex: 'awards',\n    customRender: (text, record) => {\n      if (record.awards === '1')\n        return '市级'\n      else if (record.awards === '2')\n        return '省级'\n      else if (record.awards === '3')\n        return '国级'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '基础',\n    dataIndex: 'base',\n    customRender: (text, record) => {\n      if (record.base === '1')\n        return '合格'\n      else if (record.base === '2')\n        return '不合格'\n      else if (record.base === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '主体',\n    dataIndex: 'mainBody',\n    customRender: (text, record) => {\n      if (record.mainBody === '1')\n        return '合格'\n      else if (record.mainBody === '2')\n        return '不合格'\n      else if (record.mainBody === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '装饰',\n    dataIndex: 'decorate',\n    customRender: (text, record) => {\n      if (record.decorate === '1')\n        return '合格'\n      else if (record.decorate === '2')\n        return '不合格'\n      else if (record.decorate === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '屋面',\n    dataIndex: 'roofing',\n    customRender: (text, record) => {\n      if (record.roofing === '1')\n        return '合格'\n      else if (record.roofing === '2')\n        return '不合格'\n       else if (record.roofing === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '防水',\n    dataIndex: 'waterproof',\n    customRender: (text, record) => {\n      if (record.waterproof === '1')\n        return '合格'\n      else if (record.waterproof === '2')\n        return '不合格'\n      else if (record.waterproof === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '保温',\n    dataIndex: 'insulation',\n    customRender: (text, record) => {\n      if (record.insulation === '1')\n        return '合格'\n      else if (record.insulation === '2')\n        return '不合格'\n      else if (record.insulation === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '编辑',\n    dataIndex: 'operation',\n    scopedSlots: {customRender: 'operation'},\n    align: 'center'\n  }\n]\nconst columns2 = [\n  {\n    title: '建筑名称',\n    dataIndex: 'name',\n    width: '20%',\n    align: 'center'\n  },\n  {\n    title: '奖项',\n    dataIndex: 'awards',\n    customRender: (text, record) => {\n      if (record.awards === '1')\n        return '市级'\n      else if (record.awards === '2')\n        return '省级'\n      else if (record.awards === '3')\n        return '国级'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '基础',\n    dataIndex: 'base',\n    customRender: (text, record) => {\n      if (record.base === '1')\n        return '合格'\n      else if (record.base === '2')\n        return '不合格'\n      else if (record.base === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '路层',\n    dataIndex: 'choice_A',\n    customRender: (text, record) => {\n      if (record.choice_A === '1')\n        return '合格'\n      else if (record.choice_A === '2')\n        return '不合格'\n      else if (record.choice_A === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '路面',\n    dataIndex: 'choice_B',\n    customRender: (text, record) => {\n      if (record.choice_B === '1')\n        return '合格'\n      else if (record.choice_B === '2')\n        return '不合格'\n      else if (record.choice_B === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '桥涵',\n    dataIndex: 'choice_C',\n    customRender: (text, record) => {\n      if (record.choice_C === '1')\n        return '合格'\n      else if (record.choice_C === '2')\n        return '不合格'\n       else if (record.choice_C === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '路灯',\n    dataIndex: 'choice_D',\n    customRender: (text, record) => {\n      if (record.choice_D === '1')\n        return '合格'\n      else if (record.choice_D === '2')\n        return '不合格'\n      else if (record.choice_D === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '绿化',\n    dataIndex: 'choice_E',\n    customRender: (text, record) => {\n      if (record.choice_E === '1')\n        return '合格'\n      else if (record.choice_E === '2')\n        return '不合格'\n      else if (record.choice_E === '3')\n        return '严重不合格'\n    },\n    width: '10%',\n    align: 'center'\n  },\n  {\n    title: '编辑',\n    dataIndex: 'operation',\n    scopedSlots: {customRender: 'operation'},\n    align: 'center'\n  }\n]\nconst emphasisColumns = [\n  {\n    title: '重点',\n    dataIndex: 'keyPoint',\n    width: '25%',\n    align: 'center'\n  },\n  {\n    title: '难点',\n    dataIndex: 'difficulty',\n    width: '25%',\n    align: 'center'\n  },\n  {\n    title: '通病',\n    dataIndex: 'CommonFailing',\n    width: '25%',\n    align: 'center'\n  },\n  {\n    title: '编辑',\n    dataIndex: 'operation',\n    scopedSlots: {customRender: 'operation'},\n    align: 'center'\n  }\n]\nexport default {\n  name: \"Quality\",\n  components: {\n    QualityModal,\n    EmphasisModal,\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      status: {\n        listLoading: true,\n        tableLoading: true\n      },\n      project_category:null,\n      columns1,\n      columns2,\n      qualityList: [],\n      emphasisColumns,\n      emphasisList: [],\n      not_num: '',\n      reply_num: '',\n      option1: {\n        tooltip: {},\n        xAxis: {\n          data: [],\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 20\n            }\n          }\n        },\n        yAxis: {\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 14\n            },\n            formatter: function (value) {\n              var texts = [];\n              if (value == \"1\") {\n                texts.push('市级');\n              } else if (value == \"2\") {\n                texts.push('省级');\n              } else if (value == \"3\") {\n                texts.push('国级');\n              }\n              return texts;\n            }\n          }\n        },\n        series: [{\n          label: {\n            textStyle: {\n              fontSize: 50\n            }\n          },\n          name: '奖项',\n          type: 'bar',\n          barWidth: 50,\n          data: [1, 2, 3, 3],\n          itemStyle: {\n            normal: {\n              //每根柱子颜色设置\n              color: function (params) {\n                let colorList = [\n                  '#00B0F0'\n                ]\n                return colorList[params.dataIndex]\n              }\n            }\n          }\n        }]\n      },\n      chart1: null,\n      charts: '',\n      opinion: ['已回复', '未回复'],\n      opinionData: [\n        {value: 50, name: '已回复', itemStyle: {color: '#00b0f0'}},\n        {value: 50, name: '未回复', itemStyle: {color: '#7030a0'}},\n      ],\n      qualityModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        quality_id: this.id\n      },\n      emphasisModal: {\n        record: null,\n        visible: false,\n        type: '1',\n        emphasis_id: this.id\n      },\n      tableModal: {\n        record: null,\n        visible: false,\n        table_id: this.id\n      },\n      form: this.$form.createForm(this),\n      project_id: this.projectSelected().id\n    }\n  },\n  mounted() {\n    this.chart1 = echarts.init(document.getElementById('echartContainer'))\n    this.chart1.setOption(this.option1, true)\n    window.onresize = this.chart1.resize\n    this.getData()\n    this.$nextTick(function () {\n      this.drawPie('main')\n    })\n  },\n  methods: {\n    ...mapGetters(['projectSelected']),\n    getData() {\n      apiProject.getProject(this.projectSelected().id)\n        .then(data => {\n          this.project_category = data.category\n        })\n      api.getQualityList(this.project_id)\n        .then(data => {\n          console.log(data)\n          this.qualityList = data\n          this.change()\n          this.status.listLoading = false\n        })\n      api.getDifficultyList(this.project_id)\n        .then(data => {\n          this.emphasisList = data\n        })\n      api.getContractNotice(this.project_id)\n        .then(data => {\n          this.not_num = data.not_num\n          this.reply_num = data.reply_num\n          this.opinionData[0].value=this.reply_num\n          this.opinionData[1].value=this.not_num\n          this.$nextTick(function () {\n            this.drawPie('main')\n          })\n        })\n    },\n    change() {\n      var arrName = []\n      var arrProgress = []\n      for (var building of this.qualityList) {\n        console.log(this.qualityList)\n        console.log(building)\n        arrName.push(building.name)\n        arrProgress.push(building.awards)\n      }\n      // console.log(building)\n      // console.log(arrName)\n      // console.log(arrProgress)\n      this.chart1.setOption({\n        tooltip: {},\n        xAxis: {\n          data: arrName,\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 20\n            }\n          }\n        },\n        yAxis: {\n          axisLabel: {\n            show: true,\n            textStyle: {\n              fontSize: 14\n            },\n            formatter: function (value) {\n              var texts = [];\n              if (value == \"1\") {\n                texts.push('市级');\n              } else if (value == \"2\") {\n                texts.push('省级');\n              } else if (value == \"3\") {\n                texts.push('国级');\n              }\n              return texts;\n            }\n          }\n        },\n        series: [{\n          label: {\n            textStyle: {\n              fontSize: 50\n            }\n          },\n          name: '总计',\n          type: 'bar',\n          barWidth: 50,\n          data: arrProgress,\n          itemStyle: {\n            normal: {\n              //每根柱子颜色设置\n              color: '#1890FF'\n            }\n          }\n        }]\n      }, true)\n\n    },\n    drawPie(id) {\n      this.charts = echarts.init(document.getElementById(id))\n      this.charts.setOption({\n        tooltip: {\n          trigger: 'item',\n        },\n        legend: {\n          orient: 'vertical',\n          x: 'left',\n          data: this.opinion\n        },\n        series: [\n          {\n            name: '数量',\n            type: 'pie',\n            radius: ['0%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              normal: {\n                show: true,\n                position: 'inside'\n              },\n              emphasis: {\n                show: true,\n                textStyle: {\n                  fontSize: '30',\n                  fontWeight: 'bold'\n                }\n              }\n            },\n            labelLine: {\n              normal: {\n                show: false\n              }\n            },\n            data: this.opinionData\n          }\n        ]\n      })\n    },\n    handleQualityClose() {\n      this.qualityModal.type = ''\n      this.qualityModal.record = null\n      this.qualityModal.visible = false\n      this.getData()\n    },\n    handleQualityEdit(record) {\n      this.qualityModal.type = 'edit'\n      this.qualityModal.record = record\n      this.qualityModal.visible = true\n    },\n    handleEmphasisClose() {\n      this.emphasisModal.type = ''\n      this.emphasisModal.record = null\n      this.emphasisModal.visible = false\n      this.getData()\n    },\n    handleEmphasisEdit(record) {\n      this.emphasisModal.type = 'edit'\n      this.emphasisModal.record = record\n      this.emphasisModal.visible = true\n      console.log(this.emphasisModal.record)\n    },\n  }\n}\n",{"version":3,"sources":["Quality.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Quality.vue","sourceRoot":"src/views/implement/quality","sourcesContent":["<template>\r\n  <div>\r\n    <quality-modal\r\n      :record=\"qualityModal.record\"\r\n      :visible=\"qualityModal.visible\"\r\n      :type=\"qualityModal.type\"\r\n      :quality_id=\"qualityModal.building_id\"\r\n      v-if=\"qualityModal.visible\"\r\n      @close=\"handleQualityClose()\">\r\n    </quality-modal>\r\n    <emphasis-modal\r\n      :record=\"emphasisModal.record\"\r\n      :visible=\"emphasisModal.visible\"\r\n      :type=\"emphasisModal.type\"\r\n      :difficulty_id=\"emphasisModal.difficulty_id\"\r\n      v-if=\"emphasisModal.visible\"\r\n      @close=\"handleEmphasisClose()\">\r\n    </emphasis-modal>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-row>\r\n        <a-col\r\n          :xs=\"{ span: 24 }\"\r\n          :sm=\"{ span: 24 }\"\r\n          :xl=\"{ span: 24 }\">\r\n          <div style=\"width: 50%;height:100%;float: left\">\r\n            <div id=\"echartContainer\" style=\"width: 100%; height: 400px;\"></div>\r\n          </div>\r\n          <div style=\"width: 50%;height:100%;float: right\">\r\n            <div id=\"main\" style=\"width: 100%;height: 400px;\"></div>\r\n          </div>\r\n        </a-col>\r\n      </a-row>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-spin :spinning=\"status.listLoading\">\r\n        <a-table\r\n          v-if=\"this.project_category==='1'\"\r\n          bordered\r\n          :columns=\"columns1\"\r\n          :dataSource=\"qualityList\"\r\n          rowKey=\"building_id\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handleQualityEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n         <a-table\r\n          v-else\r\n          bordered\r\n          :columns=\"columns2\"\r\n          :dataSource=\"qualityList\"\r\n          rowKey=\"building_id\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handleQualityEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n      </a-spin>\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n    <a-card style=\"margin-bottom: 16px\">\r\n      <a-spin :spinning=\"status.listLoading\">\r\n        <a-table\r\n          bordered\r\n          :columns=\"emphasisColumns\"\r\n          :dataSource=\"emphasisList\"\r\n          rowKey=\"difficulty_id\"\r\n          :pagination=\"false\">\r\n          <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n            <a-button @click=\"handleEmphasisEdit(record)\">编辑</a-button>\r\n          </template>\r\n        </a-table>\r\n      </a-spin>\r\n      <a-col\r\n        :xs=\"{span: 24}\"\r\n        :sm=\"{span: 20, offset: 2}\"\r\n        :xl=\"{span: 16, offset: 4}\">\r\n      </a-col>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import echarts from 'echarts'\r\n  import QualityModal from './components/QualityModal'\r\n  import EmphasisModal from './components/EmphasisModal'\r\n  import apiProject from '../../../api/project'\r\n  import TableModal from './components/TableModal'\r\n  import api from '../../../api/implement'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  const columns1 = [\r\n    {\r\n      title: '建筑名称',\r\n      dataIndex: 'name',\r\n      width: '20%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '奖项',\r\n      dataIndex: 'awards',\r\n      customRender: (text, record) => {\r\n        if (record.awards === '1')\r\n          return '市级'\r\n        else if (record.awards === '2')\r\n          return '省级'\r\n        else if (record.awards === '3')\r\n          return '国级'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '基础',\r\n      dataIndex: 'base',\r\n      customRender: (text, record) => {\r\n        if (record.base === '1')\r\n          return '合格'\r\n        else if (record.base === '2')\r\n          return '不合格'\r\n        else if (record.base === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '主体',\r\n      dataIndex: 'mainBody',\r\n      customRender: (text, record) => {\r\n        if (record.mainBody === '1')\r\n          return '合格'\r\n        else if (record.mainBody === '2')\r\n          return '不合格'\r\n        else if (record.mainBody === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '装饰',\r\n      dataIndex: 'decorate',\r\n      customRender: (text, record) => {\r\n        if (record.decorate === '1')\r\n          return '合格'\r\n        else if (record.decorate === '2')\r\n          return '不合格'\r\n        else if (record.decorate === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '屋面',\r\n      dataIndex: 'roofing',\r\n      customRender: (text, record) => {\r\n        if (record.roofing === '1')\r\n          return '合格'\r\n        else if (record.roofing === '2')\r\n          return '不合格'\r\n         else if (record.roofing === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '防水',\r\n      dataIndex: 'waterproof',\r\n      customRender: (text, record) => {\r\n        if (record.waterproof === '1')\r\n          return '合格'\r\n        else if (record.waterproof === '2')\r\n          return '不合格'\r\n        else if (record.waterproof === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '保温',\r\n      dataIndex: 'insulation',\r\n      customRender: (text, record) => {\r\n        if (record.insulation === '1')\r\n          return '合格'\r\n        else if (record.insulation === '2')\r\n          return '不合格'\r\n        else if (record.insulation === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  const columns2 = [\r\n    {\r\n      title: '建筑名称',\r\n      dataIndex: 'name',\r\n      width: '20%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '奖项',\r\n      dataIndex: 'awards',\r\n      customRender: (text, record) => {\r\n        if (record.awards === '1')\r\n          return '市级'\r\n        else if (record.awards === '2')\r\n          return '省级'\r\n        else if (record.awards === '3')\r\n          return '国级'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '基础',\r\n      dataIndex: 'base',\r\n      customRender: (text, record) => {\r\n        if (record.base === '1')\r\n          return '合格'\r\n        else if (record.base === '2')\r\n          return '不合格'\r\n        else if (record.base === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '路层',\r\n      dataIndex: 'choice_A',\r\n      customRender: (text, record) => {\r\n        if (record.choice_A === '1')\r\n          return '合格'\r\n        else if (record.choice_A === '2')\r\n          return '不合格'\r\n        else if (record.choice_A === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '路面',\r\n      dataIndex: 'choice_B',\r\n      customRender: (text, record) => {\r\n        if (record.choice_B === '1')\r\n          return '合格'\r\n        else if (record.choice_B === '2')\r\n          return '不合格'\r\n        else if (record.choice_B === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '桥涵',\r\n      dataIndex: 'choice_C',\r\n      customRender: (text, record) => {\r\n        if (record.choice_C === '1')\r\n          return '合格'\r\n        else if (record.choice_C === '2')\r\n          return '不合格'\r\n         else if (record.choice_C === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '路灯',\r\n      dataIndex: 'choice_D',\r\n      customRender: (text, record) => {\r\n        if (record.choice_D === '1')\r\n          return '合格'\r\n        else if (record.choice_D === '2')\r\n          return '不合格'\r\n        else if (record.choice_D === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '绿化',\r\n      dataIndex: 'choice_E',\r\n      customRender: (text, record) => {\r\n        if (record.choice_E === '1')\r\n          return '合格'\r\n        else if (record.choice_E === '2')\r\n          return '不合格'\r\n        else if (record.choice_E === '3')\r\n          return '严重不合格'\r\n      },\r\n      width: '10%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  const emphasisColumns = [\r\n    {\r\n      title: '重点',\r\n      dataIndex: 'keyPoint',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '难点',\r\n      dataIndex: 'difficulty',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '通病',\r\n      dataIndex: 'CommonFailing',\r\n      width: '25%',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '编辑',\r\n      dataIndex: 'operation',\r\n      scopedSlots: {customRender: 'operation'},\r\n      align: 'center'\r\n    }\r\n  ]\r\n  export default {\r\n    name: \"Quality\",\r\n    components: {\r\n      QualityModal,\r\n      EmphasisModal,\r\n    },\r\n    props: {\r\n      id: Number\r\n    },\r\n    data() {\r\n      return {\r\n        status: {\r\n          listLoading: true,\r\n          tableLoading: true\r\n        },\r\n        project_category:null,\r\n        columns1,\r\n        columns2,\r\n        qualityList: [],\r\n        emphasisColumns,\r\n        emphasisList: [],\r\n        not_num: '',\r\n        reply_num: '',\r\n        option1: {\r\n          tooltip: {},\r\n          xAxis: {\r\n            data: [],\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 20\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 14\r\n              },\r\n              formatter: function (value) {\r\n                var texts = [];\r\n                if (value == \"1\") {\r\n                  texts.push('市级');\r\n                } else if (value == \"2\") {\r\n                  texts.push('省级');\r\n                } else if (value == \"3\") {\r\n                  texts.push('国级');\r\n                }\r\n                return texts;\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            label: {\r\n              textStyle: {\r\n                fontSize: 50\r\n              }\r\n            },\r\n            name: '奖项',\r\n            type: 'bar',\r\n            barWidth: 50,\r\n            data: [1, 2, 3, 3],\r\n            itemStyle: {\r\n              normal: {\r\n                //每根柱子颜色设置\r\n                color: function (params) {\r\n                  let colorList = [\r\n                    '#00B0F0'\r\n                  ]\r\n                  return colorList[params.dataIndex]\r\n                }\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        chart1: null,\r\n        charts: '',\r\n        opinion: ['已回复', '未回复'],\r\n        opinionData: [\r\n          {value: 50, name: '已回复', itemStyle: {color: '#00b0f0'}},\r\n          {value: 50, name: '未回复', itemStyle: {color: '#7030a0'}},\r\n        ],\r\n        qualityModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          quality_id: this.id\r\n        },\r\n        emphasisModal: {\r\n          record: null,\r\n          visible: false,\r\n          type: '1',\r\n          emphasis_id: this.id\r\n        },\r\n        tableModal: {\r\n          record: null,\r\n          visible: false,\r\n          table_id: this.id\r\n        },\r\n        form: this.$form.createForm(this),\r\n        project_id: this.projectSelected().id\r\n      }\r\n    },\r\n    mounted() {\r\n      this.chart1 = echarts.init(document.getElementById('echartContainer'))\r\n      this.chart1.setOption(this.option1, true)\r\n      window.onresize = this.chart1.resize\r\n      this.getData()\r\n      this.$nextTick(function () {\r\n        this.drawPie('main')\r\n      })\r\n    },\r\n    methods: {\r\n      ...mapGetters(['projectSelected']),\r\n      getData() {\r\n        apiProject.getProject(this.projectSelected().id)\r\n          .then(data => {\r\n            this.project_category = data.category\r\n          })\r\n        api.getQualityList(this.project_id)\r\n          .then(data => {\r\n            console.log(data)\r\n            this.qualityList = data\r\n            this.change()\r\n            this.status.listLoading = false\r\n          })\r\n        api.getDifficultyList(this.project_id)\r\n          .then(data => {\r\n            this.emphasisList = data\r\n          })\r\n        api.getContractNotice(this.project_id)\r\n          .then(data => {\r\n            this.not_num = data.not_num\r\n            this.reply_num = data.reply_num\r\n            this.opinionData[0].value=this.reply_num\r\n            this.opinionData[1].value=this.not_num\r\n            this.$nextTick(function () {\r\n              this.drawPie('main')\r\n            })\r\n          })\r\n      },\r\n      change() {\r\n        var arrName = []\r\n        var arrProgress = []\r\n        for (var building of this.qualityList) {\r\n          console.log(this.qualityList)\r\n          console.log(building)\r\n          arrName.push(building.name)\r\n          arrProgress.push(building.awards)\r\n        }\r\n        // console.log(building)\r\n        // console.log(arrName)\r\n        // console.log(arrProgress)\r\n        this.chart1.setOption({\r\n          tooltip: {},\r\n          xAxis: {\r\n            data: arrName,\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 20\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                fontSize: 14\r\n              },\r\n              formatter: function (value) {\r\n                var texts = [];\r\n                if (value == \"1\") {\r\n                  texts.push('市级');\r\n                } else if (value == \"2\") {\r\n                  texts.push('省级');\r\n                } else if (value == \"3\") {\r\n                  texts.push('国级');\r\n                }\r\n                return texts;\r\n              }\r\n            }\r\n          },\r\n          series: [{\r\n            label: {\r\n              textStyle: {\r\n                fontSize: 50\r\n              }\r\n            },\r\n            name: '总计',\r\n            type: 'bar',\r\n            barWidth: 50,\r\n            data: arrProgress,\r\n            itemStyle: {\r\n              normal: {\r\n                //每根柱子颜色设置\r\n                color: '#1890FF'\r\n              }\r\n            }\r\n          }]\r\n        }, true)\r\n\r\n      },\r\n      drawPie(id) {\r\n        this.charts = echarts.init(document.getElementById(id))\r\n        this.charts.setOption({\r\n          tooltip: {\r\n            trigger: 'item',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            x: 'left',\r\n            data: this.opinion\r\n          },\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'pie',\r\n              radius: ['0%', '70%'],\r\n              avoidLabelOverlap: false,\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'inside'\r\n                },\r\n                emphasis: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    fontSize: '30',\r\n                    fontWeight: 'bold'\r\n                  }\r\n                }\r\n              },\r\n              labelLine: {\r\n                normal: {\r\n                  show: false\r\n                }\r\n              },\r\n              data: this.opinionData\r\n            }\r\n          ]\r\n        })\r\n      },\r\n      handleQualityClose() {\r\n        this.qualityModal.type = ''\r\n        this.qualityModal.record = null\r\n        this.qualityModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleQualityEdit(record) {\r\n        this.qualityModal.type = 'edit'\r\n        this.qualityModal.record = record\r\n        this.qualityModal.visible = true\r\n      },\r\n      handleEmphasisClose() {\r\n        this.emphasisModal.type = ''\r\n        this.emphasisModal.record = null\r\n        this.emphasisModal.visible = false\r\n        this.getData()\r\n      },\r\n      handleEmphasisEdit(record) {\r\n        this.emphasisModal.type = 'edit'\r\n        this.emphasisModal.record = record\r\n        this.emphasisModal.visible = true\r\n        console.log(this.emphasisModal.record)\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}