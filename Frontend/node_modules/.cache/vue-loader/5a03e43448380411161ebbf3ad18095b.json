{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\context-menu\\Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\context-menu\\Menu.vue","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-context-menu',\n  props: {\n    width: {\n      type: Number\n    }\n  },\n  mixins: [commonMixin('contextMenu')],\n  methods: {\n    load () {\n      const {width, BMap, map, $parent} = this\n      const parent = this.parent = $parent.originInstance || map\n      if (this.originInstance) {\n        parent.removeContextMenu(this.originInstance)\n      }\n      const menu = this.originInstance = new BMap.ContextMenu()\n      for (const item of this.$children) {\n        if (item.seperator) {\n          menu.addSeparator()\n          continue\n        }\n        const menuItem = new BMap.MenuItem(item.text, function (point, pixel) {\n          item.callback({\n            point,\n            pixel,\n            BMap,\n            map,\n            target: parent\n          })\n        }, {\n          width,\n          id: item.id,\n          iconUrl: item.iconUrl\n        })\n        item.disabled ? menuItem.disable() : menuItem.enable()\n        item.originInstance = menuItem\n        menu.addItem(menuItem)\n      }\n      parent.addContextMenu(menu)\n    }\n  }\n}\n",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"node_modules/vue-baidu-map/components/context-menu","sourcesContent":["<template>\n<div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bm-context-menu',\n  props: {\n    width: {\n      type: Number\n    }\n  },\n  mixins: [commonMixin('contextMenu')],\n  methods: {\n    load () {\n      const {width, BMap, map, $parent} = this\n      const parent = this.parent = $parent.originInstance || map\n      if (this.originInstance) {\n        parent.removeContextMenu(this.originInstance)\n      }\n      const menu = this.originInstance = new BMap.ContextMenu()\n      for (const item of this.$children) {\n        if (item.seperator) {\n          menu.addSeparator()\n          continue\n        }\n        const menuItem = new BMap.MenuItem(item.text, function (point, pixel) {\n          item.callback({\n            point,\n            pixel,\n            BMap,\n            map,\n            target: parent\n          })\n        }, {\n          width,\n          id: item.id,\n          iconUrl: item.iconUrl\n        })\n        item.disabled ? menuItem.disable() : menuItem.enable()\n        item.originInstance = menuItem\n        menu.addItem(menuItem)\n      }\n      parent.addContextMenu(menu)\n    }\n  }\n}\n</script>\n"]}]}