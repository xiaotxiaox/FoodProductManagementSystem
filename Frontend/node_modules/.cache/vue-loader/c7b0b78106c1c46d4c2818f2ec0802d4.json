{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-schart\\src\\vue-schart.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-schart\\src\\vue-schart.vue","mtime":1524625501000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport sChart from 'schart.js';\nexport default {\n    data() {\n        return {\n            schart: null,\n            opt: {}\n        }\n    },\n    props: {\n        canvasId: {\n            type: String,\n            default: ''\n        },\n        type: {\n            type: String,\n            default: 'bar',\n        },\n        data: {\n            type: Array,\n            default: [],\n        },\n        options: {\n            type: Object,\n            required: false\n        }\n    },\n    mounted() {\n        this.renderChart();\n    },\n    methods: {\n        renderChart(){\n            this.schart = null;\n            this.opt = this.options;\n            if(!this.width || !this.height){\n                if(!this.opt){\n                    this.opt = {autoWidth: true};\n                }else{\n                    this.opt['autoWidth'] = true;\n                }\n            }\n            this.schart = new sChart(this.canvasId, this.type, this.data, this.opt);\n        }\n    },\n    watch: {\n        data(){\n            this.renderChart();\n        },\n        options(){\n            this.renderChart();\n        },\n        type(){\n            this.renderChart();\n        }\n    }\n}\n",{"version":3,"sources":["vue-schart.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vue-schart.vue","sourceRoot":"node_modules/vue-schart/src","sourcesContent":["<template>\r\n    <div>\r\n        <canvas :id=\"canvasId\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import sChart from 'schart.js';\r\n    export default {\r\n        data() {\r\n            return {\r\n                schart: null,\r\n                opt: {}\r\n            }\r\n        },\r\n        props: {\r\n            canvasId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'bar',\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: [],\r\n            },\r\n            options: {\r\n                type: Object,\r\n                required: false\r\n            }\r\n        },\r\n        mounted() {\r\n            this.renderChart();\r\n        },\r\n        methods: {\r\n            renderChart(){\r\n                this.schart = null;\r\n                this.opt = this.options;\r\n                if(!this.width || !this.height){\r\n                    if(!this.opt){\r\n                        this.opt = {autoWidth: true};\r\n                    }else{\r\n                        this.opt['autoWidth'] = true;\r\n                    }\r\n                }\r\n                this.schart = new sChart(this.canvasId, this.type, this.data, this.opt);\r\n            }\r\n        },\r\n        watch: {\r\n            data(){\r\n                this.renderChart();\r\n            },\r\n            options(){\r\n                this.renderChart();\r\n            },\r\n            type(){\r\n                this.renderChart();\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}