{"remainingRequest":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\controls\\Copyright.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-baidu-map\\components\\controls\\Copyright.vue","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FoodProductManagementSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport commonMixin from '../base/mixins/common.js'\nimport {createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-copyright',\n  render () {},\n  mixins: [commonMixin('control')],\n  props: ['anchor', 'offset', 'copyright'],\n  watch: {\n    anchor () {\n      this.reload()\n    },\n    offset () {\n      this.reload()\n    },\n    copyright () {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, offset, anchor, updateCopyrightList} = this\n      this.originInstance = new BMap.CopyrightControl({\n        anchor: global[anchor],\n        offset: offset && createSize(BMap, offset)\n      })\n      updateCopyrightList()\n      map.addControl(this.originInstance)\n    },\n    updateCopyrightList () {\n      const {BMap, map} = this\n      const {removeCopyright, getCopyrightCollection} = this.originInstance\n      const copyrightList = getCopyrightCollection()\n      copyrightList && copyrightList.forEach(item => {\n        removeCopyright(item.id)\n      })\n      this.copyright && this.copyright.forEach(item => {\n        const bounds = item.bounds\n          ? new BMap.Bounds(new BMap.Point(item.bounds.sw.lng, item.bounds.sw.lat), new BMap.Point(item.bounds.ne.lng, item.bounds.ne.lat))\n          : map.getBounds()\n        this.originInstance.addCopyright({\n          id: item.id,\n          content: item.content,\n          bounds\n        })\n        this.originInstance.getCopyrightCollection()\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Copyright.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Copyright.vue","sourceRoot":"node_modules/vue-baidu-map/components/controls","sourcesContent":["<script>\nimport commonMixin from '../base/mixins/common.js'\nimport {createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-copyright',\n  render () {},\n  mixins: [commonMixin('control')],\n  props: ['anchor', 'offset', 'copyright'],\n  watch: {\n    anchor () {\n      this.reload()\n    },\n    offset () {\n      this.reload()\n    },\n    copyright () {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, offset, anchor, updateCopyrightList} = this\n      this.originInstance = new BMap.CopyrightControl({\n        anchor: global[anchor],\n        offset: offset && createSize(BMap, offset)\n      })\n      updateCopyrightList()\n      map.addControl(this.originInstance)\n    },\n    updateCopyrightList () {\n      const {BMap, map} = this\n      const {removeCopyright, getCopyrightCollection} = this.originInstance\n      const copyrightList = getCopyrightCollection()\n      copyrightList && copyrightList.forEach(item => {\n        removeCopyright(item.id)\n      })\n      this.copyright && this.copyright.forEach(item => {\n        const bounds = item.bounds\n          ? new BMap.Bounds(new BMap.Point(item.bounds.sw.lng, item.bounds.sw.lat), new BMap.Point(item.bounds.ne.lng, item.bounds.ne.lat))\n          : map.getBounds()\n        this.originInstance.addCopyright({\n          id: item.id,\n          content: item.content,\n          bounds\n        })\n        this.originInstance.getCopyrightCollection()\n      })\n    }\n  }\n}\n</script>\n"]}]}