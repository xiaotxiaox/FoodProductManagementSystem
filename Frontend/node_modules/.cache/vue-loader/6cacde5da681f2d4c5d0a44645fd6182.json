{"remainingRequest":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\TaskModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ConstructionConsultationSystem\\Frontend\\src\\views\\implement\\progress\\components\\TaskModal.vue","mtime":1571621693443},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ConstructionConsultationSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '../../../../api/implement'\nimport {mapGetters} from 'vuex'\nimport moment from 'moment'\n\nexport default {\n  name: 'TaskModal',\n  props: {\n    record: Object,\n    visible: Boolean,\n    type: String,\n  },\n  data() {\n    return {\n      project_id: this.projectSelected().id,\n      layout: {\n        'label-col': {span: 8},\n        'wrapper-col': {span: 12}\n      },\n      form: this.$form.createForm(this),\n      matter: {}\n    }\n  },\n  mounted() {\n    this.getData()\n  },\n  methods: {\n    ...mapGetters(['projectSelected']),\n    getData() {\n      if (this.isEdit) {\n        if (this.record.real_start_date !== null) {\n          this.record.real_start_date = new moment(this.record.real_start_date)\n        }\n        if (this.record.real_end_date !== null) {\n          this.record.real_end_date = new moment(this.record.real_end_date)\n        }\n        if (this.record.dream_end_date !== null) {\n          this.record.dream_end_date = new moment(this.record.dream_end_date)\n        }\n        if (this.record.dream_start_date !== null) {\n          this.record.dream_start_date = new moment(this.record.dream_start_date)\n        }\n      }\n    },\n    handleTaskOk() {\n      this.form.validateFields((error, data) => {\n        if (!error) {\n          if(data.real_start_date)\n            data.real_start_date = data.real_start_date.format('YYYY-MM-DD')\n          if(data.real_end_date)\n            data.real_end_date = data.real_end_date.format('YYYY-MM-DD')\n          data.dream_start_date = data.dream_start_date.format('YYYY-MM-DD')\n          data.dream_end_date = data.dream_end_date.format('YYYY-MM-DD')\n          console.log(\"1\")\n          console.log(data.state)\n          if (data.state == \"1\")\n            data.state = 1\n          else\n            data.state = 2\n          if (this.isEdit) {\n            api.updateTask(this.record.chart_id, data)\n              .then(data => {\n                console.log(\"data.state\")\n                console.log(data.state)\n                this.$notification.success({message: '成功', description: '更新成功', key: 'SUCCESS'})\n                this.$emit('close')\n              })\n          } else {\n            api.createTask(this.project_id, data)\n              .then(data => {\n                this.$notification.success({message: '成功', description: '新建成功', key: 'SUCCESS'})\n                this.$emit('close')\n              })\n          }\n        }\n      })\n    },\n    handleTaskCancel() {\n      this.$emit('close')\n    },\n    validateProgressLimit(rule, value, callback) {\n      if (this.isEdit) {\n        callback()\n      } else {\n        if (value < 0 || value > 100)\n          callback('false')\n        else\n          callback()\n      }\n    }\n\n  },\n  computed: {\n    isEdit() {\n      return this.type === 'edit'\n    },\n    title() {\n      return this.isEdit ? '编辑' : '列名管理'\n    }\n  }\n}\n",{"version":3,"sources":["TaskModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskModal.vue","sourceRoot":"src/views/implement/progress/components","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :keyboard=\"false\"\r\n    :maskClosable=\"false\"\r\n    okText=\"保存\"\r\n    okType=\"primary\"\r\n    @ok=\"handleTaskOk()\"\r\n    @cancel=\"handleTaskCancel()\">\r\n    <a-form\r\n      :form=\"form\">\r\n      <a-form-item\r\n        label=\"任务名称\"\r\n        v-bind=\"layout\">\r\n        <a-input\r\n          type=\"text\"\r\n          v-decorator=\"[\r\n            'name',\r\n            {\r\n              rules: [\r\n                { max:64, message: '长度在64个汉字以内' },\r\n                 {required: true, message: '请输入任务名称'}\r\n              ],\r\n              validateTrigger: 'blur',\r\n              initialValue: record ? record.name : null\r\n            }\r\n          ]\">\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"计划开始日期\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12}\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n      'dream_start_date',\r\n      {rules: [{type: 'object'},{required: true, message: '请选择日期'}],\r\n      initialValue: record ? record.dream_start_date : null}\r\n      ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"计划截止日期\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12}\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n      'dream_end_date',\r\n      {rules: [{type: 'object'},{required: true, message: '请选择日期'}],\r\n      initialValue: record ? record.dream_end_date : null}\r\n      ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"实际开始日期\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12}\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n      'real_start_date',\r\n      {rules: [{type: 'object'}],\r\n      initialValue: record ? record.real_start_date : null}\r\n      ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"实际截止日期\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12}\"\r\n        v-bind=\"layout\">\r\n        <a-date-picker\r\n          style=\"width:100%\"\r\n          v-decorator=\"[\r\n      'real_end_date',\r\n      {rules: [{type: 'object'}],\r\n      initialValue: record ? record.real_end_date : null}\r\n      ]\"></a-date-picker>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"状态\"\r\n        :label-col=\"{span: 8}\"\r\n        :wrapper-col=\"{span: 12}\"\r\n        v-bind=\"layout\">\r\n        <a-select\r\n          placeholder=\"请选择状态\"\r\n          v-decorator=\"[\r\n                'state',\r\n                {rules: [{required: true, message: '请选择状态'}],\r\n                initialValue: record ? record.state : null}\r\n              ]\">\r\n          <a-select-option key=\"1\">关键</a-select-option>\r\n          <a-select-option key=\"2\">一般</a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import api from '../../../../api/implement'\r\n  import {mapGetters} from 'vuex'\r\n  import moment from 'moment'\r\n\r\n  export default {\r\n    name: 'TaskModal',\r\n    props: {\r\n      record: Object,\r\n      visible: Boolean,\r\n      type: String,\r\n    },\r\n    data() {\r\n      return {\r\n        project_id: this.projectSelected().id,\r\n        layout: {\r\n          'label-col': {span: 8},\r\n          'wrapper-col': {span: 12}\r\n        },\r\n        form: this.$form.createForm(this),\r\n        matter: {}\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getData()\r\n    },\r\n    methods: {\r\n      ...mapGetters(['projectSelected']),\r\n      getData() {\r\n        if (this.isEdit) {\r\n          if (this.record.real_start_date !== null) {\r\n            this.record.real_start_date = new moment(this.record.real_start_date)\r\n          }\r\n          if (this.record.real_end_date !== null) {\r\n            this.record.real_end_date = new moment(this.record.real_end_date)\r\n          }\r\n          if (this.record.dream_end_date !== null) {\r\n            this.record.dream_end_date = new moment(this.record.dream_end_date)\r\n          }\r\n          if (this.record.dream_start_date !== null) {\r\n            this.record.dream_start_date = new moment(this.record.dream_start_date)\r\n          }\r\n        }\r\n      },\r\n      handleTaskOk() {\r\n        this.form.validateFields((error, data) => {\r\n          if (!error) {\r\n            if(data.real_start_date)\r\n              data.real_start_date = data.real_start_date.format('YYYY-MM-DD')\r\n            if(data.real_end_date)\r\n              data.real_end_date = data.real_end_date.format('YYYY-MM-DD')\r\n            data.dream_start_date = data.dream_start_date.format('YYYY-MM-DD')\r\n            data.dream_end_date = data.dream_end_date.format('YYYY-MM-DD')\r\n            console.log(\"1\")\r\n            console.log(data.state)\r\n            if (data.state == \"1\")\r\n              data.state = 1\r\n            else\r\n              data.state = 2\r\n            if (this.isEdit) {\r\n              api.updateTask(this.record.chart_id, data)\r\n                .then(data => {\r\n                  console.log(\"data.state\")\r\n                  console.log(data.state)\r\n                  this.$notification.success({message: '成功', description: '更新成功', key: 'SUCCESS'})\r\n                  this.$emit('close')\r\n                })\r\n            } else {\r\n              api.createTask(this.project_id, data)\r\n                .then(data => {\r\n                  this.$notification.success({message: '成功', description: '新建成功', key: 'SUCCESS'})\r\n                  this.$emit('close')\r\n                })\r\n            }\r\n          }\r\n        })\r\n      },\r\n      handleTaskCancel() {\r\n        this.$emit('close')\r\n      },\r\n      validateProgressLimit(rule, value, callback) {\r\n        if (this.isEdit) {\r\n          callback()\r\n        } else {\r\n          if (value < 0 || value > 100)\r\n            callback('false')\r\n          else\r\n            callback()\r\n        }\r\n      }\r\n\r\n    },\r\n    computed: {\r\n      isEdit() {\r\n        return this.type === 'edit'\r\n      },\r\n      title() {\r\n        return this.isEdit ? '编辑' : '列名管理'\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>"]}]}